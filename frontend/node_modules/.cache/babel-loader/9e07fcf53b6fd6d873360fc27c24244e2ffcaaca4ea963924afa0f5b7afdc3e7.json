{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n\n  // Filter works based on view mode (ongoing/completed) and search query\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat();\n    if (viewMode === \"ongoing\") {\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index);\n    }\n    return [];\n  }, [viewMode, works, completedWorks]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n\n  // Handle marking a single task as completed\n  const handleTaskComplete = (workId, taskIndex) => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      for (const [key, workList] of Object.entries(updatedWorks)) {\n        const work = workList.find(w => w.id === workId);\n        if (work) {\n          work.subWorks[taskIndex].completed = !work.subWorks[taskIndex].completed;\n          const totalTasks = work.subWorks.length;\n          const completedTasks = work.subWorks.filter(task => task.completed).length;\n          work.progress = completedTasks / totalTasks * 100;\n          if (work.progress === 100) {\n            handleToggleComplete(work);\n          }\n        }\n      }\n      return updatedWorks;\n    });\n  };\n\n  // Handle marking work as completed or ongoing\n  const handleToggleComplete = work => {\n    if (viewMode === \"ongoing\") {\n      setCompletedWorks(prev => [...prev, work]);\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(key => {\n          updatedWorks[key] = updatedWorks[key].filter(w => w.id !== work.id);\n        });\n        return updatedWorks;\n      });\n    } else {\n      setCompletedWorks(prev => prev.filter(w => w.id !== work.id));\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = work.type || \"doNow\";\n        updatedWorks[type] = [...updatedWorks[type], work];\n        return updatedWorks;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : \"No completed works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.map(work => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"work-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"work-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"item-name\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: viewMode === \"completed\",\n                onChange: () => handleToggleComplete(work)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 21\n              }, this), work.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-actions\",\n              children: [viewMode === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                id: \"del-bt\",\n                children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                  size: 20,\n                  color: \"#FF6969\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"expand-bt\",\n                onClick: () => toggleExpand(work.id),\n                children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress\",\n              style: {\n                width: `${work.progress || 0}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, this), expandedWorkIds.includes(work.id) && work.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"task-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: task.completed || false,\n              onChange: () => handleTaskComplete(work.id, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                textDecoration: task.completed ? \"line-through\" : \"none\"\n              },\n              children: task.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 23\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this))]\n        }, work.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"z6fNFpHzP+IlSbnL6Y3T/WrKrJs=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useMemo","AiFillDelete","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Project","works","setWorks","completedWorks","setCompletedWorks","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","filteredWorks","allOngoingWorks","Object","values","flat","filter","work","some","completedWork","id","index","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleTaskComplete","taskIndex","prevWorks","updatedWorks","key","workList","entries","find","w","subWorks","completed","totalTasks","length","completedTasks","task","progress","handleToggleComplete","prev","keys","forEach","type","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","map","checked","name","color","style","width","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n\r\n  // Filter works based on view mode (ongoing/completed) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat();\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      return allOngoingWorks.filter(\r\n        (work) =>\r\n          !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) =>\r\n          self.findIndex((work) => work.id === completedWork.id) === index\r\n      );\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  // Handle marking a single task as completed\r\n  const handleTaskComplete = (workId, taskIndex) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      for (const [key, workList] of Object.entries(updatedWorks)) {\r\n        const work = workList.find((w) => w.id === workId);\r\n        if (work) {\r\n          work.subWorks[taskIndex].completed =\r\n            !work.subWorks[taskIndex].completed;\r\n          const totalTasks = work.subWorks.length;\r\n          const completedTasks = work.subWorks.filter((task) => task.completed)\r\n            .length;\r\n\r\n          work.progress = (completedTasks / totalTasks) * 100;\r\n\r\n          if (work.progress === 100) {\r\n            handleToggleComplete(work);\r\n          }\r\n        }\r\n      }\r\n      return updatedWorks;\r\n    });\r\n  };\r\n\r\n  // Handle marking work as completed or ongoing\r\n  const handleToggleComplete = (work) => {\r\n    if (viewMode === \"ongoing\") {\r\n      setCompletedWorks((prev) => [...prev, work]);\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((key) => {\r\n          updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== work.id);\r\n        });\r\n        return updatedWorks;\r\n      });\r\n    } else {\r\n      setCompletedWorks((prev) => prev.filter((w) => w.id !== work.id));\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = work.type || \"doNow\";\r\n        updatedWorks[type] = [...updatedWorks[type], work];\r\n        return updatedWorks;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n      </div>\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : \"No completed works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.map((work) => (\r\n              <li key={work.id} className=\"work-item\">\r\n                <div className=\"work-header\">\r\n                  <label className=\"item-name\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={viewMode === \"completed\"}\r\n                      onChange={() => handleToggleComplete(work)}\r\n                    />\r\n                    {work.name}\r\n                  </label>\r\n                  <div className=\"work-actions\">\r\n                    {viewMode === \"ongoing\" && (\r\n                      <button id=\"del-bt\">\r\n                        <AiFillDelete size={20} color=\"#FF6969\" />\r\n                      </button>\r\n                    )}\r\n                    <button\r\n                      className=\"expand-bt\"\r\n                      onClick={() => toggleExpand(work.id)}\r\n                    >\r\n                      {expandedWorkIds.includes(work.id) ? (\r\n                        <FaChevronUp />\r\n                      ) : (\r\n                        <FaChevronDown />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <div className=\"progress-bar\">\r\n                  <div\r\n                    className=\"progress\"\r\n                    style={{ width: `${work.progress || 0}%` }}\r\n                  ></div>\r\n                </div>\r\n                {expandedWorkIds.includes(work.id) &&\r\n                  work.subWorks.map((task, index) => (\r\n                    <li key={index} className=\"task-item\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={task.completed || false}\r\n                        onChange={() => handleTaskComplete(work.id, index)}\r\n                      />\r\n                      <span\r\n                        style={{\r\n                          textDecoration: task.completed ? \"line-through\" : \"none\",\r\n                        }}\r\n                      >\r\n                        {task.name}\r\n                      </span>\r\n                    </li>\r\n                  ))}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}