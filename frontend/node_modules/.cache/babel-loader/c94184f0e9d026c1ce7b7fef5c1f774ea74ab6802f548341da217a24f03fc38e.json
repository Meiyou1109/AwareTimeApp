{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks,\n  recycledWorks,\n  setRecycledWorks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState(() => {\n    const savedTaskStatus = localStorage.getItem(\"taskCompletionStatus\");\n    return savedTaskStatus ? JSON.parse(savedTaskStatus) : {};\n  });\n\n  // Cập nhật localStorage mỗi khi taskCompletionStatus thay đổi\n  useEffect(() => {\n    localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(taskCompletionStatus));\n  }, [taskCompletionStatus]);\n\n  // Filter works based on view mode (ongoing/completed/recycle) and search query\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat();\n    if (viewMode === \"ongoing\") {\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index);\n    }\n    if (viewMode === \"recycle\") {\n      return recycledWorks;\n    }\n    return [];\n  }, [viewMode, works, completedWorks, recycledWorks]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n\n  // Expand all works\n  const handleExpandAll = () => {\n    setExpandedWorkIds(filteredWorks.map(work => work.id));\n  };\n\n  // Collapse all works\n  const handleCollapseAll = () => {\n    setExpandedWorkIds([]);\n  };\n\n  // Toggle complete status of a work\n  const handleToggleComplete = (work, isManual = true) => {\n    const updatedWork = {\n      ...work,\n      isCompleted: !work.isCompleted\n    };\n\n    // Cập nhật trạng thái task khi tick/untick thủ công\n    if (isManual) {\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        if (updatedWork.isCompleted) {\n          updatedWork.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = true; // Tick tất cả các task\n          });\n        } else {\n          updatedWork.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = false; // Untick tất cả các task\n          });\n        }\n        // Lưu trạng thái mới vào localStorage\n        localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(updatedStatus));\n        return updatedStatus;\n      });\n    }\n\n    // Di chuyển giữa ongoing và completedWorks dựa trên trạng thái\n    if (updatedWork.isCompleted) {\n      setCompletedWorks(prev => {\n        const newCompletedWorks = [...prev, updatedWork];\n        localStorage.setItem(\"worksdone\", JSON.stringify(newCompletedWorks));\n        return newCompletedWorks;\n      });\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(key => {\n          updatedWorks[key] = updatedWorks[key].filter(w => w.id !== work.id);\n        });\n        localStorage.setItem(\"works\", JSON.stringify(updatedWorks));\n        return updatedWorks;\n      });\n    } else {\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = work.type || \"doNow\";\n        if (!updatedWorks[type].some(w => w.id === work.id)) {\n          updatedWorks[type] = [...updatedWorks[type], updatedWork];\n        }\n        localStorage.setItem(\"works\", JSON.stringify(updatedWorks));\n        return updatedWorks;\n      });\n      setCompletedWorks(prev => {\n        const newCompletedWorks = prev.filter(w => w.id !== work.id);\n        localStorage.setItem(\"worksdone\", JSON.stringify(newCompletedWorks));\n        return newCompletedWorks;\n      });\n    }\n  };\n\n  // Toggle task completion status\n  const toggleTaskCompletion = (workId, taskIndex) => {\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      const taskKey = `${workId}-${taskIndex}`;\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\n\n      // Lưu trạng thái mới vào localStorage\n      localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(updatedStatus));\n\n      // Cập nhật trạng thái của work nếu tất cả task đều hoàn thành hoặc chưa hoàn thành\n      const work = filteredWorks.find(w => w.id === workId);\n      if (work) {\n        const totalTasks = work.subWorks.length;\n        const completedTasks = work.subWorks.filter((_, index) => updatedStatus[`${workId}-${index}`]).length;\n        if (completedTasks === totalTasks) {\n          handleToggleComplete(work, false); // Auto tick work when all tasks are completed\n        } else if (work.isCompleted) {\n          handleToggleComplete(work, false); // Auto untick work when not all tasks are completed\n        }\n      }\n      return updatedStatus;\n    });\n  };\n\n  // Handle deleting a work item\n  const handleDeleteWork = workId => {\n    const deletedWork = filteredWorks.find(work => work.id === workId);\n    if (deletedWork) {\n      setRecycledWorks(prevRecycledWorks => [...prevRecycledWorks, deletedWork]);\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(key => {\n        updatedWorks[key] = updatedWorks[key].filter(w => w.id !== workId);\n      });\n      return updatedWorks;\n    });\n    setCompletedWorks(prevCompletedWorks => prevCompletedWorks.filter(work => work.id !== workId));\n  };\n\n  // Handle restoring a work item from recycle bin\n  const handleRestoreWork = workId => {\n    const restoredWork = recycledWorks.find(work => work.id === workId);\n    if (restoredWork) {\n      if (restoredWork.isCompleted) {\n        setCompletedWorks(prev => {\n          if (!prev.some(w => w.id === restoredWork.id)) {\n            return [...prev, restoredWork];\n          }\n          return prev;\n        });\n      } else {\n        setWorks(prevWorks => {\n          const updatedWorks = {\n            ...prevWorks\n          };\n          const type = restoredWork.type || \"doNow\";\n          if (!updatedWorks[type].some(w => w.id === workId)) {\n            updatedWorks[type] = [...updatedWorks[type], restoredWork];\n          }\n          return updatedWorks;\n        });\n      }\n      setRecycledWorks(prevRecycledWorks => prevRecycledWorks.filter(work => work.id !== workId));\n    }\n  };\n\n  // Handle deleting a task within a work\n  const handleDeleteTask = (workId, taskIndex) => {\n    const isCompletedWork = completedWorks.some(work => work.id === workId);\n    if (isCompletedWork) {\n      setCompletedWorks(prevCompletedWorks => {\n        return prevCompletedWorks.map(work => {\n          if (work.id === workId) {\n            const updatedWork = {\n              ...work,\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex)\n            };\n            return updatedWork;\n          }\n          return work;\n        });\n      });\n    } else {\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(type => {\n          const workIndex = updatedWorks[type].findIndex(work => work.id === workId);\n          if (workIndex !== -1) {\n            const updatedWork = {\n              ...updatedWorks[type][workIndex]\n            };\n            updatedWork.subWorks = updatedWork.subWorks.filter((_, index) => index !== taskIndex);\n            updatedWorks[type] = [...updatedWorks[type].slice(0, workIndex), updatedWork, ...updatedWorks[type].slice(workIndex + 1)];\n          }\n        });\n        return updatedWorks;\n      });\n    }\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      delete updatedStatus[`${workId}-${taskIndex}`];\n      return updatedStatus;\n    });\n  };\n\n  // Calculate the progress of each work based on task completion status\n  const calculateProgress = work => {\n    if (!work.subWorks || work.subWorks.length === 0) {\n      if (viewMode === \"recycle\") {\n        return work.isCompleted ? 100 : 0;\n      }\n      return completedWorks.some(completedWork => completedWork.id === work.id) ? 100 : 0;\n    }\n    const totalTasks = work.subWorks.length;\n    const completedTasks = work.subWorks.filter((_, index) => {\n      const taskKey = `${work.id}-${index}`;\n      return taskCompletionStatus[taskKey];\n    }).length;\n    return Math.round(completedTasks / totalTasks * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"recycle\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"recycle\"),\n        children: \"Recycle Bin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expand-collapse-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-btn\",\n        onClick: handleExpandAll,\n        children: \"Expand All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collapse-btn\",\n        onClick: handleCollapseAll,\n        children: \"Collapse All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : viewMode === \"completed\" ? \"No completed works\" : \"No recycled works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const progress = calculateProgress(work);\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\" || work.isCompleted,\n                  onChange: () => handleToggleComplete(work)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 23\n                }, this), work.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [viewMode === \"recycle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"restore-bt\",\n                  style: {\n                    border: \"2px solid #007bff\",\n                    padding: \"4px 6px\"\n                  },\n                  onClick: () => handleRestoreWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiOutlineUndo, {\n                    size: 20,\n                    color: \"#007bff\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  onClick: () => handleDeleteWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container progress-container-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percentage\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)];\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              const taskKey = `${work.id}-${index}`;\n              const isTaskCompleted = taskCompletionStatus[taskKey];\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!isTaskCompleted,\n                    onChange: () => toggleTaskCompletion(work.id, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: isTaskCompleted ? \"line-through\" : \"none\"\n                    },\n                    children: [task.name, \" - Description: \", task.description, \", Time: \", task.startTime, \" - \", task.endTime, \", Repeat: \", task.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${task.customRepeat.repeatEvery} ${task.customRepeat.repeatUnit}${task.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(task.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\", \")}`}` : task.repeatOption]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"task-delete-icon\",\n                    onClick: () => handleDeleteTask(work.id, index),\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                      size: 14,\n                      className: \"task-delete-icon-style\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 422,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 391,\n                  columnNumber: 23\n                }, this)\n              }, taskKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"xp9fpQnqP52Oi761XfdXQE3h/Ec=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","AiOutlineUndo","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Project","works","setWorks","completedWorks","setCompletedWorks","recycledWorks","setRecycledWorks","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","taskCompletionStatus","setTaskCompletionStatus","savedTaskStatus","localStorage","getItem","JSON","parse","setItem","stringify","filteredWorks","allOngoingWorks","Object","values","flat","filter","work","some","completedWork","id","index","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleExpandAll","map","handleCollapseAll","handleToggleComplete","isManual","updatedWork","isCompleted","prevStatus","updatedStatus","subWorks","forEach","_","prev","newCompletedWorks","prevWorks","updatedWorks","keys","key","w","type","toggleTaskCompletion","taskIndex","taskKey","find","totalTasks","length","completedTasks","handleDeleteWork","deletedWork","prevRecycledWorks","prevCompletedWorks","handleRestoreWork","restoredWork","handleDeleteTask","isCompletedWork","workIndex","slice","calculateProgress","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","flatMap","progress","workElements","htmlFor","checked","name","style","border","padding","color","width","task","isTaskCompleted","push","textDecoration","description","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","Date","startDate","toLocaleDateString","repeatDays","join","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks, recycledWorks, setRecycledWorks }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState(() => {\r\n    const savedTaskStatus = localStorage.getItem(\"taskCompletionStatus\");\r\n    return savedTaskStatus ? JSON.parse(savedTaskStatus) : {};\r\n  });\r\n\r\n  // Cập nhật localStorage mỗi khi taskCompletionStatus thay đổi\r\n  useEffect(() => {\r\n    localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(taskCompletionStatus));\r\n  }, [taskCompletionStatus]);\r\n\r\n  // Filter works based on view mode (ongoing/completed/recycle) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat();\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      return allOngoingWorks.filter(\r\n        (work) =>\r\n          !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) =>\r\n          self.findIndex((work) => work.id === completedWork.id) === index\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"recycle\") {\r\n      return recycledWorks;\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks, recycledWorks]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  // Expand all works\r\n  const handleExpandAll = () => {\r\n    setExpandedWorkIds(filteredWorks.map((work) => work.id));\r\n  };\r\n\r\n  // Collapse all works\r\n  const handleCollapseAll = () => {\r\n    setExpandedWorkIds([]);\r\n  };\r\n\r\n  // Toggle complete status of a work\r\n  const handleToggleComplete = (work, isManual = true) => {\r\n    const updatedWork = { ...work, isCompleted: !work.isCompleted };\r\n  \r\n    // Cập nhật trạng thái task khi tick/untick thủ công\r\n    if (isManual) {\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        if (updatedWork.isCompleted) {\r\n          updatedWork.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = true; // Tick tất cả các task\r\n          });\r\n        } else {\r\n          updatedWork.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = false; // Untick tất cả các task\r\n          });\r\n        }\r\n        // Lưu trạng thái mới vào localStorage\r\n        localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(updatedStatus));\r\n        return updatedStatus;\r\n      });\r\n    }\r\n  \r\n    // Di chuyển giữa ongoing và completedWorks dựa trên trạng thái\r\n    if (updatedWork.isCompleted) {\r\n      setCompletedWorks((prev) => {\r\n        const newCompletedWorks = [...prev, updatedWork];\r\n        localStorage.setItem(\"worksdone\", JSON.stringify(newCompletedWorks));\r\n        return newCompletedWorks;\r\n      });\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((key) => {\r\n          updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== work.id);\r\n        });\r\n        localStorage.setItem(\"works\", JSON.stringify(updatedWorks));\r\n        return updatedWorks;\r\n      });\r\n    } else {\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = work.type || \"doNow\";\r\n        if (!updatedWorks[type].some((w) => w.id === work.id)) {\r\n          updatedWorks[type] = [...updatedWorks[type], updatedWork];\r\n        }\r\n        localStorage.setItem(\"works\", JSON.stringify(updatedWorks));\r\n        return updatedWorks;\r\n      });\r\n      setCompletedWorks((prev) => {\r\n        const newCompletedWorks = prev.filter((w) => w.id !== work.id);\r\n        localStorage.setItem(\"worksdone\", JSON.stringify(newCompletedWorks));\r\n        return newCompletedWorks;\r\n      });\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  // Toggle task completion status\r\n  const toggleTaskCompletion = (workId, taskIndex) => {\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      const taskKey = `${workId}-${taskIndex}`;\r\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\r\n  \r\n      // Lưu trạng thái mới vào localStorage\r\n      localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(updatedStatus));\r\n  \r\n      // Cập nhật trạng thái của work nếu tất cả task đều hoàn thành hoặc chưa hoàn thành\r\n      const work = filteredWorks.find((w) => w.id === workId);\r\n      if (work) {\r\n        const totalTasks = work.subWorks.length;\r\n        const completedTasks = work.subWorks.filter(\r\n          (_, index) => updatedStatus[`${workId}-${index}`]\r\n        ).length;\r\n  \r\n        if (completedTasks === totalTasks) {\r\n          handleToggleComplete(work, false); // Auto tick work when all tasks are completed\r\n        } else if (work.isCompleted) {\r\n          handleToggleComplete(work, false); // Auto untick work when not all tasks are completed\r\n        }\r\n      }\r\n  \r\n      return updatedStatus;\r\n    });\r\n  };\r\n  \r\n\r\n  // Handle deleting a work item\r\n  const handleDeleteWork = (workId) => {\r\n    const deletedWork = filteredWorks.find((work) => work.id === workId);\r\n\r\n    if (deletedWork) {\r\n      setRecycledWorks((prevRecycledWorks) => [...prevRecycledWorks, deletedWork]);\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((key) => {\r\n        updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== workId);\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    setCompletedWorks((prevCompletedWorks) =>\r\n      prevCompletedWorks.filter((work) => work.id !== workId)\r\n    );\r\n  };\r\n\r\n  // Handle restoring a work item from recycle bin\r\n  const handleRestoreWork = (workId) => {\r\n    const restoredWork = recycledWorks.find((work) => work.id === workId);\r\n\r\n    if (restoredWork) {\r\n      if (restoredWork.isCompleted) {\r\n        setCompletedWorks((prev) => {\r\n          if (!prev.some((w) => w.id === restoredWork.id)) {\r\n            return [...prev, restoredWork];\r\n          }\r\n          return prev;\r\n        });\r\n      } else {\r\n        setWorks((prevWorks) => {\r\n          const updatedWorks = { ...prevWorks };\r\n          const type = restoredWork.type || \"doNow\";\r\n          if (!updatedWorks[type].some((w) => w.id === workId)) {\r\n            updatedWorks[type] = [...updatedWorks[type], restoredWork];\r\n          }\r\n          return updatedWorks;\r\n        });\r\n      }\r\n\r\n      setRecycledWorks((prevRecycledWorks) =>\r\n        prevRecycledWorks.filter((work) => work.id !== workId)\r\n      );\r\n    }\r\n  };\r\n\r\n  // Handle deleting a task within a work\r\n  const handleDeleteTask = (workId, taskIndex) => {\r\n    const isCompletedWork = completedWorks.some((work) => work.id === workId);\r\n\r\n    if (isCompletedWork) {\r\n      setCompletedWorks((prevCompletedWorks) => {\r\n        return prevCompletedWorks.map((work) => {\r\n          if (work.id === workId) {\r\n            const updatedWork = {\r\n              ...work,\r\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex),\r\n            };\r\n            return updatedWork;\r\n          }\r\n          return work;\r\n        });\r\n      });\r\n    } else {\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((type) => {\r\n          const workIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n          if (workIndex !== -1) {\r\n            const updatedWork = { ...updatedWorks[type][workIndex] };\r\n            updatedWork.subWorks = updatedWork.subWorks.filter(\r\n              (_, index) => index !== taskIndex\r\n            );\r\n            updatedWorks[type] = [\r\n              ...updatedWorks[type].slice(0, workIndex),\r\n              updatedWork,\r\n              ...updatedWorks[type].slice(workIndex + 1),\r\n            ];\r\n          }\r\n        });\r\n        return updatedWorks;\r\n      });\r\n    }\r\n\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      delete updatedStatus[`${workId}-${taskIndex}`];\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Calculate the progress of each work based on task completion status\r\n  const calculateProgress = (work) => {\r\n    if (!work.subWorks || work.subWorks.length === 0) {\r\n      if (viewMode === \"recycle\") {\r\n        return work.isCompleted ? 100 : 0;\r\n      }\r\n      return completedWorks.some((completedWork) => completedWork.id === work.id)\r\n        ? 100\r\n        : 0;\r\n    }\r\n\r\n    const totalTasks = work.subWorks.length;\r\n    const completedTasks = work.subWorks.filter((_, index) => {\r\n      const taskKey = `${work.id}-${index}`;\r\n      return taskCompletionStatus[taskKey];\r\n    }).length;\r\n\r\n    return Math.round((completedTasks / totalTasks) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"recycle\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"recycle\")}\r\n        >\r\n          Recycle Bin\r\n        </button>\r\n      </div>\r\n      <div className=\"expand-collapse-buttons\">\r\n        <button className=\"expand-btn\" onClick={handleExpandAll}>\r\n          Expand All\r\n        </button>\r\n        <button className=\"collapse-btn\" onClick={handleCollapseAll}>\r\n          Collapse All\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : viewMode === \"completed\"\r\n              ? \"No completed works\"\r\n              : \"No recycled works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const progress = calculateProgress(work);\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={viewMode === \"completed\" || work.isCompleted}\r\n                        onChange={() => handleToggleComplete(work)}\r\n                      />\r\n                      {work.name}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {viewMode === \"recycle\" && (\r\n                        <button\r\n                          id=\"restore-bt\"\r\n                          style={{ border: \"2px solid #007bff\", padding: \"4px 6px\" }}\r\n                          onClick={() => handleRestoreWork(work.id)}\r\n                        >\r\n                          <AiOutlineUndo size={20} color=\"#007bff\" />\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        id=\"del-bt\"\r\n                        onClick={() => handleDeleteWork(work.id)}\r\n                      >\r\n                        <AiFillDelete size={20} color=\"#FF6969\" />\r\n                      </button>\r\n                      <button\r\n                        className=\"expand-bt\"\r\n                        onClick={() => toggleExpand(work.id)}\r\n                      >\r\n                        {expandedWorkIds.includes(work.id) ? (\r\n                          <FaChevronUp />\r\n                        ) : (\r\n                          <FaChevronDown />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"progress-container progress-container-full\">\r\n                    <div className=\"progress-bar\">\r\n                      <div\r\n                        className=\"progress\"\r\n                        style={{\r\n                          width: `${progress}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <span className=\"progress-percentage\">{progress}%</span>\r\n                  </div>\r\n                </li>,\r\n              ];\r\n\r\n              if (\r\n                expandedWorkIds.includes(work.id) &&\r\n                work.subWorks &&\r\n                work.subWorks.length > 0\r\n              ) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  const taskKey = `${work.id}-${index}`;\r\n                  const isTaskCompleted = taskCompletionStatus[taskKey];\r\n\r\n                  workElements.push(\r\n                    <li key={taskKey} className=\"task-item\">\r\n                      <div className=\"task-details\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!isTaskCompleted}\r\n                          onChange={() => toggleTaskCompletion(work.id, index)}\r\n                        />\r\n                        <span\r\n                          style={{\r\n                            textDecoration: isTaskCompleted\r\n                              ? \"line-through\"\r\n                              : \"none\",\r\n                          }}\r\n                        >\r\n                          {task.name} - Description: {task.description}, Time: {task.startTime} - {task.endTime}, Repeat: {task.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${task.customRepeat.repeatEvery} ${\r\n                                task.customRepeat.repeatUnit\r\n                              }${\r\n                                task.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(\r\n                                      task.customRepeat.startDate\r\n                                    ).toLocaleDateString(\"vi-VN\")}`\r\n                                  : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\r\n                                      \", \"\r\n                                    )}`\r\n                              }`\r\n                            : task.repeatOption}\r\n                        </span>\r\n                        <button\r\n                          className=\"task-delete-icon\"\r\n                          onClick={() => handleDeleteTask(work.id, index)}\r\n                        >\r\n                          <AiFillDelete size={14} className=\"task-delete-icon-style\" />\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}