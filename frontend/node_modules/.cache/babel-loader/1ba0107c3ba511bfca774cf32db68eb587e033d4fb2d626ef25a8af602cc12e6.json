{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\n\n  // Filter works based on view mode (ongoing/completed) and search query\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat();\n    if (viewMode === \"ongoing\") {\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index);\n    }\n    return [];\n  }, [viewMode, works, completedWorks]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n\n  // Handle marking work as completed or ongoing\n  const handleToggleComplete = work => {\n    if (viewMode === \"ongoing\") {\n      setCompletedWorks(prev => {\n        const updatedCompleted = [...prev, work];\n        return updatedCompleted;\n      });\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(key => {\n          updatedWorks[key] = updatedWorks[key].filter(w => w.id !== work.id);\n        });\n        return updatedWorks;\n      });\n    } else {\n      setCompletedWorks(prev => {\n        const updatedCompleted = prev.filter(w => w.id !== work.id);\n        return updatedCompleted;\n      });\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = work.type || \"doNow\";\n        updatedWorks[type] = [...updatedWorks[type], work];\n        return updatedWorks;\n      });\n    }\n  };\n\n  // Toggle task completion status\n  const toggleTaskCompletion = (workId, taskIndex) => {\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      const taskKey = `${workId}-${taskIndex}`;\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\n      return updatedStatus;\n    });\n  };\n\n  // Calculate the progress of each work based on task completion status\n  const calculateProgress = work => {\n    if (!work.subWorks || work.subWorks.length === 0) return 0;\n    const totalTasks = work.subWorks.length;\n    const completedTasks = work.subWorks.filter((_, index) => {\n      const taskKey = `${work.id}-${index}`;\n      return taskCompletionStatus[taskKey];\n    }).length;\n    return Math.round(completedTasks / totalTasks * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : \"No completed works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const progress = calculateProgress(work);\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\",\n                  onChange: () => handleToggleComplete(work)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 23\n                }, this), work.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [viewMode === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 162,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-section\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-container progress-container-full\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress-bar\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"progress\",\n                    style: {\n                      width: `${progress}%`\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"progress-percentage\",\n                  children: [progress, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this)];\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              const taskKey = `${work.id}-${index}`;\n              const isTaskCompleted = taskCompletionStatus[taskKey];\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!isTaskCompleted,\n                    onChange: () => toggleTaskCompletion(work.id, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: isTaskCompleted ? \"line-through\" : \"none\"\n                    },\n                    children: [task.name, \" - Description: \", task.description, \", Time:\", \" \", task.startTime, \" - \", task.endTime, \", Repeat:\", \" \", task.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${task.customRepeat.repeatEvery} ${task.customRepeat.repeatUnit}${task.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(task.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\", \")}`}` : task.repeatOption]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this)\n              }, taskKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"1j+Cdkemkm7MAQ1ZJJVRGNDdKCM=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Project","works","setWorks","completedWorks","setCompletedWorks","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","taskCompletionStatus","setTaskCompletionStatus","filteredWorks","allOngoingWorks","Object","values","flat","filter","work","some","completedWork","id","index","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleToggleComplete","prev","updatedCompleted","prevWorks","updatedWorks","keys","forEach","key","w","type","toggleTaskCompletion","taskIndex","prevStatus","updatedStatus","taskKey","calculateProgress","subWorks","length","totalTasks","completedTasks","_","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","flatMap","progress","workElements","htmlFor","checked","name","color","style","width","task","isTaskCompleted","push","textDecoration","description","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","Date","startDate","toLocaleDateString","repeatDays","join","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\r\n\r\n  // Filter works based on view mode (ongoing/completed) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat();\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      return allOngoingWorks.filter(\r\n        (work) =>\r\n          !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) =>\r\n          self.findIndex((work) => work.id === completedWork.id) === index\r\n      );\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  // Handle marking work as completed or ongoing\r\n  const handleToggleComplete = (work) => {\r\n    if (viewMode === \"ongoing\") {\r\n      setCompletedWorks((prev) => {\r\n        const updatedCompleted = [...prev, work];\r\n        return updatedCompleted;\r\n      });\r\n\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((key) => {\r\n          updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== work.id);\r\n        });\r\n        return updatedWorks;\r\n      });\r\n    } else {\r\n      setCompletedWorks((prev) => {\r\n        const updatedCompleted = prev.filter((w) => w.id !== work.id);\r\n        return updatedCompleted;\r\n      });\r\n\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = work.type || \"doNow\";\r\n        updatedWorks[type] = [...updatedWorks[type], work];\r\n        return updatedWorks;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Toggle task completion status\r\n  const toggleTaskCompletion = (workId, taskIndex) => {\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      const taskKey = `${workId}-${taskIndex}`;\r\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Calculate the progress of each work based on task completion status\r\n  const calculateProgress = (work) => {\r\n    if (!work.subWorks || work.subWorks.length === 0) return 0;\r\n\r\n    const totalTasks = work.subWorks.length;\r\n    const completedTasks = work.subWorks.filter((_, index) => {\r\n      const taskKey = `${work.id}-${index}`;\r\n      return taskCompletionStatus[taskKey];\r\n    }).length;\r\n\r\n    return Math.round((completedTasks / totalTasks) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n      </div>\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : \"No completed works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const progress = calculateProgress(work);\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={viewMode === \"completed\"}\r\n                        onChange={() => handleToggleComplete(work)}\r\n                      />\r\n                      {work.name}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {viewMode === \"ongoing\" && (\r\n                        <button id=\"del-bt\">\r\n                          <AiFillDelete size={20} color=\"#FF6969\" />\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        className=\"expand-bt\"\r\n                        onClick={() => toggleExpand(work.id)}\r\n                      >\r\n                        {expandedWorkIds.includes(work.id) ? (\r\n                          <FaChevronUp />\r\n                        ) : (\r\n                          <FaChevronDown />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {/* Thanh tiến trình ở dòng riêng */}\r\n                  <div className=\"progress-section\">\r\n                    <div className=\"progress-container progress-container-full\">\r\n                      <div className=\"progress-bar\">\r\n                        <div\r\n                          className=\"progress\"\r\n                          style={{\r\n                            width: `${progress}%`,\r\n                          }}\r\n                        ></div>\r\n                      </div>\r\n                      <span className=\"progress-percentage\">{progress}%</span>\r\n                    </div>\r\n                  </div>\r\n                </li>,\r\n              ];\r\n\r\n              if (\r\n                expandedWorkIds.includes(work.id) &&\r\n                work.subWorks &&\r\n                work.subWorks.length > 0\r\n              ) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  const taskKey = `${work.id}-${index}`;\r\n                  const isTaskCompleted = taskCompletionStatus[taskKey];\r\n\r\n                  workElements.push(\r\n                    <li key={taskKey} className=\"task-item\">\r\n                      <div className=\"task-details\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!isTaskCompleted}\r\n                          onChange={() => toggleTaskCompletion(work.id, index)}\r\n                        />\r\n                        <span\r\n                          style={{\r\n                            textDecoration: isTaskCompleted\r\n                              ? \"line-through\"\r\n                              : \"none\",\r\n                          }}\r\n                        >\r\n                          {task.name} - Description: {task.description}, Time:{\" \"}\r\n                          {task.startTime} - {task.endTime}, Repeat:{\" \"}\r\n                          {task.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${task.customRepeat.repeatEvery} ${\r\n                                task.customRepeat.repeatUnit\r\n                              }${\r\n                                task.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(\r\n                                      task.customRepeat.startDate\r\n                                    ).toLocaleDateString(\"vi-VN\")}`\r\n                                  : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\r\n                                      \", \"\r\n                                    )}`\r\n                              }`\r\n                            : task.repeatOption}\r\n                        </span>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}