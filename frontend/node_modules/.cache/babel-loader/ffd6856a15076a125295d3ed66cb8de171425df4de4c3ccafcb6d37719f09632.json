{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\n  const [recycledWorks, setRecycledWorks] = useState([]);\n\n  // Filter works based on view mode (ongoing/completed/recycle) and search query\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat();\n    if (viewMode === \"ongoing\") {\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index);\n    }\n    if (viewMode === \"recycle\") {\n      return recycledWorks;\n    }\n    return [];\n  }, [viewMode, works, completedWorks, recycledWorks]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n\n  // Expand all works\n  const handleExpandAll = () => {\n    setExpandedWorkIds(filteredWorks.map(work => work.id));\n  };\n\n  // Collapse all works\n  const handleCollapseAll = () => {\n    setExpandedWorkIds([]);\n  };\n\n  // Toggle complete status of a work\n  const handleToggleComplete = work => {\n    if (viewMode === \"ongoing\") {\n      setCompletedWorks(prev => [...prev, work]);\n      removeWorkFromState(work.id);\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        if (work.subWorks && work.subWorks.length > 0) {\n          work.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = true;\n          });\n        }\n        return updatedStatus;\n      });\n    } else {\n      setCompletedWorks(prev => prev.filter(w => w.id !== work.id));\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = work.type || \"doNow\";\n        updatedWorks[type] = [...updatedWorks[type], work];\n        return updatedWorks;\n      });\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        if (work.subWorks && work.subWorks.length > 0) {\n          work.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = false;\n          });\n        }\n        return updatedStatus;\n      });\n    }\n  };\n\n  // Remove work from works and completed works, and add to deleted works\n  const handleDeleteWork = workId => {\n    const deletedWork = filteredWorks.find(work => work.id === workId);\n    if (deletedWork) {\n      setRecycledWorks(prevRecycledWorks => [...prevRecycledWorks, deletedWork]);\n    }\n    removeWorkFromState(workId);\n  };\n\n  // Remove work from the state\n  const removeWorkFromState = workId => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(key => {\n        updatedWorks[key] = updatedWorks[key].filter(work => work.id !== workId);\n      });\n      return updatedWorks;\n    });\n    setCompletedWorks(prevCompletedWorks => prevCompletedWorks.filter(work => work.id !== workId));\n  };\n\n  // Handle restoring a work item from recycle bin\n  const handleRestoreWork = workId => {\n    const restoredWork = recycledWorks.find(work => work.id === workId);\n    if (restoredWork) {\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = restoredWork.type || \"doNow\";\n        if (!updatedWorks[type].some(w => w.id === workId)) {\n          updatedWorks[type] = [...updatedWorks[type], restoredWork];\n        }\n        return updatedWorks;\n      });\n      setRecycledWorks(prevRecycledWorks => prevRecycledWorks.filter(work => work.id !== workId));\n    }\n  };\n\n  // Handle deleting a task within a work\n  const handleDeleteTask = (workId, taskIndex) => {\n    const isCompletedWork = completedWorks.some(work => work.id === workId);\n    if (isCompletedWork) {\n      setCompletedWorks(prevCompletedWorks => {\n        return prevCompletedWorks.map(work => {\n          if (work.id === workId) {\n            const updatedWork = {\n              ...work,\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex)\n            };\n            return updatedWork;\n          }\n          return work;\n        });\n      });\n    } else {\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(type => {\n          const workIndex = updatedWorks[type].findIndex(work => work.id === workId);\n          if (workIndex !== -1) {\n            const updatedWork = {\n              ...updatedWorks[type][workIndex]\n            };\n            updatedWork.subWorks = updatedWork.subWorks.filter((_, index) => index !== taskIndex);\n            updatedWorks[type] = [...updatedWorks[type].slice(0, workIndex), updatedWork, ...updatedWorks[type].slice(workIndex + 1)];\n          }\n        });\n        return updatedWorks;\n      });\n    }\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      delete updatedStatus[`${workId}-${taskIndex}`];\n      return updatedStatus;\n    });\n  };\n\n  // Calculate the progress of each work based on task completion status\n  const calculateProgress = work => {\n    if (!work.subWorks || work.subWorks.length === 0) {\n      return completedWorks.some(completedWork => completedWork.id === work.id) ? 100 : 0;\n    }\n    const totalTasks = work.subWorks.length;\n    const completedTasks = work.subWorks.filter((_, index) => {\n      const taskKey = `${work.id}-${index}`;\n      return taskCompletionStatus[taskKey];\n    }).length;\n    return Math.round(completedTasks / totalTasks * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"recycle\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"recycle\"),\n        children: \"Recycle Bin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expand-collapse-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-btn\",\n        onClick: handleExpandAll,\n        children: \"Expand All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collapse-btn\",\n        onClick: handleCollapseAll,\n        children: \"Collapse All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : viewMode === \"completed\" ? \"No completed works\" : \"No recycled works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const progress = calculateProgress(work);\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [viewMode !== \"recycle\" && /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\",\n                  onChange: () => handleToggleComplete(work)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this), work.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [viewMode !== \"recycle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  onClick: () => handleDeleteWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 25\n                }, this), viewMode === \"recycle\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"restore-btn\",\n                    onClick: () => handleRestoreWork(work.id),\n                    children: /*#__PURE__*/_jsxDEV(AiOutlineUndo, {\n                      size: 20,\n                      style: {\n                        fontWeight: \"bold\",\n                        color: \"#007bff\"\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 289,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    id: \"del-bt\",\n                    onClick: () => setRecycledWorks(prev => prev.filter(w => w.id !== work.id)),\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                      size: 20,\n                      color: \"#FF6969\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 315,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container progress-container-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 324,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percentage\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this)];\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              const taskKey = `${work.id}-${index}`;\n              const isTaskCompleted = taskCompletionStatus[taskKey];\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [viewMode !== \"recycle\" && /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!isTaskCompleted,\n                    onChange: () => toggleTaskCompletion(work.id, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 349,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: isTaskCompleted ? \"line-through\" : \"none\"\n                    },\n                    children: task.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 355,\n                    columnNumber: 25\n                  }, this), viewMode !== \"recycle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"task-delete-icon\",\n                    onClick: () => handleDeleteTask(work.id, index),\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                      size: 14,\n                      className: \"task-delete-icon-style\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 369,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 365,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 23\n                }, this)\n              }, taskKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"r1gffThFkBy9bqsnI8UVzQg58Qg=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","AiOutlineUndo","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Fragment","_Fragment","Project","works","setWorks","completedWorks","setCompletedWorks","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","taskCompletionStatus","setTaskCompletionStatus","recycledWorks","setRecycledWorks","filteredWorks","allOngoingWorks","Object","values","flat","filter","work","some","completedWork","id","index","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleExpandAll","map","handleCollapseAll","handleToggleComplete","prev","removeWorkFromState","prevStatus","updatedStatus","subWorks","length","forEach","_","w","prevWorks","updatedWorks","type","handleDeleteWork","deletedWork","find","prevRecycledWorks","keys","key","prevCompletedWorks","handleRestoreWork","restoredWork","handleDeleteTask","taskIndex","isCompletedWork","updatedWork","workIndex","slice","calculateProgress","totalTasks","completedTasks","taskKey","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","flatMap","progress","workElements","htmlFor","checked","name","color","style","fontWeight","width","task","isTaskCompleted","push","toggleTaskCompletion","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\r\n  const [recycledWorks, setRecycledWorks] = useState([]);\r\n\r\n  // Filter works based on view mode (ongoing/completed/recycle) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat();\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      return allOngoingWorks.filter(\r\n        (work) =>\r\n          !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) =>\r\n          self.findIndex((work) => work.id === completedWork.id) === index\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"recycle\") {\r\n      return recycledWorks;\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks, recycledWorks]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  // Expand all works\r\n  const handleExpandAll = () => {\r\n    setExpandedWorkIds(filteredWorks.map((work) => work.id));\r\n  };\r\n\r\n  // Collapse all works\r\n  const handleCollapseAll = () => {\r\n    setExpandedWorkIds([]);\r\n  };\r\n\r\n  // Toggle complete status of a work\r\n  const handleToggleComplete = (work) => {\r\n    if (viewMode === \"ongoing\") {\r\n      setCompletedWorks((prev) => [...prev, work]);\r\n      removeWorkFromState(work.id);\r\n\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          work.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = true;\r\n          });\r\n        }\r\n        return updatedStatus;\r\n      });\r\n    } else {\r\n      setCompletedWorks((prev) => prev.filter((w) => w.id !== work.id));\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = work.type || \"doNow\";\r\n        updatedWorks[type] = [...updatedWorks[type], work];\r\n        return updatedWorks;\r\n      });\r\n\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          work.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = false;\r\n          });\r\n        }\r\n        return updatedStatus;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Remove work from works and completed works, and add to deleted works\r\n  const handleDeleteWork = (workId) => {\r\n    const deletedWork = filteredWorks.find((work) => work.id === workId);\r\n\r\n    if (deletedWork) {\r\n      setRecycledWorks((prevRecycledWorks) => [...prevRecycledWorks, deletedWork]);\r\n    }\r\n\r\n    removeWorkFromState(workId);\r\n  };\r\n\r\n  // Remove work from the state\r\n  const removeWorkFromState = (workId) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((key) => {\r\n        updatedWorks[key] = updatedWorks[key].filter((work) => work.id !== workId);\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    setCompletedWorks((prevCompletedWorks) =>\r\n      prevCompletedWorks.filter((work) => work.id !== workId)\r\n    );\r\n  };\r\n\r\n  // Handle restoring a work item from recycle bin\r\n  const handleRestoreWork = (workId) => {\r\n    const restoredWork = recycledWorks.find((work) => work.id === workId);\r\n\r\n    if (restoredWork) {\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = restoredWork.type || \"doNow\";\r\n        if (!updatedWorks[type].some((w) => w.id === workId)) {\r\n          updatedWorks[type] = [...updatedWorks[type], restoredWork];\r\n        }\r\n        return updatedWorks;\r\n      });\r\n\r\n      setRecycledWorks((prevRecycledWorks) =>\r\n        prevRecycledWorks.filter((work) => work.id !== workId)\r\n      );\r\n    }\r\n  };\r\n\r\n  // Handle deleting a task within a work\r\n  const handleDeleteTask = (workId, taskIndex) => {\r\n    const isCompletedWork = completedWorks.some((work) => work.id === workId);\r\n\r\n    if (isCompletedWork) {\r\n      setCompletedWorks((prevCompletedWorks) => {\r\n        return prevCompletedWorks.map((work) => {\r\n          if (work.id === workId) {\r\n            const updatedWork = {\r\n              ...work,\r\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex),\r\n            };\r\n            return updatedWork;\r\n          }\r\n          return work;\r\n        });\r\n      });\r\n    } else {\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((type) => {\r\n          const workIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n          if (workIndex !== -1) {\r\n            const updatedWork = { ...updatedWorks[type][workIndex] };\r\n            updatedWork.subWorks = updatedWork.subWorks.filter(\r\n              (_, index) => index !== taskIndex\r\n            );\r\n            updatedWorks[type] = [\r\n              ...updatedWorks[type].slice(0, workIndex),\r\n              updatedWork,\r\n              ...updatedWorks[type].slice(workIndex + 1),\r\n            ];\r\n          }\r\n        });\r\n        return updatedWorks;\r\n      });\r\n    }\r\n\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      delete updatedStatus[`${workId}-${taskIndex}`];\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Calculate the progress of each work based on task completion status\r\n  const calculateProgress = (work) => {\r\n    if (!work.subWorks || work.subWorks.length === 0) {\r\n      return completedWorks.some((completedWork) => completedWork.id === work.id)\r\n        ? 100\r\n        : 0;\r\n    }\r\n\r\n    const totalTasks = work.subWorks.length;\r\n    const completedTasks = work.subWorks.filter((_, index) => {\r\n      const taskKey = `${work.id}-${index}`;\r\n      return taskCompletionStatus[taskKey];\r\n    }).length;\r\n\r\n    return Math.round((completedTasks / totalTasks) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\"\r\n              ? \"ongoing\"\r\n              : viewMode === \"completed\"\r\n              ? \"completed\"\r\n              : \"recycled\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"recycle\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"recycle\")}\r\n        >\r\n          Recycle Bin\r\n        </button>\r\n      </div>\r\n      <div className=\"expand-collapse-buttons\">\r\n        <button className=\"expand-btn\" onClick={handleExpandAll}>\r\n          Expand All\r\n        </button>\r\n        <button className=\"collapse-btn\" onClick={handleCollapseAll}>\r\n          Collapse All\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : viewMode === \"completed\"\r\n              ? \"No completed works\"\r\n              : \"No recycled works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const progress = calculateProgress(work);\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      {viewMode !== \"recycle\" && (\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={viewMode === \"completed\"}\r\n                          onChange={() => handleToggleComplete(work)}\r\n                        />\r\n                      )}\r\n                      {work.name}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {viewMode !== \"recycle\" && (\r\n                        <button\r\n                          id=\"del-bt\"\r\n                          onClick={() => handleDeleteWork(work.id)}\r\n                        >\r\n                          <AiFillDelete size={20} color=\"#FF6969\" />\r\n                        </button>\r\n                      )}\r\n                      {viewMode === \"recycle\" && (\r\n                        <>\r\n                          <button\r\n                            className=\"restore-btn\"\r\n                            onClick={() => handleRestoreWork(work.id)}\r\n                          >\r\n                            <AiOutlineUndo\r\n                              size={20}\r\n                              style={{ fontWeight: \"bold\", color: \"#007bff\" }}\r\n                            />\r\n                          </button>\r\n                          <button\r\n                            id=\"del-bt\"\r\n                            onClick={() =>\r\n                              setRecycledWorks((prev) =>\r\n                                prev.filter((w) => w.id !== work.id)\r\n                              )\r\n                            }\r\n                          >\r\n                            <AiFillDelete size={20} color=\"#FF6969\" />\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                      <button\r\n                        className=\"expand-bt\"\r\n                        onClick={() => toggleExpand(work.id)}\r\n                      >\r\n                        {expandedWorkIds.includes(work.id) ? (\r\n                          <FaChevronUp />\r\n                        ) : (\r\n                          <FaChevronDown />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"progress-container progress-container-full\">\r\n                    <div className=\"progress-bar\">\r\n                      <div\r\n                        className=\"progress\"\r\n                        style={{\r\n                          width: `${progress}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <span className=\"progress-percentage\">{progress}%</span>\r\n                  </div>\r\n                </li>,\r\n              ];\r\n\r\n              if (\r\n                expandedWorkIds.includes(work.id) &&\r\n                work.subWorks &&\r\n                work.subWorks.length > 0\r\n              ) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  const taskKey = `${work.id}-${index}`;\r\n                  const isTaskCompleted = taskCompletionStatus[taskKey];\r\n\r\n                  workElements.push(\r\n                    <li key={taskKey} className=\"task-item\">\r\n                      <div className=\"task-details\">\r\n                        {viewMode !== \"recycle\" && (\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            checked={!!isTaskCompleted}\r\n                            onChange={() => toggleTaskCompletion(work.id, index)}\r\n                          />\r\n                        )}\r\n                        <span\r\n                          style={{\r\n                            textDecoration: isTaskCompleted\r\n                              ? \"line-through\"\r\n                              : \"none\",\r\n                          }}\r\n                        >\r\n                          {task.name}\r\n                        </span>\r\n                        {viewMode !== \"recycle\" && (\r\n                          <button\r\n                            className=\"task-delete-icon\"\r\n                            onClick={() => handleDeleteTask(work.id, index)}\r\n                          >\r\n                            <AiFillDelete size={14} className=\"task-delete-icon-style\" />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}