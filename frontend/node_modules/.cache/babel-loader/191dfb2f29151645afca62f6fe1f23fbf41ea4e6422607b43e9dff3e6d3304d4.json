{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Aos from \"aos\";\nimport \"./styles/dashboard.css\";\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const savedTasks = localStorage.getItem(\"tasks\");\n    return savedTasks ? JSON.parse(savedTasks) : {\n      doNow: [],\n      schedule: [],\n      delegate: [],\n      drop: []\n    };\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    id: null,\n    name: \"\",\n    type: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    describe: \"\",\n    tag: \"\"\n  });\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    Aos.init({\n      duration: 1000\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  const handleAddNewWork = () => {\n    setIsModalOpen(true);\n    setEditMode(false);\n    setFormData({\n      id: null,\n      name: \"\",\n      type: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      describe: \"\",\n      tag: \"\"\n    });\n  };\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Nếu thay đổi là ngày, chuyển đổi thành yyyy-mm-dd trước khi lưu\n    if (name === \"startDate\" || name === \"endDate\") {\n      const [day, month, year] = value.split(\"/\"); // Nhập vào dạng dd/mm/yyyy\n      const formattedDate = `${year}-${month}-${day}`; // Lưu dưới dạng yyyy-mm-dd\n      setFormData(prev => ({\n        ...prev,\n        [name]: formattedDate\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  const formatForInput = dateString => {\n    if (!dateString) return \"\";\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}/${month}/${year}`; // Hiển thị dd/mm/yyyy\n  };\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}/${month}/${year}`;\n  };\n  const isDuplicateName = name => {\n    return Object.values(tasks).flat().some(task => task.name === name);\n  };\n  const handleDone = () => {\n    const {\n      name,\n      type,\n      startDate,\n      endDate\n    } = formData;\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    if (isDuplicateName(name) && !editMode) {\n      alert(\"Task names must be unique.\");\n      return;\n    }\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    if (end < start) {\n      alert(\"End date must be the same as or after the start date.\");\n      return;\n    }\n    setTasks(prevTasks => {\n      const updatedTasks = {\n        ...prevTasks\n      };\n      if (editMode) {\n        Object.keys(updatedTasks).forEach(type => {\n          updatedTasks[type] = updatedTasks[type].filter(task => task.id !== formData.id);\n        });\n      }\n      updatedTasks[type] = [...updatedTasks[type], {\n        ...formData,\n        id: formData.id || Date.now()\n      }];\n      return updatedTasks;\n    });\n    setIsModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n  };\n  const handleDeleteTask = (type, id) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [type]: prevTasks[type].filter(task => task.id !== id)\n    }));\n  };\n  const handleEditTask = task => {\n    setEditMode(true);\n    setFormData(task);\n    setIsModalOpen(true);\n  };\n  const handleDragStart = (e, task, type) => {\n    e.dataTransfer.setData(\"task\", JSON.stringify({\n      ...task,\n      type\n    }));\n  };\n  const handleDrop = (e, newType) => {\n    const data = JSON.parse(e.dataTransfer.getData(\"task\"));\n    if (data.type === newType) return;\n    setTasks(prevTasks => {\n      const updatedSourceTasks = prevTasks[data.type].filter(task => task.id !== data.id);\n      const updatedTargetTasks = [...prevTasks[newType], {\n        ...data,\n        type: newType\n      }];\n      return {\n        ...prevTasks,\n        [data.type]: updatedSourceTasks,\n        [newType]: updatedTargetTasks\n      };\n    });\n  };\n  const allowDrop = e => e.preventDefault();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-body-conatiner\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"dash-header\",\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-work-btn\",\n      onClick: handleAddNewWork,\n      children: \"Add new work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editMode ? \"Edit Work\" : \"Add New Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter work name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: formData.type,\n            onChange: handleFormChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"doNow\",\n              children: \"Do now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"schedule\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"delegate\",\n              children: \"Delegate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"drop\",\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"tag\",\n            value: formData.tag,\n            onChange: e => {\n              handleFormChange(e);\n              if (e.target.value === \"Other\") {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: \"\"\n                }));\n              } else {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: null\n                }));\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"H\\u1ECDc t\\u1EADp\",\n              children: \"H\\u1ECDc t\\u1EADp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"L\\xE0m vi\\u1EC7c\",\n              children: \"L\\xE0m vi\\u1EC7c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ngh\\u1EC9 ng\\u01A1i\",\n              children: \"Ngh\\u1EC9 ng\\u01A1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Gi\\u1EA3i tr\\xED\",\n              children: \"Gi\\u1EA3i tr\\xED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 29\n          }, this), formData.tag === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter custom tag\",\n            name: \"customTag\",\n            value: formData.customTag || \"\",\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\" // Đổi từ `date` sang `text`\n            ,\n            name: \"startDate\",\n            value: formatForInput(formData.startDate) // Hiển thị dd/mm/yyyy\n            ,\n            onChange: handleFormChange,\n            placeholder: \"dd/mm/yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\" // Đổi từ `date` sang `text`\n            ,\n            name: \"endDate\",\n            value: formatForInput(formData.endDate) // Hiển thị dd/mm/yyyy\n            ,\n            onChange: handleFormChange,\n            placeholder: \"dd/mm/yyyy\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Describe work (use # for hashtags)\",\n          name: \"describe\",\n          value: formData.describe,\n          onChange: handleFormChange,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDone,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"body-content\",\n      children: [\"doNow\", \"schedule\", \"delegate\", \"drop\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-box\",\n        onDrop: e => handleDrop(e, type),\n        onDragOver: allowDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: type.charAt(0).toUpperCase() + type.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: tasks[type].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            draggable: true,\n            onDragStart: e => handleDragStart(e, task, type),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [formatDate(task.startDate), \" - \", formatDate(task.endDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.describe ? task.describe.split(\" \").map((word, i) => word.startsWith(\"#\") ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: [word, \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 31\n                }, this) : `${word} `) : \"No description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(AiFillEdit, {\n                className: \"edit-icon\",\n                onClick: () => handleEditTask(task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                className: \"delete-icon\",\n                onClick: () => handleDeleteTask(type, task.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 13\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"JoWXcQfI4zH5RliPFIGVw6ALzxQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Aos","AiFillDelete","AiFillEdit","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","doNow","schedule","delegate","drop","isModalOpen","setIsModalOpen","formData","setFormData","id","name","type","startDate","endDate","describe","tag","editMode","setEditMode","init","duration","setItem","stringify","handleAddNewWork","handleFormChange","e","value","target","day","month","year","split","formattedDate","prev","formatForInput","dateString","formatDate","isDuplicateName","Object","values","flat","some","task","handleDone","alert","start","Date","end","prevTasks","updatedTasks","keys","forEach","filter","now","handleCancel","handleDeleteTask","handleEditTask","handleDragStart","dataTransfer","setData","handleDrop","newType","data","getData","updatedSourceTasks","updatedTargetTasks","allowDrop","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","customTag","rows","map","onDrop","onDragOver","charAt","toUpperCase","slice","draggable","onDragStart","word","i","startsWith","style","color","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Aos from \"aos\";\r\nimport \"./styles/dashboard.css\";\r\nimport { AiFillDelete, AiFillEdit } from \"react-icons/ai\";\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const savedTasks = localStorage.getItem(\"tasks\");\r\n    return savedTasks ? JSON.parse(savedTasks) : { doNow: [], schedule: [], delegate: [], drop: [] };\r\n  });\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: null,\r\n    name: \"\",\r\n    type: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    describe: \"\",\r\n    tag: \"\",\r\n  });\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Aos.init({ duration: 1000 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const handleAddNewWork = () => {\r\n    setIsModalOpen(true);\r\n    setEditMode(false);\r\n    setFormData({\r\n      id: null,\r\n      name: \"\",\r\n      type: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      describe: \"\",\r\n      tag: \"\",\r\n    });\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n  \r\n    // Nếu thay đổi là ngày, chuyển đổi thành yyyy-mm-dd trước khi lưu\r\n    if (name === \"startDate\" || name === \"endDate\") {\r\n      const [day, month, year] = value.split(\"/\"); // Nhập vào dạng dd/mm/yyyy\r\n      const formattedDate = `${year}-${month}-${day}`; // Lưu dưới dạng yyyy-mm-dd\r\n      setFormData((prev) => ({ ...prev, [name]: formattedDate }));\r\n    } else {\r\n      setFormData((prev) => ({ ...prev, [name]: value }));\r\n    }\r\n  };\r\n  \r\n  const formatForInput = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const [year, month, day] = dateString.split(\"-\");\r\n    return `${day}/${month}/${year}`; // Hiển thị dd/mm/yyyy\r\n  };\r\n  \r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const [year, month, day] = dateString.split(\"-\");\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  const isDuplicateName = (name) => {\r\n    return Object.values(tasks).flat().some((task) => task.name === name);\r\n  };\r\n\r\n  const handleDone = () => {\r\n    const { name, type, startDate, endDate } = formData;\r\n\r\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    if (isDuplicateName(name) && !editMode) {\r\n      alert(\"Task names must be unique.\");\r\n      return;\r\n    }\r\n\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n\r\n    if (end < start) {\r\n      alert(\"End date must be the same as or after the start date.\");\r\n      return;\r\n    }\r\n\r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = { ...prevTasks };\r\n\r\n      if (editMode) {\r\n        Object.keys(updatedTasks).forEach((type) => {\r\n          updatedTasks[type] = updatedTasks[type].filter(\r\n            (task) => task.id !== formData.id\r\n          );\r\n        });\r\n      }\r\n\r\n      updatedTasks[type] = [\r\n        ...updatedTasks[type],\r\n        { ...formData, id: formData.id || Date.now() },\r\n      ];\r\n\r\n      return updatedTasks;\r\n    });\r\n\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteTask = (type, id) => {\r\n    setTasks((prevTasks) => ({\r\n      ...prevTasks,\r\n      [type]: prevTasks[type].filter((task) => task.id !== id),\r\n    }));\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    setEditMode(true);\r\n    setFormData(task);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleDragStart = (e, task, type) => {\r\n    e.dataTransfer.setData(\"task\", JSON.stringify({ ...task, type }));\r\n  };\r\n\r\n  const handleDrop = (e, newType) => {\r\n    const data = JSON.parse(e.dataTransfer.getData(\"task\"));\r\n\r\n    if (data.type === newType) return;\r\n\r\n    setTasks((prevTasks) => {\r\n      const updatedSourceTasks = prevTasks[data.type].filter(\r\n        (task) => task.id !== data.id\r\n      );\r\n      const updatedTargetTasks = [\r\n        ...prevTasks[newType],\r\n        { ...data, type: newType },\r\n      ];\r\n      return {\r\n        ...prevTasks,\r\n        [data.type]: updatedSourceTasks,\r\n        [newType]: updatedTargetTasks,\r\n      };\r\n    });\r\n  };\r\n\r\n  const allowDrop = (e) => e.preventDefault();\r\n\r\n  return (\r\n    <div className=\"home-body-conatiner\" data-aos=\"zoom-in\">\r\n      <header id=\"dash-header\" className=\"search-bar\">\r\n        <h1>Dashboard</h1>\r\n      </header>\r\n      <button className=\"add-work-btn\" onClick={handleAddNewWork}>\r\n        Add new work\r\n      </button>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>{editMode ? \"Edit Work\" : \"Add New Work\"}</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter work name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleFormChange}\r\n            />\r\n            <div className=\"form-row\">\r\n              <select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleFormChange}\r\n              >\r\n                <option value=\"\">Select type</option>\r\n                <option value=\"doNow\">Do now</option>\r\n                <option value=\"schedule\">Schedule</option>\r\n                <option value=\"delegate\">Delegate</option>\r\n                <option value=\"drop\">Drop</option>\r\n              </select>\r\n                            <select\r\n                name=\"tag\"\r\n                value={formData.tag}\r\n                onChange={(e) => {\r\n                  handleFormChange(e);\r\n                  if (e.target.value === \"Other\") {\r\n                    setFormData((prev) => ({ ...prev, customTag: \"\" }));\r\n                  } else {\r\n                    setFormData((prev) => ({ ...prev, customTag: null }));\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"\">Select tag</option>\r\n                <option value=\"Học tập\">Học tập</option>\r\n                <option value=\"Làm việc\">Làm việc</option>\r\n                <option value=\"Nghỉ ngơi\">Nghỉ ngơi</option>\r\n                <option value=\"Giải trí\">Giải trí</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n              {formData.tag === \"Other\" && (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter custom tag\"\r\n                  name=\"customTag\"\r\n                  value={formData.customTag || \"\"}\r\n                  onChange={handleFormChange}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"form-row\">\r\n  <input\r\n    type=\"text\" // Đổi từ `date` sang `text`\r\n    name=\"startDate\"\r\n    value={formatForInput(formData.startDate)} // Hiển thị dd/mm/yyyy\r\n    onChange={handleFormChange}\r\n    placeholder=\"dd/mm/yyyy\"\r\n  />\r\n  <input\r\n    type=\"text\" // Đổi từ `date` sang `text`\r\n    name=\"endDate\"\r\n    value={formatForInput(formData.endDate)} // Hiển thị dd/mm/yyyy\r\n    onChange={handleFormChange}\r\n    placeholder=\"dd/mm/yyyy\"\r\n  />\r\n</div>\r\n\r\n            <textarea\r\n              placeholder=\"Describe work (use # for hashtags)\"\r\n              name=\"describe\"\r\n              value={formData.describe}\r\n              onChange={handleFormChange}\r\n              rows=\"4\"\r\n            ></textarea>\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleDone}>Done</button>\r\n              <button onClick={handleCancel}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <main className=\"body-content\">\r\n        {[\"doNow\", \"schedule\", \"delegate\", \"drop\"].map((type) => (\r\n          <div\r\n            className=\"task-box\"\r\n            key={type}\r\n            onDrop={(e) => handleDrop(e, type)}\r\n            onDragOver={allowDrop}\r\n          >\r\n            <h2>{type.charAt(0).toUpperCase() + type.slice(1)}</h2>\r\n            <div className=\"task-list\">\r\n              {tasks[type].map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className=\"task\"\r\n                  draggable\r\n                  onDragStart={(e) => handleDragStart(e, task, type)}\r\n                >\r\n                  <div>\r\n                    <span>{task.name}</span>\r\n                    <p>\r\n                      {formatDate(task.startDate)} - {formatDate(task.endDate)}\r\n                    </p>\r\n                    <p>\r\n                      {task.describe\r\n                        ? task.describe.split(\" \").map((word, i) =>\r\n                            word.startsWith(\"#\") ? (\r\n                              <span key={i} style={{ color: \"blue\" }}>\r\n                                {word}{\" \"}\r\n                              </span>\r\n                            ) : (\r\n                              `${word} `\r\n                            )\r\n                          )\r\n                        : \"No description\"}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"task-buttons\">\r\n                    <AiFillEdit\r\n                      className=\"edit-icon\"\r\n                      onClick={() => handleEditTask(task)}\r\n                    />\r\n                    <AiFillDelete\r\n                      className=\"delete-icon\"\r\n                      onClick={() => handleDeleteTask(type, task.id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}