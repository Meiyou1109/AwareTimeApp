{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Aos from \"aos\";\nimport \"./styles/dashboard.css\";\nimport { AiFillDelete, AiFillEdit, AiOutlinePlus } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [tasks, setTasks] = useState(() => {\n    const savedTasks = localStorage.getItem(\"tasks\");\n    return savedTasks ? JSON.parse(savedTasks) : {\n      doNow: [],\n      schedule: [],\n      delegate: [],\n      drop: []\n    };\n  });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    id: null,\n    name: \"\",\n    type: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    describe: \"\",\n    tag: \"\"\n  });\n  const [taskFormData, setTaskFormData] = useState({\n    workId: null,\n    taskName: \"\",\n    taskDescription: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    repeatOption: \"Không lặp lại\",\n    customRepeat: {\n      repeatEvery: 1,\n      repeatUnit: \"ngày\",\n      repeatDays: []\n    }\n  });\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    Aos.init({\n      duration: 1000\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n  const handleAddNewWork = () => {\n    setIsModalOpen(true);\n    setEditMode(false);\n    setFormData({\n      id: null,\n      name: \"\",\n      type: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      describe: \"\",\n      tag: \"\"\n    });\n  };\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTaskFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleAddTask = workId => {\n    setIsTaskModalOpen(true);\n    setTaskFormData({\n      ...taskFormData,\n      workId\n    });\n  };\n  const handleDone = () => {\n    const {\n      name,\n      type,\n      startDate,\n      endDate\n    } = formData;\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    setTasks(prevTasks => {\n      const updatedTasks = {\n        ...prevTasks\n      };\n      if (editMode) {\n        Object.keys(updatedTasks).forEach(type => {\n          updatedTasks[type] = updatedTasks[type].filter(task => task.id !== formData.id);\n        });\n      }\n      updatedTasks[type] = [...updatedTasks[type], {\n        ...formData,\n        id: formData.id || Date.now()\n      }];\n      return updatedTasks;\n    });\n    setIsModalOpen(false);\n  };\n  const handleDoneTask = () => {\n    if (!taskFormData.taskName || !taskFormData.startTime || !taskFormData.endTime) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    setTasks(prevTasks => {\n      const updatedTasks = {\n        ...prevTasks\n      };\n      const taskToUpdate = updatedTasks[taskFormData.workId].find(task => task.id === taskFormData.workId);\n      if (taskToUpdate) {\n        if (!taskToUpdate.subTasks) {\n          taskToUpdate.subTasks = [];\n        }\n        taskToUpdate.subTasks.push({\n          name: taskFormData.taskName,\n          description: taskFormData.taskDescription,\n          startTime: taskFormData.startTime,\n          endTime: taskFormData.endTime,\n          repeatOption: taskFormData.repeatOption,\n          customRepeat: taskFormData.customRepeat\n        });\n      }\n      return updatedTasks;\n    });\n    setIsTaskModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setIsTaskModalOpen(false);\n  };\n  const handleDeleteTask = (type, id) => {\n    setTasks(prevTasks => ({\n      ...prevTasks,\n      [type]: prevTasks[type].filter(task => task.id !== id)\n    }));\n  };\n  const handleEditTask = task => {\n    setEditMode(true);\n    setFormData(task);\n    setIsModalOpen(true);\n  };\n  const handleTaskCheckbox = (type, workId, subTaskIndex) => {\n    setTasks(prevTasks => {\n      const updatedTasks = {\n        ...prevTasks\n      };\n      updatedTasks[type] = updatedTasks[type].map(task => {\n        if (task.id === workId) {\n          return {\n            ...task,\n            subTasks: task.subTasks ? task.subTasks.filter((_, idx) => idx !== subTaskIndex) : [] // Đảm bảo `subTasks` không bị undefined\n          };\n        }\n        return task;\n      });\n      return updatedTasks;\n    });\n  };\n  const handleDragStart = (e, task, type) => {\n    e.dataTransfer.setData(\"task\", JSON.stringify({\n      ...task,\n      type\n    }));\n  };\n  const handleDrop = (e, newType) => {\n    const data = JSON.parse(e.dataTransfer.getData(\"task\"));\n    if (data.type === newType) return;\n    setTasks(prevTasks => {\n      const updatedSourceTasks = prevTasks[data.type].filter(task => task.id !== data.id);\n      const updatedTargetTasks = [...prevTasks[newType], {\n        ...data,\n        type: newType\n      }];\n      return {\n        ...prevTasks,\n        [data.type]: updatedSourceTasks,\n        [newType]: updatedTargetTasks\n      };\n    });\n  };\n  const allowDrop = e => e.preventDefault();\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}/${month}/${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-body-conatiner\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"dash-header\",\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-work-btn\",\n      onClick: handleAddNewWork,\n      children: \"Add new work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editMode ? \"Edit Work\" : \"Add New Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter work name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: formData.type,\n            onChange: handleFormChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"doNow\",\n              children: \"Do now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"schedule\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"delegate\",\n              children: \"Delegate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"drop\",\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"tag\",\n            value: formData.tag,\n            onChange: e => {\n              handleFormChange(e);\n              if (e.target.value === \"Other\") {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: \"\"\n                }));\n              } else {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: null\n                }));\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"H\\u1ECDc t\\u1EADp\",\n              children: \"H\\u1ECDc t\\u1EADp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"L\\xE0m vi\\u1EC7c\",\n              children: \"L\\xE0m vi\\u1EC7c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ngh\\u1EC9 ng\\u01A1i\",\n              children: \"Ngh\\u1EC9 ng\\u01A1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Gi\\u1EA3i tr\\xED\",\n              children: \"Gi\\u1EA3i tr\\xED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), formData.tag === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter custom tag\",\n            name: \"customTag\",\n            value: formData.customTag || \"\",\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"startDate\",\n            value: formData.startDate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"endDate\",\n            value: formData.endDate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Describe work (use # for hashtags)\",\n          name: \"describe\",\n          value: formData.describe,\n          onChange: handleFormChange,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDone,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), isTaskModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Add Task for \", taskFormData.workId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter task name\",\n          name: \"taskName\",\n          value: taskFormData.taskName,\n          onChange: handleTaskFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Task description\",\n          name: \"taskDescription\",\n          value: taskFormData.taskDescription,\n          onChange: handleTaskFormChange,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"startTime\",\n            value: taskFormData.startTime,\n            onChange: handleTaskFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"endTime\",\n            value: taskFormData.endTime,\n            onChange: handleTaskFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"repeatOption\",\n          value: taskFormData.repeatOption,\n          onChange: handleTaskFormChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Kh\\xF4ng l\\u1EB7p l\\u1EA1i\",\n            children: \"Kh\\xF4ng l\\u1EB7p l\\u1EA1i\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"H\\xE0ng ng\\xE0y\",\n            children: \"H\\xE0ng ng\\xE0y\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"T\\xF9y ch\\u1EC9nh\",\n            children: \"T\\xF9y ch\\u1EC9nh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDoneTask,\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsTaskModalOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"body-content\",\n      children: [\"doNow\", \"schedule\", \"delegate\", \"drop\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-box\",\n        onDrop: e => handleDrop(e, type),\n        onDragOver: allowDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: type.charAt(0).toUpperCase() + type.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: tasks[type].map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            draggable: true,\n            onDragStart: e => handleDragStart(e, task, type),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => handleTaskCheckbox(type, task.id, -1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [formatDate(task.startDate), \" - \", formatDate(task.endDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: task.describe ? task.describe.split(\" \").map((word, i) => word.startsWith(\"#\") ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: [word, \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 31\n                }, this) : `${word} `) : \"No description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {\n                className: \"add-task-icon\",\n                onClick: () => handleAddTask(task.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillEdit, {\n                className: \"edit-icon\",\n                onClick: () => handleEditTask(task)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                className: \"delete-icon\",\n                onClick: () => handleDeleteTask(type, task.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 19\n            }, this)]\n          }, task.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"4XTyaAY05yDmjwsOC953RGRH258=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Aos","AiFillDelete","AiFillEdit","AiOutlinePlus","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","savedTasks","localStorage","getItem","JSON","parse","doNow","schedule","delegate","drop","isModalOpen","setIsModalOpen","isTaskModalOpen","setIsTaskModalOpen","formData","setFormData","id","name","type","startDate","endDate","describe","tag","taskFormData","setTaskFormData","workId","taskName","taskDescription","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","repeatDays","editMode","setEditMode","init","duration","setItem","stringify","handleAddNewWork","handleFormChange","e","value","target","prev","handleTaskFormChange","handleAddTask","handleDone","alert","prevTasks","updatedTasks","Object","keys","forEach","filter","task","Date","now","handleDoneTask","taskToUpdate","find","subTasks","push","description","handleCancel","handleDeleteTask","handleEditTask","handleTaskCheckbox","subTaskIndex","map","_","idx","handleDragStart","dataTransfer","setData","handleDrop","newType","data","getData","updatedSourceTasks","updatedTargetTasks","allowDrop","preventDefault","formatDate","dateString","year","month","day","split","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","customTag","rows","onDrop","onDragOver","charAt","toUpperCase","slice","draggable","onDragStart","word","i","startsWith","style","color","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Aos from \"aos\";\r\nimport \"./styles/dashboard.css\";\r\nimport { AiFillDelete, AiFillEdit, AiOutlinePlus } from \"react-icons/ai\";\r\n\r\nconst Dashboard = () => {\r\n  const [tasks, setTasks] = useState(() => {\r\n    const savedTasks = localStorage.getItem(\"tasks\");\r\n    return savedTasks ? JSON.parse(savedTasks) : { doNow: [], schedule: [], delegate: [], drop: [] };\r\n  });\r\n\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    id: null,\r\n    name: \"\",\r\n    type: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    describe: \"\",\r\n    tag: \"\",\r\n  });\r\n\r\n  const [taskFormData, setTaskFormData] = useState({\r\n    workId: null,\r\n    taskName: \"\",\r\n    taskDescription: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    repeatOption: \"Không lặp lại\",\r\n    customRepeat: {\r\n      repeatEvery: 1,\r\n      repeatUnit: \"ngày\",\r\n      repeatDays: [],\r\n    },\r\n  });\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Aos.init({ duration: 1000 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n  }, [tasks]);\r\n\r\n  const handleAddNewWork = () => {\r\n    setIsModalOpen(true);\r\n    setEditMode(false);\r\n    setFormData({\r\n      id: null,\r\n      name: \"\",\r\n      type: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      describe: \"\",\r\n      tag: \"\",\r\n    });\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleTaskFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setTaskFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleAddTask = (workId) => {\r\n    setIsTaskModalOpen(true);\r\n    setTaskFormData({ ...taskFormData, workId });\r\n  };\r\n\r\n  const handleDone = () => {\r\n    const { name, type, startDate, endDate } = formData;\r\n\r\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = { ...prevTasks };\r\n\r\n      if (editMode) {\r\n        Object.keys(updatedTasks).forEach((type) => {\r\n          updatedTasks[type] = updatedTasks[type].filter(\r\n            (task) => task.id !== formData.id\r\n          );\r\n        });\r\n      }\r\n\r\n      updatedTasks[type] = [\r\n        ...updatedTasks[type],\r\n        { ...formData, id: formData.id || Date.now() },\r\n      ];\r\n\r\n      return updatedTasks;\r\n    });\r\n\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDoneTask = () => {\r\n    if (!taskFormData.taskName || !taskFormData.startTime || !taskFormData.endTime) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = { ...prevTasks };\r\n      const taskToUpdate = updatedTasks[taskFormData.workId].find(\r\n        (task) => task.id === taskFormData.workId\r\n      );\r\n      if (taskToUpdate) {\r\n        if (!taskToUpdate.subTasks) {\r\n          taskToUpdate.subTasks = [];\r\n        }\r\n        taskToUpdate.subTasks.push({\r\n          name: taskFormData.taskName,\r\n          description: taskFormData.taskDescription,\r\n          startTime: taskFormData.startTime,\r\n          endTime: taskFormData.endTime,\r\n          repeatOption: taskFormData.repeatOption,\r\n          customRepeat: taskFormData.customRepeat,\r\n        });\r\n      }\r\n      return updatedTasks;\r\n    });\r\n    setIsTaskModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n    setIsTaskModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteTask = (type, id) => {\r\n    setTasks((prevTasks) => ({\r\n      ...prevTasks,\r\n      [type]: prevTasks[type].filter((task) => task.id !== id),\r\n    }));\r\n  };\r\n\r\n  const handleEditTask = (task) => {\r\n    setEditMode(true);\r\n    setFormData(task);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleTaskCheckbox = (type, workId, subTaskIndex) => {\r\n    setTasks((prevTasks) => {\r\n      const updatedTasks = { ...prevTasks };\r\n  \r\n      updatedTasks[type] = updatedTasks[type].map((task) => {\r\n        if (task.id === workId) {\r\n          return {\r\n            ...task,\r\n            subTasks: task.subTasks\r\n              ? task.subTasks.filter((_, idx) => idx !== subTaskIndex)\r\n              : [], // Đảm bảo `subTasks` không bị undefined\r\n          };\r\n        }\r\n        return task;\r\n      });\r\n  \r\n      return updatedTasks;\r\n    });\r\n  };\r\n  \r\n\r\n  const handleDragStart = (e, task, type) => {\r\n    e.dataTransfer.setData(\"task\", JSON.stringify({ ...task, type }));\r\n  };\r\n\r\n  const handleDrop = (e, newType) => {\r\n    const data = JSON.parse(e.dataTransfer.getData(\"task\"));\r\n\r\n    if (data.type === newType) return;\r\n\r\n    setTasks((prevTasks) => {\r\n      const updatedSourceTasks = prevTasks[data.type].filter(\r\n        (task) => task.id !== data.id\r\n      );\r\n      const updatedTargetTasks = [\r\n        ...prevTasks[newType],\r\n        { ...data, type: newType },\r\n      ];\r\n      return {\r\n        ...prevTasks,\r\n        [data.type]: updatedSourceTasks,\r\n        [newType]: updatedTargetTasks,\r\n      };\r\n    });\r\n  };\r\n\r\n  const allowDrop = (e) => e.preventDefault();\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const [year, month, day] = dateString.split(\"-\");\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-body-conatiner\" data-aos=\"zoom-in\">\r\n      <header id=\"dash-header\" className=\"search-bar\">\r\n        <h1>Dashboard</h1>\r\n      </header>\r\n      <button className=\"add-work-btn\" onClick={handleAddNewWork}>\r\n        Add new work\r\n      </button>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>{editMode ? \"Edit Work\" : \"Add New Work\"}</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter work name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleFormChange}\r\n            />\r\n            <div className=\"form-row\">\r\n              <select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleFormChange}\r\n              >\r\n                <option value=\"\">Select type</option>\r\n                <option value=\"doNow\">Do now</option>\r\n                <option value=\"schedule\">Schedule</option>\r\n                <option value=\"delegate\">Delegate</option>\r\n                <option value=\"drop\">Drop</option>\r\n              </select>\r\n              <select\r\n                name=\"tag\"\r\n                value={formData.tag}\r\n                onChange={(e) => {\r\n                  handleFormChange(e);\r\n                  if (e.target.value === \"Other\") {\r\n                    setFormData((prev) => ({ ...prev, customTag: \"\" }));\r\n                  } else {\r\n                    setFormData((prev) => ({ ...prev, customTag: null }));\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"\">Select tag</option>\r\n                <option value=\"Học tập\">Học tập</option>\r\n                <option value=\"Làm việc\">Làm việc</option>\r\n                <option value=\"Nghỉ ngơi\">Nghỉ ngơi</option>\r\n                <option value=\"Giải trí\">Giải trí</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n              {formData.tag === \"Other\" && (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter custom tag\"\r\n                  name=\"customTag\"\r\n                  value={formData.customTag || \"\"}\r\n                  onChange={handleFormChange}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={formData.startDate}\r\n                onChange={handleFormChange}\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                value={formData.endDate}\r\n                onChange={handleFormChange}\r\n              />\r\n            </div>\r\n            <textarea\r\n              placeholder=\"Describe work (use # for hashtags)\"\r\n              name=\"describe\"\r\n              value={formData.describe}\r\n              onChange={handleFormChange}\r\n              rows=\"4\"\r\n            ></textarea>\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleDone}>Done</button>\r\n              <button onClick={handleCancel}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isTaskModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>Add Task for {taskFormData.workId}</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter task name\"\r\n              name=\"taskName\"\r\n              value={taskFormData.taskName}\r\n              onChange={handleTaskFormChange}\r\n            />\r\n            <textarea\r\n              placeholder=\"Task description\"\r\n              name=\"taskDescription\"\r\n              value={taskFormData.taskDescription}\r\n              onChange={handleTaskFormChange}\r\n              rows=\"4\"\r\n            ></textarea>\r\n            <div className=\"form-row\">\r\n              <input\r\n                type=\"time\"\r\n                name=\"startTime\"\r\n                value={taskFormData.startTime}\r\n                onChange={handleTaskFormChange}\r\n              />\r\n              <input\r\n                type=\"time\"\r\n                name=\"endTime\"\r\n                value={taskFormData.endTime}\r\n                onChange={handleTaskFormChange}\r\n              />\r\n            </div>\r\n            <select\r\n              name=\"repeatOption\"\r\n              value={taskFormData.repeatOption}\r\n              onChange={handleTaskFormChange}\r\n            >\r\n              <option value=\"Không lặp lại\">Không lặp lại</option>\r\n              <option value=\"Hàng ngày\">Hàng ngày</option>\r\n              <option value=\"Tùy chỉnh\">Tùy chỉnh</option>\r\n            </select>\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleDoneTask}>Add Task</button>\r\n              <button onClick={() => setIsTaskModalOpen(false)}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <main className=\"body-content\">\r\n        {[\"doNow\", \"schedule\", \"delegate\", \"drop\"].map((type) => (\r\n          <div\r\n            className=\"task-box\"\r\n            key={type}\r\n            onDrop={(e) => handleDrop(e, type)}\r\n            onDragOver={allowDrop}\r\n          >\r\n            <h2>{type.charAt(0).toUpperCase() + type.slice(1)}</h2>\r\n            <div className=\"task-list\">\r\n              {tasks[type].map((task) => (\r\n                <div\r\n                  key={task.id}\r\n                  className=\"task\"\r\n                  draggable\r\n                  onDragStart={(e) => handleDragStart(e, task, type)}\r\n                >\r\n                  <div>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleTaskCheckbox(type, task.id, -1)}\r\n                    />\r\n                    <span>{task.name}</span>\r\n                    <p>\r\n                      {formatDate(task.startDate)} - {formatDate(task.endDate)}\r\n                    </p>\r\n                    <p>\r\n                      {task.describe\r\n                        ? task.describe.split(\" \").map((word, i) =>\r\n                            word.startsWith(\"#\") ? (\r\n                              <span key={i} style={{ color: \"blue\" }}>\r\n                                {word}{\" \"}\r\n                              </span>\r\n                            ) : (\r\n                              `${word} `\r\n                            )\r\n                          )\r\n                        : \"No description\"}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"task-buttons\">\r\n                    <AiOutlinePlus\r\n                      className=\"add-task-icon\"\r\n                      onClick={() => handleAddTask(task.id)}\r\n                    />\r\n                    <AiFillEdit\r\n                      className=\"edit-icon\"\r\n                      onClick={() => handleEditTask(task)}\r\n                    />\r\n                    <AiFillDelete\r\n                      className=\"delete-icon\"\r\n                      onClick={() => handleDeleteTask(type, task.id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}