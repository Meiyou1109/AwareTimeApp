{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\n  const [recycledWorks, setRecycledWorks] = useState([]);\n\n  // Filter works based on view mode (ongoing/completed) and search query\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat();\n    if (viewMode === \"ongoing\") {\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index);\n    }\n    if (viewMode === \"recycle\") {\n      return recycledWorks;\n    }\n    return [];\n  }, [viewMode, works, completedWorks, recycledWorks]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n\n  // Expand all works\n  const handleExpandAll = () => {\n    setExpandedWorkIds(filteredWorks.map(work => work.id));\n  };\n\n  // Collapse all works\n  const handleCollapseAll = () => {\n    setExpandedWorkIds([]);\n  };\n\n  // Toggle complete status of a work\n  const handleToggleComplete = work => {\n    if (viewMode === \"ongoing\" || viewMode === \"recycle\") {\n      const updatedWork = {\n        ...work,\n        isCompleted: !work.isCompleted\n      };\n      if (viewMode === \"ongoing\") {\n        if (updatedWork.isCompleted) {\n          setCompletedWorks(prev => [...prev, updatedWork]);\n        } else {\n          setWorks(prevWorks => {\n            const updatedWorks = {\n              ...prevWorks\n            };\n            const type = updatedWork.type || \"doNow\";\n            if (!updatedWorks[type].some(w => w.id === updatedWork.id)) {\n              updatedWorks[type] = [...updatedWorks[type], updatedWork];\n            }\n            return updatedWorks;\n          });\n        }\n      } else if (viewMode === \"recycle\") {\n        setRecycledWorks(prevRecycledWorks => prevRecycledWorks.map(w => w.id === work.id ? updatedWork : w));\n      }\n      setCompletedWorks(prev => updatedWork.isCompleted ? [...prev, updatedWork] : prev.filter(w => w.id !== work.id));\n    } else {\n      const updatedWork = {\n        ...work,\n        isCompleted: false\n      };\n      setCompletedWorks(prev => {\n        const updatedCompleted = prev.filter(w => w.id !== work.id);\n        return updatedCompleted;\n      });\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = work.type || \"doNow\";\n        if (!updatedWorks[type].some(w => w.id === work.id)) {\n          updatedWorks[type] = [...updatedWorks[type], updatedWork];\n        }\n        return updatedWorks;\n      });\n    }\n  };\n\n  // Toggle task completion status\n  const toggleTaskCompletion = (workId, taskIndex) => {\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      const taskKey = `${workId}-${taskIndex}`;\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\n      const work = filteredWorks.find(w => w.id === workId);\n      if (work) {\n        const totalTasks = work.subWorks.length;\n        const completedTasks = work.subWorks.filter((_, index) => updatedStatus[`${workId}-${index}`]).length;\n        if (completedTasks === totalTasks) {\n          const updatedWork = {\n            ...work,\n            isCompleted: true\n          };\n          if (viewMode !== \"recycle\") {\n            setCompletedWorks(prev => {\n              if (!prev.some(w => w.id === work.id)) {\n                return [...prev, updatedWork];\n              }\n              return prev;\n            });\n            setWorks(prevWorks => {\n              const updatedWorks = {\n                ...prevWorks\n              };\n              Object.keys(updatedWorks).forEach(key => {\n                updatedWorks[key] = updatedWorks[key].filter(w => w.id !== work.id);\n              });\n              return updatedWorks;\n            });\n          } else {\n            setRecycledWorks(prevRecycledWorks => prevRecycledWorks.map(w => w.id === work.id ? updatedWork : w));\n          }\n        } else if (completedTasks < totalTasks && viewMode === \"completed\") {\n          setCompletedWorks(prev => prev.filter(w => w.id !== work.id));\n          setWorks(prevWorks => {\n            const updatedWorks = {\n              ...prevWorks\n            };\n            const type = work.type || \"doNow\";\n            if (!updatedWorks[type].some(w => w.id === work.id)) {\n              updatedWorks[type] = [...updatedWorks[type], {\n                ...work,\n                isCompleted: false\n              }];\n            }\n            return updatedWorks;\n          });\n        }\n      }\n      return updatedStatus;\n    });\n  };\n\n  // Handle deleting a work item\n  const handleDeleteWork = workId => {\n    const deletedWork = filteredWorks.find(work => work.id === workId);\n    if (deletedWork) {\n      setRecycledWorks(prevRecycledWorks => [...prevRecycledWorks, deletedWork]);\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(key => {\n        updatedWorks[key] = updatedWorks[key].filter(w => w.id !== workId);\n      });\n      return updatedWorks;\n    });\n    setCompletedWorks(prevCompletedWorks => prevCompletedWorks.filter(work => work.id !== workId));\n  };\n\n  // Handle restoring a work item from recycle bin\n  const handleRestoreWork = workId => {\n    const restoredWork = recycledWorks.find(work => work.id === workId);\n    if (restoredWork) {\n      if (restoredWork.isCompleted) {\n        setCompletedWorks(prev => {\n          if (!prev.some(w => w.id === restoredWork.id)) {\n            return [...prev, restoredWork];\n          }\n          return prev;\n        });\n      } else {\n        setWorks(prevWorks => {\n          const updatedWorks = {\n            ...prevWorks\n          };\n          const type = restoredWork.type || \"doNow\";\n          if (!updatedWorks[type].some(w => w.id === workId)) {\n            updatedWorks[type] = [...updatedWorks[type], restoredWork];\n          }\n          return updatedWorks;\n        });\n      }\n      setRecycledWorks(prevRecycledWorks => prevRecycledWorks.filter(work => work.id !== workId));\n    }\n  };\n\n  // Handle deleting a task within a work\n  const handleDeleteTask = (workId, taskIndex) => {\n    const isCompletedWork = completedWorks.some(work => work.id === workId);\n    if (isCompletedWork) {\n      setCompletedWorks(prevCompletedWorks => {\n        return prevCompletedWorks.map(work => {\n          if (work.id === workId) {\n            const updatedWork = {\n              ...work,\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex)\n            };\n            return updatedWork;\n          }\n          return work;\n        });\n      });\n    } else {\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(type => {\n          const workIndex = updatedWorks[type].findIndex(work => work.id === workId);\n          if (workIndex !== -1) {\n            const updatedWork = {\n              ...updatedWorks[type][workIndex]\n            };\n            updatedWork.subWorks = updatedWork.subWorks.filter((_, index) => index !== taskIndex);\n            updatedWorks[type] = [...updatedWorks[type].slice(0, workIndex), updatedWork, ...updatedWorks[type].slice(workIndex + 1)];\n          }\n        });\n        return updatedWorks;\n      });\n    }\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      delete updatedStatus[`${workId}-${taskIndex}`];\n      return updatedStatus;\n    });\n  };\n\n  // Calculate the progress of each work based on task completion status\n  const calculateProgress = work => {\n    if (!work.subWorks || work.subWorks.length === 0) {\n      return completedWorks.some(completedWork => completedWork.id === work.id) ? 100 : 0;\n    }\n    const totalTasks = work.subWorks.length;\n    const completedTasks = work.subWorks.filter((_, index) => {\n      const taskKey = `${work.id}-${index}`;\n      return taskCompletionStatus[taskKey];\n    }).length;\n    return Math.round(completedTasks / totalTasks * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"recycle\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"recycle\"),\n        children: \"Recycle Bin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expand-collapse-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-btn\",\n        onClick: handleExpandAll,\n        children: \"Expand All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collapse-btn\",\n        onClick: handleCollapseAll,\n        children: \"Collapse All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : viewMode === \"completed\" ? \"No completed works\" : \"No recycled works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const progress = calculateProgress(work);\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\" || work.isCompleted,\n                  onChange: () => handleToggleComplete(work)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 23\n                }, this), work.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [viewMode === \"recycle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"restore-bt\",\n                  style: {\n                    border: \"2px solid #007bff\",\n                    padding: \"4px 6px\"\n                  },\n                  onClick: () => handleRestoreWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiOutlineUndo, {\n                    size: 20,\n                    color: \"#007bff\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 342,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  onClick: () => handleDeleteWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container progress-container-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percentage\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)];\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              const taskKey = `${work.id}-${index}`;\n              const isTaskCompleted = taskCompletionStatus[taskKey];\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!isTaskCompleted,\n                    onChange: () => toggleTaskCompletion(work.id, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: isTaskCompleted ? \"line-through\" : \"none\"\n                    },\n                    children: [task.name, \" - Description: \", task.description, \", Time: \", task.startTime, \" - \", task.endTime, \", Repeat: \", task.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${task.customRepeat.repeatEvery} ${task.customRepeat.repeatUnit}${task.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(task.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\", \")}`}` : task.repeatOption]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"task-delete-icon\",\n                    onClick: () => handleDeleteTask(work.id, index),\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                      size: 14,\n                      className: \"task-delete-icon-style\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 424,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 420,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 23\n                }, this)\n              }, taskKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"r1gffThFkBy9bqsnI8UVzQg58Qg=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","AiOutlineUndo","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Project","works","setWorks","completedWorks","setCompletedWorks","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","taskCompletionStatus","setTaskCompletionStatus","recycledWorks","setRecycledWorks","filteredWorks","allOngoingWorks","Object","values","flat","filter","work","some","completedWork","id","index","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleExpandAll","map","handleCollapseAll","handleToggleComplete","updatedWork","isCompleted","prev","prevWorks","updatedWorks","type","w","prevRecycledWorks","updatedCompleted","toggleTaskCompletion","taskIndex","prevStatus","updatedStatus","taskKey","find","totalTasks","subWorks","length","completedTasks","_","keys","forEach","key","handleDeleteWork","deletedWork","prevCompletedWorks","handleRestoreWork","restoredWork","handleDeleteTask","isCompletedWork","workIndex","slice","calculateProgress","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","flatMap","progress","workElements","htmlFor","checked","name","style","border","padding","color","width","task","isTaskCompleted","push","textDecoration","description","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","Date","startDate","toLocaleDateString","repeatDays","join","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\r\n  const [recycledWorks, setRecycledWorks] = useState([]);\r\n\r\n  // Filter works based on view mode (ongoing/completed) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat();\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      return allOngoingWorks.filter(\r\n        (work) =>\r\n          !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) =>\r\n          self.findIndex((work) => work.id === completedWork.id) === index\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"recycle\") {\r\n      return recycledWorks;\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks, recycledWorks]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  // Expand all works\r\n  const handleExpandAll = () => {\r\n    setExpandedWorkIds(filteredWorks.map((work) => work.id));\r\n  };\r\n\r\n  // Collapse all works\r\n  const handleCollapseAll = () => {\r\n    setExpandedWorkIds([]);\r\n  };\r\n\r\n  // Toggle complete status of a work\r\n  const handleToggleComplete = (work) => {\r\n    if (viewMode === \"ongoing\" || viewMode === \"recycle\") {\r\n      const updatedWork = { ...work, isCompleted: !work.isCompleted };\r\n\r\n      if (viewMode === \"ongoing\") {\r\n        if (updatedWork.isCompleted) {\r\n          setCompletedWorks((prev) => [...prev, updatedWork]);\r\n        } else {\r\n          setWorks((prevWorks) => {\r\n            const updatedWorks = { ...prevWorks };\r\n            const type = updatedWork.type || \"doNow\";\r\n            if (!updatedWorks[type].some((w) => w.id === updatedWork.id)) {\r\n              updatedWorks[type] = [...updatedWorks[type], updatedWork];\r\n            }\r\n            return updatedWorks;\r\n          });\r\n        }\r\n      } else if (viewMode === \"recycle\") {\r\n        setRecycledWorks((prevRecycledWorks) =>\r\n          prevRecycledWorks.map((w) => (w.id === work.id ? updatedWork : w))\r\n        );\r\n      }\r\n\r\n      setCompletedWorks((prev) =>\r\n        updatedWork.isCompleted\r\n          ? [...prev, updatedWork]\r\n          : prev.filter((w) => w.id !== work.id)\r\n      );\r\n    } else {\r\n      const updatedWork = { ...work, isCompleted: false };\r\n\r\n      setCompletedWorks((prev) => {\r\n        const updatedCompleted = prev.filter((w) => w.id !== work.id);\r\n        return updatedCompleted;\r\n      });\r\n\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = work.type || \"doNow\";\r\n        if (!updatedWorks[type].some((w) => w.id === work.id)) {\r\n          updatedWorks[type] = [...updatedWorks[type], updatedWork];\r\n        }\r\n        return updatedWorks;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Toggle task completion status\r\n  const toggleTaskCompletion = (workId, taskIndex) => {\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      const taskKey = `${workId}-${taskIndex}`;\r\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\r\n\r\n      const work = filteredWorks.find((w) => w.id === workId);\r\n      if (work) {\r\n        const totalTasks = work.subWorks.length;\r\n        const completedTasks = work.subWorks.filter((_, index) => updatedStatus[`${workId}-${index}`]).length;\r\n\r\n        if (completedTasks === totalTasks) {\r\n          const updatedWork = { ...work, isCompleted: true };\r\n          if (viewMode !== \"recycle\") {\r\n            setCompletedWorks((prev) => {\r\n              if (!prev.some((w) => w.id === work.id)) {\r\n                return [...prev, updatedWork];\r\n              }\r\n              return prev;\r\n            });\r\n\r\n            setWorks((prevWorks) => {\r\n              const updatedWorks = { ...prevWorks };\r\n              Object.keys(updatedWorks).forEach((key) => {\r\n                updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== work.id);\r\n              });\r\n              return updatedWorks;\r\n            });\r\n          } else {\r\n            setRecycledWorks((prevRecycledWorks) =>\r\n              prevRecycledWorks.map((w) => (w.id === work.id ? updatedWork : w))\r\n            );\r\n          }\r\n        } else if (completedTasks < totalTasks && viewMode === \"completed\") {\r\n          setCompletedWorks((prev) => prev.filter((w) => w.id !== work.id));\r\n\r\n          setWorks((prevWorks) => {\r\n            const updatedWorks = { ...prevWorks };\r\n            const type = work.type || \"doNow\";\r\n            if (!updatedWorks[type].some((w) => w.id === work.id)) {\r\n              updatedWorks[type] = [...updatedWorks[type], { ...work, isCompleted: false }];\r\n            }\r\n            return updatedWorks;\r\n          });\r\n        }\r\n      }\r\n\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Handle deleting a work item\r\n  const handleDeleteWork = (workId) => {\r\n    const deletedWork = filteredWorks.find((work) => work.id === workId);\r\n\r\n    if (deletedWork) {\r\n      setRecycledWorks((prevRecycledWorks) => [...prevRecycledWorks, deletedWork]);\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((key) => {\r\n        updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== workId);\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    setCompletedWorks((prevCompletedWorks) =>\r\n      prevCompletedWorks.filter((work) => work.id !== workId)\r\n    );\r\n  };\r\n\r\n  // Handle restoring a work item from recycle bin\r\n  const handleRestoreWork = (workId) => {\r\n    const restoredWork = recycledWorks.find((work) => work.id === workId);\r\n\r\n    if (restoredWork) {\r\n      if (restoredWork.isCompleted) {\r\n        setCompletedWorks((prev) => {\r\n          if (!prev.some((w) => w.id === restoredWork.id)) {\r\n            return [...prev, restoredWork];\r\n          }\r\n          return prev;\r\n        });\r\n      } else {\r\n        setWorks((prevWorks) => {\r\n          const updatedWorks = { ...prevWorks };\r\n          const type = restoredWork.type || \"doNow\";\r\n          if (!updatedWorks[type].some((w) => w.id === workId)) {\r\n            updatedWorks[type] = [...updatedWorks[type], restoredWork];\r\n          }\r\n          return updatedWorks;\r\n        });\r\n      }\r\n\r\n      setRecycledWorks((prevRecycledWorks) =>\r\n        prevRecycledWorks.filter((work) => work.id !== workId)\r\n      );\r\n    }\r\n  };\r\n\r\n  // Handle deleting a task within a work\r\n  const handleDeleteTask = (workId, taskIndex) => {\r\n    const isCompletedWork = completedWorks.some((work) => work.id === workId);\r\n\r\n    if (isCompletedWork) {\r\n      setCompletedWorks((prevCompletedWorks) => {\r\n        return prevCompletedWorks.map((work) => {\r\n          if (work.id === workId) {\r\n            const updatedWork = {\r\n              ...work,\r\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex),\r\n            };\r\n            return updatedWork;\r\n          }\r\n          return work;\r\n        });\r\n      });\r\n    } else {\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((type) => {\r\n          const workIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n          if (workIndex !== -1) {\r\n            const updatedWork = { ...updatedWorks[type][workIndex] };\r\n            updatedWork.subWorks = updatedWork.subWorks.filter(\r\n              (_, index) => index !== taskIndex\r\n            );\r\n            updatedWorks[type] = [\r\n              ...updatedWorks[type].slice(0, workIndex),\r\n              updatedWork,\r\n              ...updatedWorks[type].slice(workIndex + 1),\r\n            ];\r\n          }\r\n        });\r\n        return updatedWorks;\r\n      });\r\n    }\r\n\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      delete updatedStatus[`${workId}-${taskIndex}`];\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Calculate the progress of each work based on task completion status\r\n  const calculateProgress = (work) => {\r\n    if (!work.subWorks || work.subWorks.length === 0) {\r\n      return completedWorks.some((completedWork) => completedWork.id === work.id)\r\n        ? 100\r\n        : 0;\r\n    }\r\n\r\n    const totalTasks = work.subWorks.length;\r\n    const completedTasks = work.subWorks.filter((_, index) => {\r\n      const taskKey = `${work.id}-${index}`;\r\n      return taskCompletionStatus[taskKey];\r\n    }).length;\r\n\r\n    return Math.round((completedTasks / totalTasks) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"recycle\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"recycle\")}\r\n        >\r\n          Recycle Bin\r\n        </button>\r\n      </div>\r\n      <div className=\"expand-collapse-buttons\">\r\n        <button className=\"expand-btn\" onClick={handleExpandAll}>\r\n          Expand All\r\n        </button>\r\n        <button className=\"collapse-btn\" onClick={handleCollapseAll}>\r\n          Collapse All\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : viewMode === \"completed\"\r\n              ? \"No completed works\"\r\n              : \"No recycled works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const progress = calculateProgress(work);\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={viewMode === \"completed\" || work.isCompleted}\r\n                        onChange={() => handleToggleComplete(work)}\r\n                      />\r\n                      {work.name}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {viewMode === \"recycle\" && (\r\n                        <button\r\n                          id=\"restore-bt\"\r\n                          style={{ border: \"2px solid #007bff\", padding: \"4px 6px\" }}\r\n                          onClick={() => handleRestoreWork(work.id)}\r\n                        >\r\n                          <AiOutlineUndo size={20} color=\"#007bff\" />\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        id=\"del-bt\"\r\n                        onClick={() => handleDeleteWork(work.id)}\r\n                      >\r\n                        <AiFillDelete size={20} color=\"#FF6969\" />\r\n                      </button>\r\n                      <button\r\n                        className=\"expand-bt\"\r\n                        onClick={() => toggleExpand(work.id)}\r\n                      >\r\n                        {expandedWorkIds.includes(work.id) ? (\r\n                          <FaChevronUp />\r\n                        ) : (\r\n                          <FaChevronDown />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"progress-container progress-container-full\">\r\n                    <div className=\"progress-bar\">\r\n                      <div\r\n                        className=\"progress\"\r\n                        style={{\r\n                          width: `${progress}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <span className=\"progress-percentage\">{progress}%</span>\r\n                  </div>\r\n                </li>,\r\n              ];\r\n\r\n              if (\r\n                expandedWorkIds.includes(work.id) &&\r\n                work.subWorks &&\r\n                work.subWorks.length > 0\r\n              ) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  const taskKey = `${work.id}-${index}`;\r\n                  const isTaskCompleted = taskCompletionStatus[taskKey];\r\n\r\n                  workElements.push(\r\n                    <li key={taskKey} className=\"task-item\">\r\n                      <div className=\"task-details\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!isTaskCompleted}\r\n                          onChange={() => toggleTaskCompletion(work.id, index)}\r\n                        />\r\n                        <span\r\n                          style={{\r\n                            textDecoration: isTaskCompleted\r\n                              ? \"line-through\"\r\n                              : \"none\",\r\n                          }}\r\n                        >\r\n                          {task.name} - Description: {task.description}, Time: {task.startTime} - {task.endTime}, Repeat: {task.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${task.customRepeat.repeatEvery} ${\r\n                                task.customRepeat.repeatUnit\r\n                              }${\r\n                                task.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(\r\n                                      task.customRepeat.startDate\r\n                                    ).toLocaleDateString(\"vi-VN\")}`\r\n                                  : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\r\n                                      \", \"\r\n                                    )}`\r\n                              }`\r\n                            : task.repeatOption}\r\n                        </span>\r\n                        <button\r\n                          className=\"task-delete-icon\"\r\n                          onClick={() => handleDeleteTask(work.id, index)}\r\n                        >\r\n                          <AiFillDelete size={14} className=\"task-delete-icon-style\" />\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}