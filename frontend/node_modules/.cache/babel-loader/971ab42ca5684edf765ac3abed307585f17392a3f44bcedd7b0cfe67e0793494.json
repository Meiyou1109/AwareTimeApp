{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isFocusing, setIsFocusing] = useState(false);\n  const [pomodoroTime, setPomodoroTime] = useState(25 * 60); // 25 minutes in seconds\n  const [pomodoroState, setPomodoroState] = useState(\"Work\"); // Work, Short Break, Long Break\n  const [pomodoroCycles, setPomodoroCycles] = useState(0); // Count work sessions\n  const [isRunning, setIsRunning] = useState(false); // Timer state\n\n  // Handle Auto Select Task\n  useEffect(() => {\n    if (mode === \"auto\") {\n      handleAutoSelectTask();\n    }\n  }, [mode, works]);\n\n  // Timer logic\n  useEffect(() => {\n    let timer;\n    if (isRunning && pomodoroTime > 0) {\n      timer = setInterval(() => {\n        setPomodoroTime(prev => prev - 1);\n      }, 1000);\n    } else if (pomodoroTime === 0) {\n      handlePomodoroEnd();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, pomodoroTime]);\n  const handlePomodoroEnd = () => {\n    if (pomodoroState === \"Work\") {\n      setPomodoroCycles(prev => prev + 1);\n      if ((pomodoroCycles + 1) % 4 === 0) {\n        setPomodoroState(\"Long Break\");\n        setPomodoroTime(15 * 60); // 15 minutes\n      } else {\n        setPomodoroState(\"Short Break\");\n        setPomodoroTime(5 * 60); // 5 minutes\n      }\n    } else {\n      setPomodoroState(\"Work\");\n      setPomodoroTime(25 * 60); // 25 minutes\n    }\n    toast.info(`${pomodoroState} session ended. Starting next session!`);\n  };\n  const handlePomodoroSkip = () => {\n    setIsRunning(false);\n    handlePomodoroEnd();\n  };\n  const handlePomodoroPause = () => {\n    setIsRunning(prev => !prev);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${String(mins).padStart(2, \"0\")}:${String(secs).padStart(2, \"0\")}`;\n  };\n  const handleAutoSelectTask = () => {\n    if (!works) {\n      setCurrentTask(null);\n      return;\n    }\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n    for (const type in works) {\n      for (const work of works[type] || []) {\n        if (work.subWorks && work.subWorks.length > 0) {\n          for (const task of work.subWorks) {\n            const [startHour, startMinute] = task.startTime.split(\":\").map(Number);\n            const [endHour, endMinute] = task.endTime.split(\":\").map(Number);\n            const taskStartTime = startHour * 60 + startMinute;\n            const taskEndTime = endHour * 60 + endMinute;\n            if (currentTime >= taskStartTime && currentTime <= taskEndTime) {\n              setCurrentTask({\n                ...task,\n                workName: work.name,\n                workStartDate: work.startDate,\n                workEndDate: work.endDate\n              });\n              return;\n            }\n          }\n        }\n      }\n    }\n    setCurrentTask(null);\n  };\n  const openManualSelectModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleManualSelectWork = work => {\n    setSelectedWork(work);\n    setSelectedTask(null);\n  };\n  const handleManualSelectTask = task => {\n    setSelectedTask(task);\n  };\n  const handleManualSelectionDone = () => {\n    if (!selectedTask) {\n      toast.error(\"Vui lòng chọn một Task trước khi nhấn Done!\");\n      return;\n    }\n    setCurrentTask({\n      ...selectedTask,\n      workName: selectedWork.name,\n      workStartDate: selectedWork.startDate,\n      workEndDate: selectedWork.endDate\n    });\n    setIsModalOpen(false);\n    setSelectedWork(null);\n    setSelectedTask(null);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedWork(null);\n    setSelectedTask(null);\n  };\n  const handleFocusStart = () => {\n    const task = mode === \"free\" ? null : mode === \"auto\" ? currentTask : selectedTask;\n    if (!task && mode !== \"free\") {\n      alert(\"No task selected for focus.\");\n      return;\n    }\n    setIsFocusing(true);\n    toast.success(\"Focus session started!\");\n  };\n  const handleFocusStop = () => {\n    setIsFocusing(false);\n    toast.info(\"Focus session stopped.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-modes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"auto\"),\n        children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n        onClick: openManualSelectModal,\n        children: \"T\\u1EF1 ch\\u1ECDn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"free\"),\n        children: \"T\\u1EF1 do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [pomodoroState, \" - \", formatTime(pomodoroTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"focus-button\",\n            onClick: handlePomodoroPause,\n            children: isRunning ? \"Pause\" : \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"focus-button\",\n            onClick: handlePomodoroSkip,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [mode === \"auto\" && currentTask && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Task hi\\u1EC7n t\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Work:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 16\n          }, this), \" \", currentTask.workName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Task:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 16\n          }, this), \" \", currentTask.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Th\\u1EDDi gian:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 16\n          }, this), \" \", currentTask.startTime, \" - \", currentTask.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ng\\xE0y Work:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 16\n          }, this), \" \", currentTask.workStartDate, \" - \", currentTask.workEndDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), mode === \"free\" && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Focus kh\\xF4ng gi\\u1EDBi h\\u1EA1n th\\u1EDDi gian.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 29\n      }, this), isFocusing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"focus-button\",\n        onClick: handleFocusStop,\n        children: \"D\\u1EEBng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"focus-button\",\n        onClick: handleFocusStart,\n        children: \"B\\u1EAFt \\u0111\\u1EA7u\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"d45zVQispW3UIPuKWyJccGVkl2w=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTask","setCurrentTask","isModalOpen","setIsModalOpen","isFocusing","setIsFocusing","pomodoroTime","setPomodoroTime","pomodoroState","setPomodoroState","pomodoroCycles","setPomodoroCycles","isRunning","setIsRunning","handleAutoSelectTask","timer","setInterval","prev","handlePomodoroEnd","clearInterval","info","handlePomodoroSkip","handlePomodoroPause","formatTime","seconds","mins","Math","floor","secs","String","padStart","now","Date","currentTime","getHours","getMinutes","type","work","subWorks","length","task","startHour","startMinute","startTime","split","map","Number","endHour","endMinute","endTime","taskStartTime","taskEndTime","workName","name","workStartDate","startDate","workEndDate","endDate","openManualSelectModal","handleManualSelectWork","handleManualSelectTask","handleManualSelectionDone","error","closeModal","handleFocusStart","alert","success","handleFocusStop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isFocusing, setIsFocusing] = useState(false);\r\n\r\n  const [pomodoroTime, setPomodoroTime] = useState(25 * 60); // 25 minutes in seconds\r\n  const [pomodoroState, setPomodoroState] = useState(\"Work\"); // Work, Short Break, Long Break\r\n  const [pomodoroCycles, setPomodoroCycles] = useState(0); // Count work sessions\r\n  const [isRunning, setIsRunning] = useState(false); // Timer state\r\n\r\n  // Handle Auto Select Task\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      handleAutoSelectTask();\r\n    }\r\n  }, [mode, works]);\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && pomodoroTime > 0) {\r\n      timer = setInterval(() => {\r\n        setPomodoroTime((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (pomodoroTime === 0) {\r\n      handlePomodoroEnd();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, pomodoroTime]);\r\n\r\n  const handlePomodoroEnd = () => {\r\n    if (pomodoroState === \"Work\") {\r\n      setPomodoroCycles((prev) => prev + 1);\r\n      if ((pomodoroCycles + 1) % 4 === 0) {\r\n        setPomodoroState(\"Long Break\");\r\n        setPomodoroTime(15 * 60); // 15 minutes\r\n      } else {\r\n        setPomodoroState(\"Short Break\");\r\n        setPomodoroTime(5 * 60); // 5 minutes\r\n      }\r\n    } else {\r\n      setPomodoroState(\"Work\");\r\n      setPomodoroTime(25 * 60); // 25 minutes\r\n    }\r\n    toast.info(`${pomodoroState} session ended. Starting next session!`);\r\n  };\r\n\r\n  const handlePomodoroSkip = () => {\r\n    setIsRunning(false);\r\n    handlePomodoroEnd();\r\n  };\r\n\r\n  const handlePomodoroPause = () => {\r\n    setIsRunning((prev) => !prev);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${String(mins).padStart(2, \"0\")}:${String(secs).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const handleAutoSelectTask = () => {\r\n    if (!works) {\r\n      setCurrentTask(null);\r\n      return;\r\n    }\r\n\r\n    const now = new Date();\r\n    const currentTime = now.getHours() * 60 + now.getMinutes();\r\n\r\n    for (const type in works) {\r\n      for (const work of works[type] || []) {\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          for (const task of work.subWorks) {\r\n            const [startHour, startMinute] = task.startTime.split(\":\").map(Number);\r\n            const [endHour, endMinute] = task.endTime.split(\":\").map(Number);\r\n            const taskStartTime = startHour * 60 + startMinute;\r\n            const taskEndTime = endHour * 60 + endMinute;\r\n\r\n            if (currentTime >= taskStartTime && currentTime <= taskEndTime) {\r\n              setCurrentTask({\r\n                ...task,\r\n                workName: work.name,\r\n                workStartDate: work.startDate,\r\n                workEndDate: work.endDate,\r\n              });\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setCurrentTask(null);\r\n  };\r\n\r\n  const openManualSelectModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleManualSelectWork = (work) => {\r\n    setSelectedWork(work);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const handleManualSelectTask = (task) => {\r\n    setSelectedTask(task);\r\n  };\r\n\r\n  const handleManualSelectionDone = () => {\r\n    if (!selectedTask) {\r\n      toast.error(\"Vui lòng chọn một Task trước khi nhấn Done!\");\r\n      return;\r\n    }\r\n    setCurrentTask({\r\n      ...selectedTask,\r\n      workName: selectedWork.name,\r\n      workStartDate: selectedWork.startDate,\r\n      workEndDate: selectedWork.endDate,\r\n    });\r\n    setIsModalOpen(false);\r\n    setSelectedWork(null);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedWork(null);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const handleFocusStart = () => {\r\n    const task = mode === \"free\" ? null : mode === \"auto\" ? currentTask : selectedTask;\r\n\r\n    if (!task && mode !== \"free\") {\r\n      alert(\"No task selected for focus.\");\r\n      return;\r\n    }\r\n\r\n    setIsFocusing(true);\r\n    toast.success(\"Focus session started!\");\r\n  };\r\n\r\n  const handleFocusStop = () => {\r\n    setIsFocusing(false);\r\n    toast.info(\"Focus session stopped.\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"focus-modes\">\r\n        <button\r\n          className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"auto\")}\r\n        >\r\n          Tự động\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n          onClick={openManualSelectModal}\r\n        >\r\n          Tự chọn\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"free\")}\r\n        >\r\n          Tự do\r\n        </button>\r\n\r\n        {/* Pomodoro Timer */}\r\n        <div className=\"pomodoro-timer\">\r\n          <h3>{pomodoroState} - {formatTime(pomodoroTime)}</h3>\r\n          <div className=\"pomodoro-controls\">\r\n            <button className=\"focus-button\" onClick={handlePomodoroPause}>\r\n              {isRunning ? \"Pause\" : \"Start\"}\r\n            </button>\r\n            <button className=\"focus-button\" onClick={handlePomodoroSkip}>\r\n              Skip\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"focus-content\">\r\n        {mode === \"auto\" && currentTask && (\r\n          <div className=\"task-details\">\r\n            <h2>Task hiện tại</h2>\r\n            <p><strong>Work:</strong> {currentTask.workName}</p>\r\n            <p><strong>Task:</strong> {currentTask.name}</p>\r\n            <p><strong>Thời gian:</strong> {currentTask.startTime} - {currentTask.endTime}</p>\r\n            <p><strong>Ngày Work:</strong> {currentTask.workStartDate} - {currentTask.workEndDate}</p>\r\n          </div>\r\n        )}\r\n\r\n        {mode === \"free\" && <p>Focus không giới hạn thời gian.</p>}\r\n\r\n        {isFocusing ? (\r\n          <button className=\"focus-button\" onClick={handleFocusStop}>\r\n            Dừng\r\n          </button>\r\n        ) : (\r\n          <button className=\"focus-button\" onClick={handleFocusStart}>\r\n            Bắt đầu\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}