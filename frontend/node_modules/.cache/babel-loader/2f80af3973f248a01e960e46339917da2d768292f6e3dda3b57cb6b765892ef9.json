{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const [timeoutId, setTimeoutId] = useState(null); // Theo dõi trạng thái timeout\n\n  const timelineRef = useRef(null); // Tham chiếu đến timeline-container\n\n  // Pomodoro logic\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    if (isFocusPhase) {\n      setIsFocusPhase(false);\n      setCycle(prev => prev + 1);\n      if ((cycle + 1) % 4 === 0) {\n        setTimeLeft(900);\n        toast.info(\"Long Break! Take a 15-minute rest.\");\n      } else {\n        setTimeLeft(300);\n        toast.info(\"Short Break! Take a 5-minute rest.\");\n      }\n    } else {\n      setIsFocusPhase(true);\n      setTimeLeft(1500);\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  }, [cycle, isFocusPhase, toast]);\n  const handleStartPause = () => {\n    setIsRunning(prev => !prev);\n  };\n  const handleSkip = () => {\n    setTimeLeft(0);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Tự động cuộn đến vị trí current-time-line khi mở trang\n  useEffect(() => {\n    if (timelineRef.current) {\n      const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\n      timelineRef.current.scrollTo({\n        top: currentTimePosition - 50,\n        // Cuộn đến gần vị trí current-time-line, trừ 50px cho đẹp\n        behavior: \"smooth\"\n      });\n    }\n  }, [currentTime]);\n\n  // Theo dõi trạng thái cuộn và tự động cuộn lại nếu cần\n  const handleScroll = useCallback(() => {\n    if (timeoutId) clearTimeout(timeoutId);\n    const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\n    const timelineElement = timelineRef.current;\n    const isCurrentTimeVisible = currentTimePosition >= timelineElement.scrollTop && currentTimePosition <= timelineElement.scrollTop + timelineElement.offsetHeight;\n    if (!isCurrentTimeVisible) {\n      const id = setTimeout(() => {\n        timelineElement.scrollTo({\n          top: currentTimePosition - 50,\n          behavior: \"smooth\"\n        });\n      }, 10000); // 10 giây\n      setTimeoutId(id);\n    }\n  }, [currentTime, timeoutId]);\n  useEffect(() => {\n    const timelineElement = timelineRef.current;\n    if (timelineElement) {\n      timelineElement.addEventListener(\"scroll\", handleScroll);\n    }\n    return () => {\n      if (timelineElement) {\n        timelineElement.removeEventListener(\"scroll\", handleScroll);\n      }\n    };\n  }, [handleScroll]);\n  const calculateTasksForToday = useCallback(() => {\n    const today = new Date();\n    const tasks = [];\n    Object.values(works).flat().forEach(work => {\n      const workStartDate = new Date(work.startDate);\n      const workEndDate = new Date(work.endDate);\n      work.subWorks.forEach(task => {\n        const {\n          startTime,\n          endTime,\n          repeatOption,\n          customRepeat = {}\n        } = task;\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\n        let validDates = [];\n        if (repeatOption === \"Không lặp lại\") {\n          validDates = [workStartDate];\n        } else if (repeatOption === \"Hàng ngày\") {\n          let currentDate = new Date(workStartDate);\n          while (currentDate <= workEndDate) {\n            validDates.push(new Date(currentDate));\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n        } else if (repeatOption === \"Tùy chỉnh\") {\n          const {\n            repeatEvery = 1,\n            repeatUnit = \"ngày\",\n            startDate,\n            repeatDays = []\n          } = customRepeat;\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\n          let currentDate = new Date(taskStartDate);\n          if (repeatUnit === \"ngày\") {\n            while (currentDate <= workEndDate) {\n              validDates.push(new Date(currentDate));\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\n            }\n          } else if (repeatUnit === \"tuần\") {\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\n            while (currentDate <= workEndDate) {\n              const dayOfWeek = dayMapping[currentDate.getDay()];\n              if (repeatDays.includes(dayOfWeek)) {\n                validDates.push(new Date(currentDate));\n              }\n              currentDate.setDate(currentDate.getDate() + 1);\n            }\n          }\n        }\n        validDates.forEach(date => {\n          if (date.toDateString() === today.toDateString()) {\n            tasks.push({\n              ...task,\n              startTime: new Date(today.setHours(startHour, startMinute)),\n              endTime: new Date(today.setHours(endHour, endMinute))\n            });\n          }\n        });\n      });\n    });\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\n    setTasksForToday(sortedTasks);\n  }, [works]);\n  useEffect(() => {\n    if (mode === \"auto\") {\n      calculateTasksForToday();\n    }\n  }, [mode, calculateTasksForToday]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-modes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"auto\"),\n        children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n        onClick: () => {\n          setMode(\"manual\");\n          openManualSelectModal();\n        },\n        children: \"T\\u1EF1 ch\\u1ECDn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"free\"),\n        children: \"T\\u1EF1 do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: mode === \"auto\" && tasksForToday.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-task-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-container\",\n          ref: timelineRef,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-time-line\",\n              style: {\n                top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), Array.from({\n              length: 25\n            }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-block\",\n              style: {\n                top: `${hour * 60}px`\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hour-marker\",\n                children: hour < 10 ? `0${hour}:00` : `${hour}:00`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"hour-divider\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)]\n            }, hour, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 19\n            }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"m3XSoei/0nv2RC79aFgpShhjm2o=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","jsxDEV","_jsxDEV","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTaskManual","setCurrentTaskManual","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timeoutId","setTimeoutId","timelineRef","timer","setInterval","prev","handlePomodoroComplete","clearInterval","info","success","handleStartPause","handleSkip","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","current","currentTimePosition","getHours","getMinutes","scrollTo","top","behavior","handleScroll","clearTimeout","timelineElement","isCurrentTimeVisible","scrollTop","offsetHeight","id","setTimeout","addEventListener","removeEventListener","calculateTasksForToday","today","tasks","Object","values","flat","forEach","work","workStartDate","startDate","workEndDate","endDate","subWorks","task","startTime","endTime","repeatOption","customRepeat","startHour","startMinute","split","map","Number","endHour","endMinute","validDates","currentDate","push","setDate","getDate","repeatEvery","repeatUnit","repeatDays","taskStartDate","dayMapping","dayOfWeek","getDay","includes","date","toDateString","setHours","sortedTasks","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","openManualSelectModal","length","ref","style","Array","from","_","hour","renderTaskOnTimeline","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [timeoutId, setTimeoutId] = useState(null); // Theo dõi trạng thái timeout\r\n\r\n  const timelineRef = useRef(null); // Tham chiếu đến timeline-container\r\n\r\n  // Pomodoro logic\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      handlePomodoroComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    if (isFocusPhase) {\r\n      setIsFocusPhase(false);\r\n      setCycle((prev) => prev + 1);\r\n      if ((cycle + 1) % 4 === 0) {\r\n        setTimeLeft(900);\r\n        toast.info(\"Long Break! Take a 15-minute rest.\");\r\n      } else {\r\n        setTimeLeft(300);\r\n        toast.info(\"Short Break! Take a 5-minute rest.\");\r\n      }\r\n    } else {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500);\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  }, [cycle, isFocusPhase, toast]);\r\n\r\n  const handleStartPause = () => {\r\n    setIsRunning((prev) => !prev);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    setTimeLeft(0);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Update current time every minute\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 60000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Tự động cuộn đến vị trí current-time-line khi mở trang\r\n  useEffect(() => {\r\n    if (timelineRef.current) {\r\n      const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\r\n      timelineRef.current.scrollTo({\r\n        top: currentTimePosition - 50, // Cuộn đến gần vị trí current-time-line, trừ 50px cho đẹp\r\n        behavior: \"smooth\",\r\n      });\r\n    }\r\n  }, [currentTime]);\r\n\r\n  // Theo dõi trạng thái cuộn và tự động cuộn lại nếu cần\r\n  const handleScroll = useCallback(() => {\r\n    if (timeoutId) clearTimeout(timeoutId);\r\n\r\n    const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\r\n    const timelineElement = timelineRef.current;\r\n    const isCurrentTimeVisible =\r\n      currentTimePosition >= timelineElement.scrollTop &&\r\n      currentTimePosition <= timelineElement.scrollTop + timelineElement.offsetHeight;\r\n\r\n    if (!isCurrentTimeVisible) {\r\n      const id = setTimeout(() => {\r\n        timelineElement.scrollTo({\r\n          top: currentTimePosition - 50,\r\n          behavior: \"smooth\",\r\n        });\r\n      }, 10000); // 10 giây\r\n      setTimeoutId(id);\r\n    }\r\n  }, [currentTime, timeoutId]);\r\n\r\n  useEffect(() => {\r\n    const timelineElement = timelineRef.current;\r\n    if (timelineElement) {\r\n      timelineElement.addEventListener(\"scroll\", handleScroll);\r\n    }\r\n    return () => {\r\n      if (timelineElement) {\r\n        timelineElement.removeEventListener(\"scroll\", handleScroll);\r\n      }\r\n    };\r\n  }, [handleScroll]);\r\n\r\n  const calculateTasksForToday = useCallback(() => {\r\n    const today = new Date();\r\n    const tasks = [];\r\n    Object.values(works)\r\n      .flat()\r\n      .forEach((work) => {\r\n        const workStartDate = new Date(work.startDate);\r\n        const workEndDate = new Date(work.endDate);\r\n\r\n        work.subWorks.forEach((task) => {\r\n          const { startTime, endTime, repeatOption, customRepeat = {} } = task;\r\n          const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n          const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n          let validDates = [];\r\n          if (repeatOption === \"Không lặp lại\") {\r\n            validDates = [workStartDate];\r\n          } else if (repeatOption === \"Hàng ngày\") {\r\n            let currentDate = new Date(workStartDate);\r\n            while (currentDate <= workEndDate) {\r\n              validDates.push(new Date(currentDate));\r\n              currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n          } else if (repeatOption === \"Tùy chỉnh\") {\r\n            const { repeatEvery = 1, repeatUnit = \"ngày\", startDate, repeatDays = [] } = customRepeat;\r\n            const taskStartDate = startDate ? new Date(startDate) : workStartDate;\r\n            let currentDate = new Date(taskStartDate);\r\n\r\n            if (repeatUnit === \"ngày\") {\r\n              while (currentDate <= workEndDate) {\r\n                validDates.push(new Date(currentDate));\r\n                currentDate.setDate(currentDate.getDate() + repeatEvery);\r\n              }\r\n            } else if (repeatUnit === \"tuần\") {\r\n              const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n              while (currentDate <= workEndDate) {\r\n                const dayOfWeek = dayMapping[currentDate.getDay()];\r\n                if (repeatDays.includes(dayOfWeek)) {\r\n                  validDates.push(new Date(currentDate));\r\n                }\r\n                currentDate.setDate(currentDate.getDate() + 1);\r\n              }\r\n            }\r\n          }\r\n\r\n          validDates.forEach((date) => {\r\n            if (date.toDateString() === today.toDateString()) {\r\n              tasks.push({\r\n                ...task,\r\n                startTime: new Date(today.setHours(startHour, startMinute)),\r\n                endTime: new Date(today.setHours(endHour, endMinute)),\r\n              });\r\n            }\r\n          });\r\n        });\r\n      });\r\n\r\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\r\n    setTasksForToday(sortedTasks);\r\n  }, [works]);\r\n\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      calculateTasksForToday();\r\n    }\r\n  }, [mode, calculateTasksForToday]);\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n      <div className=\"focus-modes\">\r\n        <button\r\n          className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"auto\")}\r\n        >\r\n          Tự động\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n          onClick={() => {\r\n            setMode(\"manual\");\r\n            openManualSelectModal();\r\n          }}\r\n        >\r\n          Tự chọn\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"free\")}\r\n        >\r\n          Tự do\r\n        </button>\r\n      </div>\r\n      <div className=\"focus-content\">\r\n        {mode === \"auto\" && tasksForToday.length > 0 && (\r\n          <div className=\"timeline-task-container\">\r\n            <div className=\"timeline-container\" ref={timelineRef}>\r\n              <div className=\"timeline\">\r\n                <div\r\n                  className=\"current-time-line\"\r\n                  style={{\r\n                    top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`,\r\n                  }}\r\n                ></div>\r\n                {Array.from({ length: 25 }).map((_, hour) => (\r\n                  <div key={hour} className=\"hour-block\" style={{ top: `${hour * 60}px` }}>\r\n                    <div className=\"hour-marker\">{hour < 10 ? `0${hour}:00` : `${hour}:00`}</div>\r\n                    <div className=\"hour-divider\"></div>\r\n                  </div>\r\n                ))}\r\n                {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}