{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport { MdRestore } from \"react-icons/md\"; // Thêm icon Restore từ Material Icons\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks,\n  deletedWorks,\n  setDeletedWorks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\n\n  // Filter works based on view mode (ongoing/completed) and search query\n  const filteredWorks = useMemo(() => {\n    let worksToFilter = [];\n    if (viewMode === \"ongoing\") {\n      worksToFilter = Object.values(works).flat();\n    } else if (viewMode === \"completed\") {\n      worksToFilter = completedWorks;\n    } else if (viewMode === \"recycle\") {\n      worksToFilter = deletedWorks;\n    }\n    return worksToFilter.filter(work => work.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [viewMode, works, completedWorks, deletedWorks, searchQuery]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n\n  // Handle marking work as completed or ongoing\n  const handleToggleComplete = work => {\n    if (viewMode === \"ongoing\") {\n      // Mark work as completed\n      setCompletedWorks(prev => [...prev, work]);\n      removeWorkFromState(work.id);\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        if (work.subWorks && work.subWorks.length > 0) {\n          work.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = true;\n          });\n        }\n        return updatedStatus;\n      });\n    } else {\n      // Move work back to ongoing\n      setCompletedWorks(prev => prev.filter(w => w.id !== work.id));\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = work.type || \"doNow\";\n        updatedWorks[type] = [...updatedWorks[type], work];\n        return updatedWorks;\n      });\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        if (work.subWorks && work.subWorks.length > 0) {\n          work.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = false;\n          });\n        }\n        return updatedStatus;\n      });\n    }\n  };\n\n  // Remove work from works and completed works, and add to deleted works\n  const handleDeleteWork = workId => {\n    const workToDelete = [...Object.values(works).flat(), ...completedWorks].find(work => work.id === workId);\n    if (workToDelete) {\n      setDeletedWorks(prev => [...prev, workToDelete]);\n      removeWorkFromState(workId);\n    }\n  };\n\n  // Remove work from the state\n  const removeWorkFromState = workId => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(key => {\n        updatedWorks[key] = updatedWorks[key].filter(work => work.id !== workId);\n      });\n      return updatedWorks;\n    });\n    setCompletedWorks(prevCompletedWorks => prevCompletedWorks.filter(work => work.id !== workId));\n  };\n\n  // Restore work from deleted works to ongoing works\n  const handleRestoreWork = workId => {\n    const workToRestore = deletedWorks.find(work => work.id === workId);\n    if (workToRestore) {\n      setDeletedWorks(prev => prev.filter(work => work.id !== workId));\n      const type = workToRestore.type || \"doNow\";\n      setWorks(prevWorks => ({\n        ...prevWorks,\n        [type]: [...prevWorks[type], workToRestore]\n      }));\n    }\n  };\n\n  // Handle deleting a task within a work\n  const handleDeleteTask = (workId, taskIndex) => {\n    if (viewMode === \"recycle\") {\n      return; // Không cho phép xóa task trong chế độ Recycle Bin\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(type => {\n        const workIndex = updatedWorks[type].findIndex(work => work.id === workId);\n        if (workIndex !== -1) {\n          const updatedWork = {\n            ...updatedWorks[type][workIndex]\n          };\n          updatedWork.subWorks = updatedWork.subWorks.filter((_, index) => index !== taskIndex);\n          updatedWorks[type] = [...updatedWorks[type].slice(0, workIndex), updatedWork, ...updatedWorks[type].slice(workIndex + 1)];\n        }\n      });\n      return updatedWorks;\n    });\n    setCompletedWorks(prevCompletedWorks => {\n      const updatedCompleted = prevCompletedWorks.map(work => {\n        if (work.id === workId) {\n          return {\n            ...work,\n            subWorks: work.subWorks.filter((_, index) => index !== taskIndex)\n          };\n        }\n        return work;\n      });\n      return updatedCompleted;\n    });\n\n    // Also need to update the task completion status\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      delete updatedStatus[`${workId}-${taskIndex}`];\n      return updatedStatus;\n    });\n  };\n\n  // Calculate the progress of each work based on task completion status\n  const calculateProgress = work => {\n    if (!work.subWorks || work.subWorks.length === 0) {\n      return viewMode === \"completed\" || deletedWorks.some(deletedWork => deletedWork.id === work.id) ? 100 : 0;\n    }\n    const totalTasks = work.subWorks.length;\n    const completedTasks = work.subWorks.filter((_, index) => {\n      const taskKey = `${work.id}-${index}`;\n      return taskCompletionStatus[taskKey];\n    }).length;\n    return Math.round(completedTasks / totalTasks * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"recycle\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"recycle\"),\n        children: \"Recycle Bin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expand-collapse-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-btn\",\n        onClick: () => setExpandedWorkIds(filteredWorks.map(work => work.id)),\n        children: \"Expand All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collapse-btn\",\n        onClick: () => setExpandedWorkIds([]),\n        children: \"Collapse All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : viewMode === \"completed\" ? \"No completed works\" : \"No works in Recycle Bin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const progress = calculateProgress(work);\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\" || viewMode === \"recycle\",\n                  onChange: () => handleToggleComplete(work),\n                  disabled: viewMode === \"recycle\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 23\n                }, this), work.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [(viewMode === \"ongoing\" || viewMode === \"completed\") && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  onClick: () => handleDeleteWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 25\n                }, this), viewMode === \"recycle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"restore-btn\",\n                  onClick: () => handleRestoreWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(MdRestore, {\n                    size: 20\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container progress-container-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percentage\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this)];\n\n          // Display tasks in expanded view\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              const taskKey = `${work.id}-${index}`;\n              const isTaskCompleted = taskCompletionStatus[taskKey];\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!isTaskCompleted,\n                    onChange: () => toggleTaskCompletion(work.id, index),\n                    disabled: viewMode === \"recycle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: isTaskCompleted ? \"line-through\" : \"none\"\n                    },\n                    children: [task.name, \" - Description: \", task.description, \", Time:\", \" \", task.startTime, \" - \", task.endTime, \", Repeat:\", \" \", task.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${task.customRepeat.repeatEvery} ${task.customRepeat.repeatUnit}${task.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(task.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\", \")}`}` : task.repeatOption]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this), viewMode !== \"recycle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"task-delete-icon\",\n                    onClick: () => handleDeleteTask(work.id, index),\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                      size: 14,\n                      className: \"task-delete-icon-style\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 23\n                }, this)\n              }, taskKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"1j+Cdkemkm7MAQ1ZJJVRGNDdKCM=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","BiSearchAlt2","FaChevronDown","FaChevronUp","MdRestore","jsxDEV","_jsxDEV","Project","works","setWorks","completedWorks","setCompletedWorks","deletedWorks","setDeletedWorks","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","taskCompletionStatus","setTaskCompletionStatus","filteredWorks","worksToFilter","Object","values","flat","filter","work","name","toLowerCase","includes","toggleExpand","workId","prevExpandedWorkIds","id","handleToggleComplete","prev","removeWorkFromState","prevStatus","updatedStatus","subWorks","length","forEach","_","index","w","prevWorks","updatedWorks","type","handleDeleteWork","workToDelete","find","keys","key","prevCompletedWorks","handleRestoreWork","workToRestore","handleDeleteTask","taskIndex","workIndex","findIndex","updatedWork","slice","updatedCompleted","map","calculateProgress","some","deletedWork","totalTasks","completedTasks","taskKey","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","flatMap","progress","workElements","htmlFor","checked","disabled","color","style","width","task","isTaskCompleted","push","toggleTaskCompletion","textDecoration","description","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","Date","startDate","toLocaleDateString","repeatDays","join","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport { MdRestore } from \"react-icons/md\"; // Thêm icon Restore từ Material Icons\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks, deletedWorks, setDeletedWorks }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\r\n\r\n  // Filter works based on view mode (ongoing/completed) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    let worksToFilter = [];\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      worksToFilter = Object.values(works).flat();\r\n    } else if (viewMode === \"completed\") {\r\n      worksToFilter = completedWorks;\r\n    } else if (viewMode === \"recycle\") {\r\n      worksToFilter = deletedWorks;\r\n    }\r\n\r\n    return worksToFilter.filter((work) =>\r\n      work.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n    );\r\n  }, [viewMode, works, completedWorks, deletedWorks, searchQuery]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  // Handle marking work as completed or ongoing\r\n  const handleToggleComplete = (work) => {\r\n    if (viewMode === \"ongoing\") {\r\n      // Mark work as completed\r\n      setCompletedWorks((prev) => [...prev, work]);\r\n      removeWorkFromState(work.id);\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          work.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = true;\r\n          });\r\n        }\r\n        return updatedStatus;\r\n      });\r\n    } else {\r\n      // Move work back to ongoing\r\n      setCompletedWorks((prev) => prev.filter((w) => w.id !== work.id));\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = work.type || \"doNow\";\r\n        updatedWorks[type] = [...updatedWorks[type], work];\r\n        return updatedWorks;\r\n      });\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          work.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = false;\r\n          });\r\n        }\r\n        return updatedStatus;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Remove work from works and completed works, and add to deleted works\r\n  const handleDeleteWork = (workId) => {\r\n    const workToDelete = [...Object.values(works).flat(), ...completedWorks].find((work) => work.id === workId);\r\n    if (workToDelete) {\r\n      setDeletedWorks((prev) => [...prev, workToDelete]);\r\n      removeWorkFromState(workId);\r\n    }\r\n  };\r\n\r\n  // Remove work from the state\r\n  const removeWorkFromState = (workId) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((key) => {\r\n        updatedWorks[key] = updatedWorks[key].filter((work) => work.id !== workId);\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    setCompletedWorks((prevCompletedWorks) =>\r\n      prevCompletedWorks.filter((work) => work.id !== workId)\r\n    );\r\n  };\r\n\r\n  // Restore work from deleted works to ongoing works\r\n  const handleRestoreWork = (workId) => {\r\n    const workToRestore = deletedWorks.find((work) => work.id === workId);\r\n    if (workToRestore) {\r\n      setDeletedWorks((prev) => prev.filter((work) => work.id !== workId));\r\n      const type = workToRestore.type || \"doNow\";\r\n      setWorks((prevWorks) => ({\r\n        ...prevWorks,\r\n        [type]: [...prevWorks[type], workToRestore],\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle deleting a task within a work\r\n  const handleDeleteTask = (workId, taskIndex) => {\r\n    if (viewMode === \"recycle\") {\r\n      return; // Không cho phép xóa task trong chế độ Recycle Bin\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((type) => {\r\n        const workIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n        if (workIndex !== -1) {\r\n          const updatedWork = { ...updatedWorks[type][workIndex] };\r\n          updatedWork.subWorks = updatedWork.subWorks.filter(\r\n            (_, index) => index !== taskIndex\r\n          );\r\n          updatedWorks[type] = [\r\n            ...updatedWorks[type].slice(0, workIndex),\r\n            updatedWork,\r\n            ...updatedWorks[type].slice(workIndex + 1),\r\n          ];\r\n        }\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    setCompletedWorks((prevCompletedWorks) => {\r\n      const updatedCompleted = prevCompletedWorks.map((work) => {\r\n        if (work.id === workId) {\r\n          return {\r\n            ...work,\r\n            subWorks: work.subWorks.filter((_, index) => index !== taskIndex),\r\n          };\r\n        }\r\n        return work;\r\n      });\r\n      return updatedCompleted;\r\n    });\r\n\r\n    // Also need to update the task completion status\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      delete updatedStatus[`${workId}-${taskIndex}`];\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Calculate the progress of each work based on task completion status\r\n  const calculateProgress = (work) => {\r\n    if (!work.subWorks || work.subWorks.length === 0) {\r\n      return viewMode === \"completed\" || deletedWorks.some((deletedWork) => deletedWork.id === work.id) ? 100 : 0;\r\n    }\r\n\r\n    const totalTasks = work.subWorks.length;\r\n    const completedTasks = work.subWorks.filter((_, index) => {\r\n      const taskKey = `${work.id}-${index}`;\r\n      return taskCompletionStatus[taskKey];\r\n    }).length;\r\n\r\n    return Math.round((completedTasks / totalTasks) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"recycle\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"recycle\")}\r\n        >\r\n          Recycle Bin\r\n        </button>\r\n      </div>\r\n      <div className=\"expand-collapse-buttons\">\r\n        <button className=\"expand-btn\" onClick={() => setExpandedWorkIds(filteredWorks.map((work) => work.id))}>\r\n          Expand All\r\n        </button>\r\n        <button className=\"collapse-btn\" onClick={() => setExpandedWorkIds([])}>\r\n          Collapse All\r\n        </button>\r\n      </div>\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : viewMode === \"completed\"\r\n              ? \"No completed works\"\r\n              : \"No works in Recycle Bin\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const progress = calculateProgress(work);\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={viewMode === \"completed\" || viewMode === \"recycle\"}\r\n                        onChange={() => handleToggleComplete(work)}\r\n                        disabled={viewMode === \"recycle\"}\r\n                      />\r\n                      {work.name}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {(viewMode === \"ongoing\" || viewMode === \"completed\") && (\r\n                        <button id=\"del-bt\" onClick={() => handleDeleteWork(work.id)}>\r\n                          <AiFillDelete size={20} color=\"#FF6969\" />\r\n                        </button>\r\n                      )}\r\n                      {viewMode === \"recycle\" && (\r\n                        <button className=\"restore-btn\" onClick={() => handleRestoreWork(work.id)}>\r\n                          <MdRestore size={20} />\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        className=\"expand-bt\"\r\n                        onClick={() => toggleExpand(work.id)}\r\n                      >\r\n                        {expandedWorkIds.includes(work.id) ? (\r\n                          <FaChevronUp />\r\n                        ) : (\r\n                          <FaChevronDown />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {/* Progress Bar */}\r\n                  <div className=\"progress-container progress-container-full\">\r\n                    <div className=\"progress-bar\">\r\n                      <div\r\n                        className=\"progress\"\r\n                        style={{\r\n                          width: `${progress}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <span className=\"progress-percentage\">{progress}%</span>\r\n                  </div>\r\n                </li>,\r\n              ];\r\n\r\n              // Display tasks in expanded view\r\n              if (\r\n                expandedWorkIds.includes(work.id) &&\r\n                work.subWorks &&\r\n                work.subWorks.length > 0\r\n              ) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  const taskKey = `${work.id}-${index}`;\r\n                  const isTaskCompleted = taskCompletionStatus[taskKey];\r\n\r\n                  workElements.push(\r\n                    <li key={taskKey} className=\"task-item\">\r\n                      <div className=\"task-details\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!isTaskCompleted}\r\n                          onChange={() => toggleTaskCompletion(work.id, index)}\r\n                          disabled={viewMode === \"recycle\"}\r\n                        />\r\n                        <span\r\n                          style={{\r\n                            textDecoration: isTaskCompleted\r\n                              ? \"line-through\"\r\n                              : \"none\",\r\n                          }}\r\n                        >\r\n                          {task.name} - Description: {task.description}, Time:{\" \"}\r\n                          {task.startTime} - {task.endTime}, Repeat:{\" \"}\r\n                          {task.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${task.customRepeat.repeatEvery} ${\r\n                                task.customRepeat.repeatUnit\r\n                              }${\r\n                                task.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(\r\n                                      task.customRepeat.startDate\r\n                                    ).toLocaleDateString(\"vi-VN\")}`\r\n                                  : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\r\n                                      \", \"\r\n                                    )}`\r\n                              }`\r\n                            : task.repeatOption}\r\n                        </span>\r\n                        {viewMode !== \"recycle\" && (\r\n                          <button\r\n                            className=\"task-delete-icon\"\r\n                            onClick={() => handleDeleteTask(work.id, index)}\r\n                          >\r\n                            <AiFillDelete size={14} className=\"task-delete-icon-style\" />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}