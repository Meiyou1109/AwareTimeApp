{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isFocusing, setIsFocusing] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(1500); // 25 minutes in seconds\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0); // Tracks Pomodoro cycle\n  const [isFocusPhase, setIsFocusPhase] = useState(true); // Focus or Break phase\n  const [prevTask, setPrevTask] = useState(null); // Save previous task for cancel\n  const [prevWork, setPrevWork] = useState(null); // Save previous work for cancel\n\n  useEffect(() => {\n    if (mode === \"auto\") {\n      handleAutoSelectTask();\n    }\n  }, [mode, works]);\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n  const handlePomodoroComplete = () => {\n    setIsRunning(false);\n    if (isFocusPhase) {\n      setIsFocusPhase(false);\n      setCycle(prev => prev + 1);\n      if ((cycle + 1) % 4 === 0) {\n        setTimeLeft(900); // Long break\n        toast.info(\"Long Break! Take a 15-minute rest.\");\n      } else {\n        setTimeLeft(300); // Short break\n        toast.info(\"Short Break! Take a 5-minute rest.\");\n      }\n    } else {\n      setIsFocusPhase(true);\n      setTimeLeft(1500); // Focus session\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  };\n  const handleStartPause = () => {\n    setIsRunning(prev => !prev);\n  };\n  const handleSkip = () => {\n    setTimeLeft(0);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n  const handleAutoSelectTask = () => {\n    if (!works) {\n      setCurrentTask(null);\n      return;\n    }\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n    for (const type in works) {\n      for (const work of works[type] || []) {\n        if (work.subWorks && work.subWorks.length > 0) {\n          for (const task of work.subWorks) {\n            const [startHour, startMinute] = task.startTime.split(\":\").map(Number);\n            const [endHour, endMinute] = task.endTime.split(\":\").map(Number);\n            const taskStartTime = startHour * 60 + startMinute;\n            const taskEndTime = endHour * 60 + endMinute;\n            if (currentTime >= taskStartTime && currentTime <= taskEndTime) {\n              setCurrentTask({\n                ...task,\n                workName: work.name,\n                workStartDate: work.startDate,\n                workEndDate: work.endDate\n              });\n              return;\n            }\n          }\n        }\n      }\n    }\n    setCurrentTask(null);\n  };\n  const openManualSelectModal = () => {\n    setPrevTask(currentTask); // Save current task in case of cancel\n    setPrevWork(selectedWork); // Save current work in case of cancel\n    setIsModalOpen(true);\n  };\n  const handleManualSelectWork = work => {\n    setSelectedWork(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === work.id ? null : work); // Toggle selection\n    setSelectedTask(null); // Reset task if work changes\n  };\n  const handleManualSelectTask = task => {\n    setSelectedTask(prev => (prev === null || prev === void 0 ? void 0 : prev.name) === task.name ? null : task); // Toggle selection\n  };\n  const handleManualSelectionDone = () => {\n    setCurrentTask(selectedTask ? {\n      ...selectedTask,\n      workName: selectedWork.name,\n      workStartDate: selectedWork.startDate,\n      workEndDate: selectedWork.endDate\n    } : null);\n    setIsModalOpen(false);\n  };\n  const closeModal = () => {\n    setCurrentTask(prevTask); // Revert to previous task\n    setSelectedWork(prevWork); // Revert to previous work\n    setSelectedTask(null); // Reset temporary selections\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-modes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"auto\"),\n        children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n        onClick: () => {\n          setMode(\"manual\");\n          openManualSelectModal();\n        },\n        children: \"T\\u1EF1 ch\\u1ECDn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"free\"),\n        children: \"T\\u1EF1 do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [(mode === \"auto\" || mode === \"manual\") && currentTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Task hi\\u1EC7n t\\u1EA1i\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Work:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 16\n          }, this), \" \", currentTask.workName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Task:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 16\n          }, this), \" \", currentTask.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Th\\u1EDDi gian:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 16\n          }, this), \" \", currentTask.startTime, \" - \", currentTask.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Ng\\xE0y Work:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 16\n          }, this), \" \", currentTask.workStartDate, \" - \", currentTask.workEndDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pomodoro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatTime(timeLeft)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartPause,\n            children: isRunning ? \"Tạm dừng\" : \"Bắt đầu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSkip,\n            children: \"B\\u1ECF qua\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(selectedWork === null || selectedWork === void 0 ? void 0 : selectedWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ng\\xE0y: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), selectedWork && selectedWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [selectedWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\u1EDDi gian: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-buttons-right\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"focus-button\",\n                onClick: handleManualSelectionDone,\n                children: \"Done\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u1ECDn m\\u1ED9t Work \\u0111\\u1EC3 xem Task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"whZ92C1CuFIaXeG4MMRUaOcwYwU=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTask","setCurrentTask","isModalOpen","setIsModalOpen","isFocusing","setIsFocusing","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","prevTask","setPrevTask","prevWork","setPrevWork","handleAutoSelectTask","timer","setInterval","prev","handlePomodoroComplete","clearInterval","info","success","handleStartPause","handleSkip","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","now","Date","currentTime","getHours","getMinutes","type","work","subWorks","length","task","startHour","startMinute","startTime","split","map","Number","endHour","endMinute","endTime","taskStartTime","taskEndTime","workName","name","workStartDate","startDate","workEndDate","endDate","openManualSelectModal","handleManualSelectWork","id","handleManualSelectTask","handleManualSelectionDone","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","values","flat","index","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isFocusing, setIsFocusing] = useState(false);\r\n  const [timeLeft, setTimeLeft] = useState(1500); // 25 minutes in seconds\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0); // Tracks Pomodoro cycle\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true); // Focus or Break phase\r\n  const [prevTask, setPrevTask] = useState(null); // Save previous task for cancel\r\n  const [prevWork, setPrevWork] = useState(null); // Save previous work for cancel\r\n\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      handleAutoSelectTask();\r\n    }\r\n  }, [mode, works]);\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      handlePomodoroComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const handlePomodoroComplete = () => {\r\n    setIsRunning(false);\r\n\r\n    if (isFocusPhase) {\r\n      setIsFocusPhase(false);\r\n      setCycle((prev) => prev + 1);\r\n      if ((cycle + 1) % 4 === 0) {\r\n        setTimeLeft(900); // Long break\r\n        toast.info(\"Long Break! Take a 15-minute rest.\");\r\n      } else {\r\n        setTimeLeft(300); // Short break\r\n        toast.info(\"Short Break! Take a 5-minute rest.\");\r\n      }\r\n    } else {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500); // Focus session\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  };\r\n\r\n  const handleStartPause = () => {\r\n    setIsRunning((prev) => !prev);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    setTimeLeft(0);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  const handleAutoSelectTask = () => {\r\n    if (!works) {\r\n      setCurrentTask(null);\r\n      return;\r\n    }\r\n\r\n    const now = new Date();\r\n    const currentTime = now.getHours() * 60 + now.getMinutes();\r\n\r\n    for (const type in works) {\r\n      for (const work of works[type] || []) {\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          for (const task of work.subWorks) {\r\n            const [startHour, startMinute] = task.startTime.split(\":\").map(Number);\r\n            const [endHour, endMinute] = task.endTime.split(\":\").map(Number);\r\n            const taskStartTime = startHour * 60 + startMinute;\r\n            const taskEndTime = endHour * 60 + endMinute;\r\n\r\n            if (currentTime >= taskStartTime && currentTime <= taskEndTime) {\r\n              setCurrentTask({\r\n                ...task,\r\n                workName: work.name,\r\n                workStartDate: work.startDate,\r\n                workEndDate: work.endDate,\r\n              });\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setCurrentTask(null);\r\n  };\r\n\r\n  const openManualSelectModal = () => {\r\n    setPrevTask(currentTask); // Save current task in case of cancel\r\n    setPrevWork(selectedWork); // Save current work in case of cancel\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleManualSelectWork = (work) => {\r\n    setSelectedWork((prev) => (prev?.id === work.id ? null : work)); // Toggle selection\r\n    setSelectedTask(null); // Reset task if work changes\r\n  };\r\n\r\n  const handleManualSelectTask = (task) => {\r\n    setSelectedTask((prev) => (prev?.name === task.name ? null : task)); // Toggle selection\r\n  };\r\n\r\n  const handleManualSelectionDone = () => {\r\n    setCurrentTask(\r\n      selectedTask\r\n        ? {\r\n            ...selectedTask,\r\n            workName: selectedWork.name,\r\n            workStartDate: selectedWork.startDate,\r\n            workEndDate: selectedWork.endDate,\r\n          }\r\n        : null\r\n    );\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setCurrentTask(prevTask); // Revert to previous task\r\n    setSelectedWork(prevWork); // Revert to previous work\r\n    setSelectedTask(null); // Reset temporary selections\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"focus-modes\">\r\n        <button\r\n          className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"auto\")}\r\n        >\r\n          Tự động\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n          onClick={() => {\r\n            setMode(\"manual\");\r\n            openManualSelectModal();\r\n          }}\r\n        >\r\n          Tự chọn\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"free\")}\r\n        >\r\n          Tự do\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"focus-content\">\r\n        {(mode === \"auto\" || mode === \"manual\") && currentTask ? (\r\n          <div className=\"task-details\">\r\n            <h2>Task hiện tại</h2>\r\n            <p><strong>Work:</strong> {currentTask.workName}</p>\r\n            <p><strong>Task:</strong> {currentTask.name}</p>\r\n            <p><strong>Thời gian:</strong> {currentTask.startTime} - {currentTask.endTime}</p>\r\n            <p><strong>Ngày Work:</strong> {currentTask.workStartDate} - {currentTask.workEndDate}</p>\r\n          </div>\r\n        ) : (\r\n          <p>No available</p>\r\n        )}\r\n\r\n        <div className=\"pomodoro-timer\">\r\n          <h2>Pomodoro</h2>\r\n          <p>{formatTime(timeLeft)}</p>\r\n          <div className=\"timer-controls\">\r\n            <button onClick={handleStartPause}>\r\n              {isRunning ? \"Tạm dừng\" : \"Bắt đầu\"}\r\n            </button>\r\n            <button onClick={handleSkip}>Bỏ qua</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Danh sách Work</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${selectedWork?.id === work.id ? \"active\" : \"\"}`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>Ngày: {work.startDate} - {work.endDate}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <button className=\"modal-close\" onClick={closeModal}>\r\n                &times;\r\n              </button>\r\n              <h2>Danh sách Task</h2>\r\n              {selectedWork && selectedWork.subWorks ? (\r\n                <>\r\n                  {selectedWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${selectedTask?.name === task.name ? \"active\" : \"\"}`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>Thời gian: {task.startTime} - {task.endTime}</p>\r\n                    </div>\r\n                  ))}\r\n                  <div className=\"modal-buttons-right\">\r\n                    <button className=\"focus-button\" onClick={handleManualSelectionDone}>\r\n                      Done\r\n                    </button>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <p>Chọn một Work để xem Task.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}