{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\TimeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/timetable.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStartOfWeek = date => {\n  const startOfWeek = new Date(date);\n  const day = startOfWeek.getDay() || 7; // Sunday (0) becomes 7\n  if (day !== 1) startOfWeek.setDate(startOfWeek.getDate() - day + 1);\n  startOfWeek.setHours(0, 0, 0, 0);\n  return startOfWeek;\n};\n\n// Group tasks by day of the week\nconst getTasksByDay = (tasks, weekDays) => {\n  return weekDays.map(day => tasks.filter(task => task.startTime >= day && task.startTime < new Date(day.getTime() + 24 * 60 * 60 * 1000)));\n};\nconst renderTasks = tasks => {\n  if (!tasks || tasks.length === 0) return null;\n  tasks.sort((a, b) => a.startTime - b.startTime);\n  return tasks.map((task, index) => {\n    const startMinutes = task.startTime.getHours() * 60 + task.startTime.getMinutes();\n    const endMinutes = task.endTime.getHours() * 60 + task.endTime.getMinutes();\n    const top = startMinutes;\n    const height = endMinutes - startMinutes;\n    const overlappingTasks = tasks.filter(otherTask => task.startTime < otherTask.endTime && task.endTime > otherTask.startTime);\n    const taskWidth = `calc(${100 / overlappingTasks.length}% - 5px)`;\n    const leftOffset = `${100 / overlappingTasks.length * index}%`;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-block\",\n      style: {\n        top: `${top}px`,\n        height: `${height}px`,\n        width: taskWidth,\n        left: leftOffset\n      },\n      title: `${task.name}\\nStart: ${task.startTime.toLocaleTimeString()}\\nEnd: ${task.endTime.toLocaleTimeString()}`,\n      children: task.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  });\n};\nconst TimeTable = ({\n  tasks = []\n}) => {\n  _s();\n  if (!Array.isArray(tasks)) {\n    console.error(\"Tasks should be an array\");\n    tasks = [];\n  }\n  const days = useMemo(() => [\"Thứ 2\", \"Thứ 3\", \"Thứ 4\", \"Thứ 5\", \"Thứ 6\", \"Thứ 7\", \"Chủ Nhật\"], []);\n  const hours = useMemo(() => Array.from({\n    length: 24\n  }, (_, i) => `${i}:00 - ${i + 1}:00`), []);\n  const startOfWeek = useMemo(() => getStartOfWeek(new Date()), []);\n  const weekDays = useMemo(() => Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(startOfWeek);\n    day.setDate(day.getDate() + i);\n    return day;\n  }), [startOfWeek]);\n  const tasksByDay = useMemo(() => getTasksByDay(tasks, weekDays), [tasks, weekDays]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weekly TimeTable\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timetable-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell time-column\",\n          children: \"Th\\u1EDDi gian\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), days.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-cell\",\n          children: [day, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"date-text\",\n            children: [weekDays[index].getDate(), \"/\", weekDays[index].getMonth() + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-column\",\n          children: hours.map((hour, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-slot\",\n            children: hour\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), days.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `column column-${index}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slot-items\",\n            children: renderTasks(tasksByDay[index])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeTable, \"KiYjm87WUwwC6GTXP2XHTKK9mfU=\");\n_c = TimeTable;\nexport default TimeTable;\nvar _c;\n$RefreshReg$(_c, \"TimeTable\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","getStartOfWeek","date","startOfWeek","Date","day","getDay","setDate","getDate","setHours","getTasksByDay","tasks","weekDays","map","filter","task","startTime","getTime","renderTasks","length","sort","a","b","index","startMinutes","getHours","getMinutes","endMinutes","endTime","top","height","overlappingTasks","otherTask","taskWidth","leftOffset","className","style","width","left","title","name","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","TimeTable","_s","Array","isArray","console","error","days","hours","from","_","i","tasksByDay","getMonth","hour","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/TimeTable.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/timetable.css\";\r\n\r\nconst getStartOfWeek = (date) => {\r\n  const startOfWeek = new Date(date);\r\n  const day = startOfWeek.getDay() || 7; // Sunday (0) becomes 7\r\n  if (day !== 1) startOfWeek.setDate(startOfWeek.getDate() - day + 1);\r\n  startOfWeek.setHours(0, 0, 0, 0);\r\n  return startOfWeek;\r\n};\r\n\r\n// Group tasks by day of the week\r\nconst getTasksByDay = (tasks, weekDays) => {\r\n  return weekDays.map((day) =>\r\n    tasks.filter(\r\n      (task) =>\r\n        task.startTime >= day &&\r\n        task.startTime < new Date(day.getTime() + 24 * 60 * 60 * 1000)\r\n    )\r\n  );\r\n};\r\n\r\nconst renderTasks = (tasks) => {\r\n  if (!tasks || tasks.length === 0) return null;\r\n\r\n  tasks.sort((a, b) => a.startTime - b.startTime);\r\n\r\n  return tasks.map((task, index) => {\r\n    const startMinutes =\r\n      task.startTime.getHours() * 60 + task.startTime.getMinutes();\r\n    const endMinutes =\r\n      task.endTime.getHours() * 60 + task.endTime.getMinutes();\r\n    const top = startMinutes;\r\n    const height = endMinutes - startMinutes;\r\n\r\n    const overlappingTasks = tasks.filter(\r\n      (otherTask) =>\r\n        task.startTime < otherTask.endTime &&\r\n        task.endTime > otherTask.startTime\r\n    );\r\n    const taskWidth = `calc(${100 / overlappingTasks.length}% - 5px)`;\r\n\r\n    const leftOffset = `${(100 / overlappingTasks.length) * index}%`;\r\n\r\n    return (\r\n      <div\r\n        key={index}\r\n        className=\"task-block\"\r\n        style={{\r\n          top: `${top}px`,\r\n          height: `${height}px`,\r\n          width: taskWidth,\r\n          left: leftOffset,\r\n        }}\r\n        title={`${task.name}\\nStart: ${task.startTime.toLocaleTimeString()}\\nEnd: ${task.endTime.toLocaleTimeString()}`}\r\n      >\r\n        {task.name}\r\n      </div>\r\n    );\r\n  });\r\n};\r\n\r\nconst TimeTable = ({ tasks = [] }) => {\r\n  if (!Array.isArray(tasks)) {\r\n    console.error(\"Tasks should be an array\");\r\n    tasks = [];\r\n  }\r\n\r\n  const days = useMemo(\r\n    () => [\"Thứ 2\", \"Thứ 3\", \"Thứ 4\", \"Thứ 5\", \"Thứ 6\", \"Thứ 7\", \"Chủ Nhật\"],\r\n    []\r\n  );\r\n  const hours = useMemo(\r\n    () =>\r\n      Array.from({ length: 24 }, (_, i) => `${i}:00 - ${i + 1}:00`),\r\n    []\r\n  );\r\n\r\n  const startOfWeek = useMemo(() => getStartOfWeek(new Date()), []);\r\n  const weekDays = useMemo(\r\n    () =>\r\n      Array.from({ length: 7 }, (_, i) => {\r\n        const day = new Date(startOfWeek);\r\n        day.setDate(day.getDate() + i);\r\n        return day;\r\n      }),\r\n    [startOfWeek]\r\n  );\r\n\r\n  const tasksByDay = useMemo(() => getTasksByDay(tasks, weekDays), [\r\n    tasks,\r\n    weekDays,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Weekly TimeTable</h1>\r\n      </header>\r\n\r\n      <div className=\"timetable-container\">\r\n        <div className=\"header-row\">\r\n          <div className=\"header-cell time-column\">Thời gian</div>\r\n          {days.map((day, index) => (\r\n            <div key={index} className=\"header-cell\">\r\n              {day}\r\n              <br />\r\n              <span className=\"date-text\">\r\n                {weekDays[index].getDate()}/{weekDays[index].getMonth() + 1}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"body-container\">\r\n          <div className=\"time-column\">\r\n            {hours.map((hour, index) => (\r\n              <div key={index} className=\"time-slot\">\r\n                {hour}\r\n              </div>\r\n            ))}\r\n          </div>\r\n          {days.map((_, index) => (\r\n            <div key={index} className={`column column-${index}`}>\r\n              <div className=\"slot-items\">\r\n                {renderTasks(tasksByDay[index])}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}