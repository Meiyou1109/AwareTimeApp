{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\n  const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\n  const [noteContent, setNoteContent] = useState(\"\");\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\"); // Lưu chế độ hiện tại\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0); // Thời gian đếm ngược\n  const [isTaskSelected, setIsTaskSelected] = useState(false); // Trạng thái task được chọn\n\n  // Pomodoro logic\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n  const toggleFreeMode = () => {\n    if (isFreeMode) {\n      // Chuyển về chế độ Pomodoro\n      setIsFreeMode(false);\n      setFreeModeTime(0); // Reset thời gian tự do\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\n    } else {\n      // Chuyển sang chế độ tự do\n      setIsFreeMode(true);\n      setFreeModeTime(0); // Reset bộ đếm tự do về 0\n      setIsRunning(false); // Dừng đếm tự do\n    }\n  };\n\n  // Free count time\n  useEffect(() => {\n    let freeModeTimer;\n    if (isFreeMode && isRunning) {\n      freeModeTimer = setInterval(() => {\n        setFreeModeTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(freeModeTimer);\n  }, [isFreeMode, isRunning]);\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    if (isFocusPhase) {\n      setIsFocusPhase(false);\n      setCycle(prev => prev + 1);\n      if ((cycle + 1) % 4 === 0) {\n        setTimeLeft(900);\n        toast.info(\"Long Break! Take a 15-minute rest.\");\n      } else {\n        setTimeLeft(300);\n        toast.info(\"Short Break! Take a 5-minute rest.\");\n      }\n    } else {\n      setIsFocusPhase(true);\n      setTimeLeft(1500);\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  }, [cycle, isFocusPhase, toast]);\n  const handleStartPause = () => {\n    if (!isRunning) {\n      // Không thay đổi currentMode ở đây nữa\n      setIsRunning(true);\n    } else {\n      setIsRunning(false);\n    }\n  };\n  const handleSkip = () => {\n    if (currentMode === \"pomodoro\") {\n      setCycle(prevCycle => {\n        const newCycle = prevCycle + 1;\n        if (newCycle % 7 === 0) {\n          setCurrentMode(\"long-break\");\n          setTimeLeft(900); // Long Break - 15 phút\n        } else {\n          setCurrentMode(\"short-break\");\n          setTimeLeft(300); // Short Break - 5 phút\n        }\n        return newCycle;\n      });\n    } else if (currentMode === \"short-break\") {\n      setCurrentMode(\"pomodoro\");\n      setTimeLeft(1500); // Pomodoro - 25 phút\n    } else if (currentMode === \"long-break\") {\n      setCycle(0); // Reset cycle sau long break\n      setCurrentMode(\"pomodoro\");\n      setTimeLeft(1500); // Quay về Pomodoro\n    }\n  };\n  const handleSelectTaskBlock = taskName => {\n    const selectedTask = tasksForToday.find(task => task.name === taskName);\n    setSelectedTaskName(prev => prev === taskName ? null : taskName); // Chọn hoặc bỏ chọn\n    if (selectedTask) {\n      const taskTimeSlot = calculateTimeSlot(selectedTask.startTime, selectedTask.endTime);\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot)); // Chuyển timeslot sang giây\n      setIsTaskSelected(true);\n    } else {\n      setCountdownTimeTask(0);\n      setIsTaskSelected(false);\n    }\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 6000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    if (currentMode === \"short-break\" || currentMode === \"long-break\") {\n      setIsRunning(false); // Dừng đếm ngược\n    }\n  }, [currentMode]);\n\n  // Tự động cuộn đến current-time-line khi mở trang\n  useEffect(() => {\n    if (timelineRef.current) {\n      const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\n      timelineRef.current.scrollTo({\n        top: currentTimePosition - 50,\n        // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\n        behavior: \"smooth\"\n      });\n    }\n  }, [currentTime]);\n\n  // Calculate tasks for today\n  const calculateTasksForToday = useCallback(() => {\n    const today = new Date();\n    const tasks = [];\n    Object.values(works).flat().forEach(work => {\n      const workStartDate = new Date(work.startDate);\n      const workEndDate = new Date(work.endDate);\n      work.subWorks.forEach(task => {\n        const {\n          startTime,\n          endTime,\n          repeatOption,\n          customRepeat = {}\n        } = task;\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\n        let validDates = [];\n        if (repeatOption === \"Không lặp lại\") {\n          validDates = [workStartDate];\n        } else if (repeatOption === \"Hàng ngày\") {\n          let currentDate = new Date(workStartDate);\n          while (currentDate <= workEndDate) {\n            validDates.push(new Date(currentDate));\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n        } else if (repeatOption === \"Tùy chỉnh\") {\n          const {\n            repeatEvery = 1,\n            repeatUnit = \"ngày\",\n            startDate,\n            repeatDays = []\n          } = customRepeat;\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\n          let currentDate = new Date(taskStartDate);\n          if (repeatUnit === \"ngày\") {\n            while (currentDate <= workEndDate) {\n              validDates.push(new Date(currentDate));\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\n            }\n          } else if (repeatUnit === \"tuần\") {\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\n            while (currentDate <= workEndDate) {\n              const dayOfWeek = dayMapping[currentDate.getDay()];\n              if (repeatDays.includes(dayOfWeek)) {\n                validDates.push(new Date(currentDate));\n              }\n              currentDate.setDate(currentDate.getDate() + 1);\n            }\n          }\n        }\n        validDates.forEach(date => {\n          if (date.toDateString() === today.toDateString()) {\n            tasks.push({\n              ...task,\n              workName: work.name,\n              startTime: new Date(today.setHours(startHour, startMinute)),\n              endTime: new Date(today.setHours(endHour, endMinute))\n            });\n          }\n        });\n      });\n    });\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\n    setTasksForToday(sortedTasks);\n  }, [works]);\n  useEffect(() => {\n    if (mode === \"auto\") {\n      calculateTasksForToday();\n    }\n  }, [mode, calculateTasksForToday]);\n  useEffect(() => {\n    let countdownTimer;\n    if (isTaskSelected && isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\n      countdownTimer = setInterval(() => {\n        setCountdownTimeTask(prev => Math.max(prev - 1, 0));\n      }, 1000);\n    }\n    return () => clearInterval(countdownTimer);\n  }, [isRunning, isTaskSelected, currentMode, isFreeMode]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const now = new Date();\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\n        calculateTasksForToday(); // Làm mới danh sách task\n      }\n    }, 60000); // Kiểm tra mỗi phút\n    return () => clearInterval(timer);\n  }, [calculateTasksForToday]);\n  const renderTaskOnTimeline = task => {\n    const taskStart = task.startTime;\n    const taskEnd = task.endTime;\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\n\n    // Kiểm tra trạng thái của task\n    const isSelected = selectedTaskName === task.name;\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-block ${isSelected ? \"selected\" : \"\"} ${isDimmed ? \"dimmed\" : \"\"}`,\n      style: {\n        top: `${startMinutes}px`,\n        height: `${endMinutes - startMinutes}px`\n      },\n      onClick: () => handleSelectTaskBlock(task.name),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-name\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"select-task-button\",\n        children: isSelected ? \"Deselect\" : \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, task.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this);\n  };\n  const calculateTimeSlot = (startTime, endTime) => {\n    const diff = new Date(endTime - startTime);\n    const hours = diff.getUTCHours();\n    const minutes = diff.getUTCMinutes();\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\n  };\n  const getPomodoroBackground = () => {\n    if (isFreeMode) return \"#d4b3e9\"; // Màu tím pastel cho chế độ tự do\n    switch (currentMode) {\n      case \"pomodoro\":\n        return \"#56daeb\";\n      // Xanh ngọc bích\n      case \"short-break\":\n        return \"#a8d5ba\";\n      // Xanh lá pastel\n      case \"long-break\":\n        return \"#f6e58d\";\n      // Vàng chanh\n      default:\n        return \"#f9f9f9\";\n      // Mặc định\n    }\n  };\n  const taskTimeSlotToSeconds = timeSlot => {\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\n    return hours * 3600 + minutes * 60;\n  };\n  const handleModeChange = mode => {\n    if (mode === \"pomodoro\") {\n      setIsFocusPhase(true);\n      setTimeLeft(1500); // Reset về 25 phút\n      setIsRunning(false); // Dừng đếm\n    } else if (mode === \"short-break\") {\n      setIsFocusPhase(false);\n      setTimeLeft(300); // Reset về 5 phút\n      setIsRunning(false);\n    } else if (mode === \"long-break\") {\n      setIsFocusPhase(false);\n      setTimeLeft(900); // Reset về 15 phút\n      setIsRunning(false);\n    }\n  };\n  const openManualSelectModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(true);\n  };\n  const handleManualSelectWork = work => {\n    setTempWork(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === work.id ? null : work);\n    setTempTask(null);\n  };\n  const handleManualSelectTask = task => {\n    setTempTask(prev => (prev === null || prev === void 0 ? void 0 : prev.name) === task.name ? null : task);\n  };\n  const handleManualSelectionDone = () => {\n    setSelectedWork(tempWork);\n    setSelectedTask(tempTask);\n    setCurrentTaskManual(tempTask ? {\n      ...tempTask,\n      workName: tempWork.name,\n      workStartDate: tempWork.startDate,\n      workEndDate: tempWork.endDate,\n      startTime: new Date(`1970-01-01T${tempTask.startTime}:00`),\n      endTime: new Date(`1970-01-01T${tempTask.endTime}:00`)\n    } : null);\n    if (tempTask) {\n      const taskTimeSlot = calculateTimeSlot(new Date(`1970-01-01T${tempTask.startTime}:00`), new Date(`1970-01-01T${tempTask.endTime}:00`));\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot));\n      setIsTaskSelected(true);\n    } else {\n      setCountdownTimeTask(0);\n      setIsTaskSelected(false);\n    }\n    setIsModalOpen(false);\n  };\n  const closeModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"countdown-task\",\n      children: isTaskSelected ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(countdownTimeTask)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please select a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-modes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"auto\"),\n        children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n        onClick: () => {\n          setMode(\"manual\");\n          openManualSelectModal();\n        },\n        children: \"T\\u1EF1 ch\\u1ECDn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"free\"),\n        children: \"T\\u1EF1 do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        ref: timelineRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-line\",\n            style: {\n              \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\n              top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 25\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-block\",\n            style: {\n              top: `${hour * 60}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-marker\",\n              children: hour < 10 ? `0${hour}:00` : `${hour}:00`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 9\n      }, this), mode === \"auto\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"T\\u1ED5ng s\\u1ED1 task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: tasksForToday.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), tasksForToday.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TimeSlot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasksForToday.map((task, index) => {\n              const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `task-list-item ${selectedTaskName === task.name ? \"selected\" : \"\"}`,\n                onClick: () => handleSelectTaskBlock(task.name),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.workName || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [task.startTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  }), \" \", \"-\", \" \", task.endTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: timeSlot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 503,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Task Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => alert(\"Daily form is not implemented yet.\"),\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => setNoteContent(\"\"),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"note-input\",\n            className: \"note-label\",\n            children: \"Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"note-input\",\n            className: \"note-input\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value),\n            placeholder: \"Write your notes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), mode === \"manual\" && currentTaskManual && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task hi\\u1EC7n t\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Th\\u1EDDi gian:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.startTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        }), \" \", \"-\", \" \", currentTaskManual.endTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ng\\xE0y Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workStartDate, \" -\", \" \", currentTaskManual.workEndDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timeslot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 13\n        }, this), \" \", calculateTimeSlot(new Date(currentTaskManual.startTime), new Date(currentTaskManual.endTime))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 544,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro-timer\",\n      style: {\n        backgroundColor: getPomodoroBackground()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"swap-icon\",\n          onClick: toggleFreeMode,\n          children: \"\\uD83D\\uDD04 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-modes\",\n          children: !isFreeMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"pomodoro\");\n                handleModeChange(\"pomodoro\");\n              },\n              children: \"Pomodoro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"short-break\");\n                handleModeChange(\"short-break\");\n              },\n              children: \"Short-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"long-break\");\n                handleModeChange(\"long-break\");\n              },\n              children: \"Long-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`,\n            onClick: () => {\n              if (!isFreeMode) {\n                toggleFreeMode();\n              } else {\n                // Reset bộ đếm tự do nếu đã ở chế độ tự do\n                setFreeModeTime(0);\n              }\n            },\n            children: \"Stopwatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(isFreeMode ? freeModeTime : timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 3\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\"),\n          disabled: !isTaskSelected,\n          children: isRunning ? \"Tạm dừng\" : \"Bắt đầu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 3\n        }, this), isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFreeModeTime(0),\n          children: \"K\\u1EBFt th\\xFAc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 7\n        }, this), !isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkip,\n          children: \"B\\u1ECF qua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 1\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(tempWork === null || tempWork === void 0 ? void 0 : tempWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ng\\xE0y: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"focus-button\",\n              onClick: handleManualSelectionDone,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-close\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 683,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 687,\n            columnNumber: 15\n          }, this), tempWork && tempWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tempWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(tempTask === null || tempTask === void 0 ? void 0 : tempTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 698,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\u1EDDi gian: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 21\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u1ECDn m\\u1ED9t Work \\u0111\\u1EC3 xem Task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"Q4eRxrLHj7yf8lS3EX5Zbpuxw9w=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTaskManual","setCurrentTaskManual","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timelineRef","selectedTaskBlock","setSelectedTaskBlock","selectedTaskName","setSelectedTaskName","noteContent","setNoteContent","isFreeMode","setIsFreeMode","freeModeTime","setFreeModeTime","currentMode","setCurrentMode","countdownTimeTask","setCountdownTimeTask","isTaskSelected","setIsTaskSelected","timer","setInterval","prev","handlePomodoroComplete","clearInterval","toggleFreeMode","freeModeTimer","info","success","handleStartPause","handleSkip","prevCycle","newCycle","handleSelectTaskBlock","taskName","find","task","name","taskTimeSlot","calculateTimeSlot","startTime","endTime","taskTimeSlotToSeconds","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","current","currentTimePosition","getHours","getMinutes","scrollTo","top","behavior","calculateTasksForToday","today","tasks","Object","values","flat","forEach","work","workStartDate","startDate","workEndDate","endDate","subWorks","repeatOption","customRepeat","startHour","startMinute","split","map","Number","endHour","endMinute","validDates","currentDate","push","setDate","getDate","repeatEvery","repeatUnit","repeatDays","taskStartDate","dayMapping","dayOfWeek","getDay","includes","date","toDateString","workName","setHours","sortedTasks","sort","a","b","countdownTimer","max","now","renderTaskOnTimeline","taskStart","taskEnd","startMinutes","endMinutes","isSelected","isDimmed","className","style","height","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","diff","hours","getUTCHours","getUTCMinutes","getPomodoroBackground","timeSlot","handleModeChange","openManualSelectModal","handleManualSelectWork","id","handleManualSelectTask","handleManualSelectionDone","closeModal","ref","Array","from","length","_","hour","index","toLocaleTimeString","minute","hour12","alert","htmlFor","value","onChange","e","target","placeholder","backgroundColor","error","disabled","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\r\n  const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\r\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\r\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\r\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\"); // Lưu chế độ hiện tại\r\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0); // Thời gian đếm ngược\r\n  const [isTaskSelected, setIsTaskSelected] = useState(false); // Trạng thái task được chọn\r\n\r\n\r\n\r\n\r\n  // Pomodoro logic\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      handlePomodoroComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const toggleFreeMode = () => {\r\n    if (isFreeMode) {\r\n      // Chuyển về chế độ Pomodoro\r\n      setIsFreeMode(false);\r\n      setFreeModeTime(0); // Reset thời gian tự do\r\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\r\n    } else {\r\n      // Chuyển sang chế độ tự do\r\n      setIsFreeMode(true);\r\n      setFreeModeTime(0); // Reset bộ đếm tự do về 0\r\n      setIsRunning(false); // Dừng đếm tự do\r\n    }\r\n  };\r\n  \r\n\r\n  // Free count time\r\n  useEffect(() => {\r\n    let freeModeTimer;\r\n    if (isFreeMode && isRunning) {\r\n      freeModeTimer = setInterval(() => {\r\n        setFreeModeTime((prev) => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(freeModeTimer);\r\n  }, [isFreeMode, isRunning]);\r\n  \r\n\r\n  \r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    if (isFocusPhase) {\r\n      setIsFocusPhase(false);\r\n      setCycle((prev) => prev + 1);\r\n      if ((cycle + 1) % 4 === 0) {\r\n        setTimeLeft(900);\r\n        toast.info(\"Long Break! Take a 15-minute rest.\");\r\n      } else {\r\n        setTimeLeft(300);\r\n        toast.info(\"Short Break! Take a 5-minute rest.\");\r\n      }\r\n    } else {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500);\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  }, [cycle, isFocusPhase, toast]);\r\n\r\n\r\n  const handleStartPause = () => {\r\n    if (!isRunning) {\r\n      // Không thay đổi currentMode ở đây nữa\r\n      setIsRunning(true);\r\n    } else {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const handleSkip = () => {\r\n    if (currentMode === \"pomodoro\") {\r\n      setCycle((prevCycle) => {\r\n        const newCycle = prevCycle + 1;\r\n        if (newCycle % 7 === 0) {\r\n          setCurrentMode(\"long-break\");\r\n          setTimeLeft(900); // Long Break - 15 phút\r\n        } else {\r\n          setCurrentMode(\"short-break\");\r\n          setTimeLeft(300); // Short Break - 5 phút\r\n        }\r\n        return newCycle;\r\n      });\r\n    } else if (currentMode === \"short-break\") {\r\n      setCurrentMode(\"pomodoro\");\r\n      setTimeLeft(1500); // Pomodoro - 25 phút\r\n    } else if (currentMode === \"long-break\") {\r\n      setCycle(0); // Reset cycle sau long break\r\n      setCurrentMode(\"pomodoro\");\r\n      setTimeLeft(1500); // Quay về Pomodoro\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const handleSelectTaskBlock = (taskName) => {\r\n    const selectedTask = tasksForToday.find((task) => task.name === taskName);\r\n    setSelectedTaskName((prev) => (prev === taskName ? null : taskName)); // Chọn hoặc bỏ chọn\r\n    if (selectedTask) {\r\n      const taskTimeSlot = calculateTimeSlot(selectedTask.startTime, selectedTask.endTime);\r\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot)); // Chuyển timeslot sang giây\r\n      setIsTaskSelected(true);\r\n    } else {\r\n      setCountdownTimeTask(0);\r\n      setIsTaskSelected(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Update current time every minute\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 6000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentMode === \"short-break\" || currentMode === \"long-break\") {\r\n      setIsRunning(false); // Dừng đếm ngược\r\n    }\r\n  }, [currentMode]);\r\n  \r\n\r\n  // Tự động cuộn đến current-time-line khi mở trang\r\nuseEffect(() => {\r\n  if (timelineRef.current) {\r\n    const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\r\n    timelineRef.current.scrollTo({\r\n      top: currentTimePosition - 50, // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n}, [currentTime]);\r\n\r\n\r\n  // Calculate tasks for today\r\n  const calculateTasksForToday = useCallback(() => {\r\n    const today = new Date();\r\n    const tasks = [];\r\n\r\n    Object.values(works).flat().forEach((work) => {\r\n      const workStartDate = new Date(work.startDate);\r\n      const workEndDate = new Date(work.endDate);\r\n\r\n      work.subWorks.forEach((task) => {\r\n        const { startTime, endTime, repeatOption, customRepeat = {} } = task;\r\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n        let validDates = [];\r\n        if (repeatOption === \"Không lặp lại\") {\r\n          validDates = [workStartDate];\r\n        } else if (repeatOption === \"Hàng ngày\") {\r\n          let currentDate = new Date(workStartDate);\r\n          while (currentDate <= workEndDate) {\r\n            validDates.push(new Date(currentDate));\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n          }\r\n        } else if (repeatOption === \"Tùy chỉnh\") {\r\n          const { repeatEvery = 1, repeatUnit = \"ngày\", startDate, repeatDays = [] } = customRepeat;\r\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\r\n          let currentDate = new Date(taskStartDate);\r\n\r\n          if (repeatUnit === \"ngày\") {\r\n            while (currentDate <= workEndDate) {\r\n              validDates.push(new Date(currentDate));\r\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\r\n            }\r\n          } else if (repeatUnit === \"tuần\") {\r\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n            while (currentDate <= workEndDate) {\r\n              const dayOfWeek = dayMapping[currentDate.getDay()];\r\n              if (repeatDays.includes(dayOfWeek)) {\r\n                validDates.push(new Date(currentDate));\r\n              }\r\n              currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        validDates.forEach((date) => {\r\n          if (date.toDateString() === today.toDateString()) {\r\n            tasks.push({\r\n              ...task,\r\n              workName: work.name,\r\n              startTime: new Date(today.setHours(startHour, startMinute)),\r\n              endTime: new Date(today.setHours(endHour, endMinute)),\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\r\n    setTasksForToday(sortedTasks);\r\n  }, [works]);\r\n\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      calculateTasksForToday();\r\n    }\r\n  }, [mode, calculateTasksForToday]);\r\n\r\n  useEffect(() => {\r\n    let countdownTimer;\r\n    if (isTaskSelected && isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\r\n      countdownTimer = setInterval(() => {\r\n        setCountdownTimeTask((prev) => Math.max(prev - 1, 0));\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(countdownTimer);\r\n  }, [isRunning, isTaskSelected, currentMode, isFreeMode]);\r\n  \r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const now = new Date();\r\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\r\n        calculateTasksForToday(); // Làm mới danh sách task\r\n      }\r\n    }, 60000); // Kiểm tra mỗi phút\r\n    return () => clearInterval(timer);\r\n  }, [calculateTasksForToday]);\r\n\r\n  const renderTaskOnTimeline = (task) => {\r\n    const taskStart = task.startTime;\r\n    const taskEnd = task.endTime;\r\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\r\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\r\n  \r\n    // Kiểm tra trạng thái của task\r\n    const isSelected = selectedTaskName === task.name;\r\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\r\n  \r\n    return (\r\n      <div\r\n        className={`task-block ${isSelected ? \"selected\" : \"\"} ${\r\n          isDimmed ? \"dimmed\" : \"\"\r\n        }`}\r\n        style={{\r\n          top: `${startMinutes}px`,\r\n          height: `${endMinutes - startMinutes}px`,\r\n        }}\r\n        key={task.name}\r\n        onClick={() => handleSelectTaskBlock(task.name)} \r\n      >\r\n        <div className=\"task-name\">{task.name}</div>\r\n        <button className=\"select-task-button\">\r\n          {isSelected ? \"Deselect\" : \"Select\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const calculateTimeSlot = (startTime, endTime) => {\r\n    const diff = new Date(endTime - startTime);\r\n    const hours = diff.getUTCHours();\r\n    const minutes = diff.getUTCMinutes();\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n  \r\n  \r\n  const getPomodoroBackground = () => {\r\n    if (isFreeMode) return \"#d4b3e9\"; // Màu tím pastel cho chế độ tự do\r\n    switch (currentMode) {\r\n      case \"pomodoro\":\r\n        return \"#56daeb\"; // Xanh ngọc bích\r\n      case \"short-break\":\r\n        return \"#a8d5ba\"; // Xanh lá pastel\r\n      case \"long-break\":\r\n        return \"#f6e58d\"; // Vàng chanh\r\n      default:\r\n        return \"#f9f9f9\"; // Mặc định\r\n    }\r\n  };\r\n\r\n  const taskTimeSlotToSeconds = (timeSlot) => {\r\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\r\n    return hours * 3600 + minutes * 60;\r\n  };\r\n  \r\n  \r\n  \r\n \r\n  const handleModeChange = (mode) => {\r\n    if (mode === \"pomodoro\") {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500); // Reset về 25 phút\r\n      setIsRunning(false); // Dừng đếm\r\n    } else if (mode === \"short-break\") {\r\n      setIsFocusPhase(false);\r\n      setTimeLeft(300); // Reset về 5 phút\r\n      setIsRunning(false);\r\n    } else if (mode === \"long-break\") {\r\n      setIsFocusPhase(false);\r\n      setTimeLeft(900); // Reset về 15 phút\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n\r\n  const openManualSelectModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleManualSelectWork = (work) => {\r\n    setTempWork((prev) => (prev?.id === work.id ? null : work));\r\n    setTempTask(null);\r\n  };\r\n\r\n  const handleManualSelectTask = (task) => {\r\n    setTempTask((prev) => (prev?.name === task.name ? null : task));\r\n  };\r\n\r\n  const handleManualSelectionDone = () => {\r\n    setSelectedWork(tempWork);\r\n    setSelectedTask(tempTask);\r\n  \r\n    setCurrentTaskManual(\r\n      tempTask\r\n        ? {\r\n            ...tempTask,\r\n            workName: tempWork.name,\r\n            workStartDate: tempWork.startDate,\r\n            workEndDate: tempWork.endDate,\r\n            startTime: new Date(`1970-01-01T${tempTask.startTime}:00`),\r\n            endTime: new Date(`1970-01-01T${tempTask.endTime}:00`),\r\n          }\r\n        : null\r\n    );\r\n    if (tempTask) {\r\n      const taskTimeSlot = calculateTimeSlot(\r\n        new Date(`1970-01-01T${tempTask.startTime}:00`),\r\n        new Date(`1970-01-01T${tempTask.endTime}:00`)\r\n      );\r\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot));\r\n      setIsTaskSelected(true);\r\n    } else {\r\n      setCountdownTimeTask(0);\r\n      setIsTaskSelected(false);\r\n    }\r\n    \r\n    setIsModalOpen(false);\r\n  };\r\n  \r\n\r\n  const closeModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"countdown-task\">\r\n  {isTaskSelected ? (\r\n    <p>{formatTime(countdownTimeTask)}</p>\r\n  ) : (\r\n    <p>Please select a task</p>\r\n  )}\r\n</div>\r\n\r\n      <div className=\"focus-modes\">\r\n        <button\r\n          className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"auto\")}\r\n        >\r\n          Tự động\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n          onClick={() => {\r\n            setMode(\"manual\");\r\n            openManualSelectModal();\r\n          }}\r\n        >\r\n          Tự chọn\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"free\")}\r\n        >\r\n          Tự do\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"focus-content\">\r\n        {/* Time-line luôn hiển thị */}\r\n        <div className=\"timeline-container\" ref={timelineRef}>\r\n          <div className=\"timeline\">\r\n            <div\r\n              className=\"current-time-line\"\r\n              style={{\r\n                \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\r\n                top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`,\r\n              }}\r\n            ></div>\r\n            {Array.from({ length: 25 }).map((_, hour) => (\r\n              <div key={hour} className=\"hour-block\" style={{ top: `${hour * 60}px` }}>\r\n                <div className=\"hour-marker\">\r\n                  {hour < 10 ? `0${hour}:00` : `${hour}:00`}\r\n                </div>\r\n                <div className=\"hour-divider\"></div>\r\n              </div>\r\n            ))}\r\n            {/* Chỉ hiển thị các task trên timeline nếu có */}\r\n            {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n          </div>\r\n        </div>\r\n            \r\n        {/* Task-list chỉ hiển thị ở chế độ \"tự động\" */}\r\n        {mode === \"auto\" && (\r\n          <div className=\"task-list\">\r\n          <h2>Today Task</h2>\r\n          <p>\r\n            Tổng số task: <strong>{tasksForToday.length}</strong>\r\n          </p>\r\n          {tasksForToday.length > 0 ? (\r\n            <table className=\"task-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Work</th>\r\n                  <th>Time</th>\r\n                  <th>TimeSlot</th> {/* Thêm cột TimeSlot */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasksForToday.map((task, index) => {\r\n                  const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\r\n                  return (\r\n                    <tr\r\n                      key={index}\r\n                      className={`task-list-item ${\r\n                        selectedTaskName === task.name ? \"selected\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSelectTaskBlock(task.name)}\r\n                    >\r\n                      <td>{task.name}</td>\r\n                      <td>{task.workName || \"N/A\"}</td>\r\n                      <td>\r\n                        {task.startTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}{\" \"}\r\n                        -{\" \"}\r\n                        {task.endTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}\r\n                      </td>\r\n                      <td>{timeSlot}</td> {/* Hiển thị TimeSlot */}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Empty Task Today</p>\r\n          )}\r\n        </div>\r\n        \r\n        )}\r\n\r\n        {/* Note-container luôn hiển thị */}\r\n        <div className=\"note-container\">\r\n          <div className=\"note-header\">\r\n            <button\r\n              className=\"note-button\"\r\n              onClick={() => alert(\"Daily form is not implemented yet.\")}\r\n            >\r\n              Daily\r\n            </button>\r\n            <button className=\"note-button\" onClick={() => setNoteContent(\"\")}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n          <div className=\"note-body\">\r\n            <label htmlFor=\"note-input\" className=\"note-label\">Note</label>\r\n            <textarea\r\n              id=\"note-input\"\r\n              className=\"note-input\"\r\n              value={noteContent}\r\n              onChange={(e) => setNoteContent(e.target.value)}\r\n              placeholder=\"Write your notes here...\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {mode === \"manual\" && currentTaskManual && (\r\n        <div className=\"task-select\">\r\n          <h2>Task hiện tại</h2>\r\n          <p>\r\n            <strong>Work:</strong> {currentTaskManual.workName}\r\n          </p>\r\n          <p>\r\n            <strong>Task:</strong> {currentTaskManual.name}\r\n          </p>\r\n          <p>\r\n            <strong>Thời gian:</strong>{\" \"}\r\n            {currentTaskManual.startTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}{\" \"}\r\n            -{\" \"}\r\n            {currentTaskManual.endTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Ngày Work:</strong> {currentTaskManual.workStartDate} -{\" \"}\r\n            {currentTaskManual.workEndDate}\r\n          </p>\r\n          <p>\r\n            <strong>Timeslot:</strong>{\" \"}\r\n            {calculateTimeSlot(\r\n              new Date(currentTaskManual.startTime),\r\n              new Date(currentTaskManual.endTime)\r\n            )}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n\r\n<div className=\"pomodoro-timer\" style={{ backgroundColor: getPomodoroBackground() }}>\r\n  <div className=\"pomodoro-header\">\r\n    <span className=\"swap-icon\" onClick={toggleFreeMode}>\r\n      🔄 {/* Icon Swap */}\r\n    </span>\r\n    <div className=\"pomodoro-modes\">\r\n  {!isFreeMode ? (\r\n    <>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"pomodoro\");\r\n          handleModeChange(\"pomodoro\");\r\n        }}\r\n      >\r\n        Pomodoro\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"short-break\");\r\n          handleModeChange(\"short-break\");\r\n        }}\r\n      >\r\n        Short-break\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"long-break\");\r\n          handleModeChange(\"long-break\");\r\n        }}\r\n      >\r\n        Long-break\r\n      </span>\r\n    </>\r\n  ) : (\r\n    <span\r\n  className={`pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`}\r\n  onClick={() => {\r\n    if (!isFreeMode) {\r\n      toggleFreeMode();\r\n    } else {\r\n      // Reset bộ đếm tự do nếu đã ở chế độ tự do\r\n      setFreeModeTime(0);\r\n    }\r\n  }}\r\n>\r\n  Stopwatch\r\n</span>\r\n\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n  <p>{formatTime(isFreeMode ? freeModeTime : timeLeft)}</p> {/* Hiển thị thời gian */}\r\n  <div className=\"timer-controls\">\r\n  <button\r\n  onClick={isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\")}\r\n  disabled={!isTaskSelected}\r\n>\r\n  {isRunning ? \"Tạm dừng\" : \"Bắt đầu\"}\r\n</button>\r\n\r\n    {isFreeMode && (\r\n      <button onClick={() => setFreeModeTime(0)}>Kết thúc</button>\r\n    )}\r\n    {!isFreeMode && <button onClick={handleSkip}>Bỏ qua</button>}\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Danh sách Work</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${\r\n                    tempWork?.id === work.id ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>\r\n                    Ngày: {work.startDate} - {work.endDate}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"focus-button\" onClick={handleManualSelectionDone}>\r\n                  Done\r\n                </button>\r\n                <button className=\"modal-close\" onClick={closeModal}>\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <h2>Danh sách Task</h2>\r\n              {tempWork && tempWork.subWorks ? (\r\n                <>\r\n                  {tempWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${\r\n                        tempTask?.name === task.name ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>\r\n                        Thời gian: {task.startTime} - {task.endTime}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>Chọn một Work để xem Task.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}