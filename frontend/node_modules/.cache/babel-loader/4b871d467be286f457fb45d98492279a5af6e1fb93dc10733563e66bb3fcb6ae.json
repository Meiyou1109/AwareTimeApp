{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const timelineRef = useRef(null);\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\n  const [noteContent, setNoteContent] = useState(\"\");\n  const [isFreeMode, setIsFreeMode] = useState(false);\n  const [freeModeTime, setFreeModeTime] = useState(0);\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\");\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0);\n  const [isTaskSelected, setIsTaskSelected] = useState(false);\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false);\n  const [lastTaskStartTime, setLastTaskStartTime] = useState(null);\n  const intervalRef = useRef(null);\n\n  // Toggle Free Mode between Pomodoro and Free mode\n  const toggleFreeMode = useCallback(() => {\n    setIsFreeMode(prev => !prev);\n    if (isFreeMode) {\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft);\n    }\n    setIsRunning(false);\n    setFreeModeTime(0);\n  }, [isFreeMode, isFocusPhase, timeLeft]);\n\n  // Handle completion of Pomodoro or breaks\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    setIsFocusPhase(prev => !prev);\n    if (isFocusPhase) {\n      setCycle(prevCycle => prevCycle + 1);\n      setTimeLeft((cycle + 1) % 4 === 0 ? 900 : 300);\n    } else {\n      setTimeLeft(1500);\n    }\n    toast.success(isFocusPhase ? \"Short Break! Take a 5-minute rest.\" : \"Back to Focus! 25 minutes.\");\n  }, [isFocusPhase, cycle, toast]);\n\n  // Start or pause the timer for the selected task\n  const handleStartPause = useCallback(() => {\n    if (!isRunning) {\n      setLastTaskStartTime(Date.now());\n    } else {\n      if (selectedTaskName) {\n        const elapsedTime = Math.floor((Date.now() - lastTaskStartTime) / 1000);\n        setTodayDataTimeCount(prev => prev.map(task => task.name === selectedTaskName ? {\n          ...task,\n          realTimeTaskCount: task.realTimeTaskCount + elapsedTime\n        } : task));\n      }\n    }\n    setIsRunning(prev => !prev);\n  }, [isRunning, selectedTaskName, lastTaskStartTime]);\n\n  // Handle time countdown\n  useEffect(() => {\n    if (timeLeft === 0) handlePomodoroComplete();\n  }, [timeLeft, handlePomodoroComplete]);\n\n  // Update current time every minute to sync with real world time\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Countdown timer for Pomodoro and breaks\n  useEffect(() => {\n    if (!isRunning) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [isRunning]);\n\n  // Free Mode timer\n  useEffect(() => {\n    if (!isFreeMode || !isRunning) return;\n    const freeModeTimer = setInterval(() => {\n      setFreeModeTime(prev => prev + 1);\n    }, 1000);\n    return () => clearInterval(freeModeTimer);\n  }, [isFreeMode, isRunning]);\n\n  // Handle task selection for tracking time\n  const handleSelectTaskBlock = taskName => {\n    if (selectedTaskName === taskName) {\n      setSelectedTaskName(null);\n      setIsTaskSelected(false);\n      setCountdownTimeTask(0);\n      setIsRunning(false);\n    } else {\n      setSelectedTaskName(taskName);\n      setIsTaskSelected(true);\n      const task = tasksForToday.find(t => t.name === taskName);\n      if (task) {\n        const taskTime = taskTimeSlotToSeconds(calculateTimeSlot(task.startTime, task.endTime));\n        setCountdownTimeTask(taskTime);\n      }\n    }\n  };\n\n  // Calculate and format time slots for display\n  const calculateTimeSlot = (startTime, endTime) => {\n    const start = new Date(startTime);\n    const end = new Date(endTime);\n    const diff = (end - start) / 1000;\n    const hours = Math.floor(diff / 3600);\n    const minutes = Math.floor(diff % 3600 / 60);\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n  };\n  const taskTimeSlotToSeconds = timeSlot => {\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\n    return hours * 3600 + minutes * 60;\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Component rendering logic goes here\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"today-data-toggle\",\n          onClick: () => setIsTodayDataVisible(prev => !prev),\n          children: \"TODAY-DataTimeCount \\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), isTodayDataVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today-data-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Today: \", new Date().toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: todayDataTimeCount.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [task.name, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [formatTime(task.realTimeTaskCount), \" / \", task.timeSlot]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-task\",\n        children: isTaskSelected ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatTime(countdownTimeTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select task!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"focus-modes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n          onClick: () => setMode(\"auto\"),\n          children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            setMode(\"manual\");\n            openManualSelectModal();\n          },\n          children: \"T\\u1EF1 ch\\u1ECDn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n          onClick: () => setMode(\"free\"),\n          children: \"T\\u1EF1 do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        ref: timelineRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-line\",\n            style: {\n              \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\n              top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 25\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-block\",\n            style: {\n              top: `${hour * 60}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-marker\",\n              children: hour < 10 ? `0${hour}:00` : `${hour}:00`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), mode === \"auto\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"T\\u1ED5ng s\\u1ED1 task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: tasksForToday.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), tasksForToday.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TimeSlot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasksForToday.map((task, index) => {\n              const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `task-list-item ${selectedTaskName === task.name ? \"selected\" : \"\"}`,\n                onClick: () => handleSelectTaskBlock(task.name),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.workName || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [task.startTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  }), \" \", \"-\", \" \", task.endTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: timeSlot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Task Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => alert(\"Daily form is not implemented yet.\"),\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => setNoteContent(\"\"),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"note-input\",\n            className: \"note-label\",\n            children: \"Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"note-input\",\n            className: \"note-input\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value),\n            placeholder: \"Write your notes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), mode === \"manual\" && currentTaskManual && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task hi\\u1EC7n t\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Th\\u1EDDi gian:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.startTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        }), \" \", \"-\", \" \", currentTaskManual.endTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ng\\xE0y Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workStartDate, \" -\", \" \", currentTaskManual.workEndDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timeslot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), \" \", calculateTimeSlot(new Date(currentTaskManual.startTime), new Date(currentTaskManual.endTime))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro-timer\",\n      style: {\n        backgroundColor: getPomodoroBackground()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"swap-icon\",\n          onClick: toggleFreeMode,\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-modes\",\n          children: !isFreeMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"pomodoro\");\n                handleModeChange(\"pomodoro\");\n              },\n              children: \"Pomodoro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"short-break\");\n                handleModeChange(\"short-break\");\n              },\n              children: \"Short-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"long-break\");\n                handleModeChange(\"long-break\");\n              },\n              children: \"Long-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`,\n            onClick: () => {\n              if (!isFreeMode) {\n                toggleFreeMode();\n              } else {\n                setFreeModeTime(0);\n              }\n            },\n            children: \"Stopwatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(isFreeMode ? freeModeTime : timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 3\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\"),\n          disabled: !isTaskSelected,\n          children: isRunning ? \"Tạm dừng\" : \"Bắt đầu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 3\n        }, this), isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFreeModeTime(0),\n          children: \"K\\u1EBFt th\\xFAc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 7\n        }, this), !isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkip,\n          children: \"B\\u1ECF qua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 1\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(tempWork === null || tempWork === void 0 ? void 0 : tempWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ng\\xE0y: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"focus-button\",\n              onClick: handleManualSelectionDone,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-close\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), tempWork && tempWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tempWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(tempTask === null || tempTask === void 0 ? void 0 : tempTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\u1EDDi gian: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 21\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u1ECDn m\\u1ED9t Work \\u0111\\u1EC3 xem Task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"3toMBNXv0k+I2Ppbv5dRVQ+n0mE=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timelineRef","selectedTaskName","setSelectedTaskName","noteContent","setNoteContent","isFreeMode","setIsFreeMode","freeModeTime","setFreeModeTime","currentMode","setCurrentMode","countdownTimeTask","setCountdownTimeTask","isTaskSelected","setIsTaskSelected","todayDataTimeCount","setTodayDataTimeCount","isTodayDataVisible","setIsTodayDataVisible","lastTaskStartTime","setLastTaskStartTime","intervalRef","toggleFreeMode","prev","handlePomodoroComplete","prevCycle","success","handleStartPause","now","elapsedTime","Math","floor","map","task","name","realTimeTaskCount","timer","setInterval","clearInterval","freeModeTimer","handleSelectTaskBlock","taskName","find","t","taskTime","taskTimeSlotToSeconds","calculateTimeSlot","startTime","endTime","start","end","diff","hours","minutes","toString","padStart","timeSlot","split","Number","formatTime","seconds","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toDateString","index","status","openManualSelectModal","ref","style","getHours","getMinutes","top","Array","from","length","_","hour","renderTaskOnTimeline","workName","toLocaleTimeString","minute","hour12","alert","htmlFor","id","value","onChange","e","target","placeholder","currentTaskManual","workStartDate","workEndDate","backgroundColor","getPomodoroBackground","handleModeChange","error","disabled","handleSkip","Object","values","flat","work","handleManualSelectWork","startDate","endDate","handleManualSelectionDone","closeModal","subWorks","handleManualSelectTask","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const timelineRef = useRef(null);\r\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [isFreeMode, setIsFreeMode] = useState(false);\r\n  const [freeModeTime, setFreeModeTime] = useState(0);\r\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\");\r\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0);\r\n  const [isTaskSelected, setIsTaskSelected] = useState(false);\r\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\r\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false);\r\n  const [lastTaskStartTime, setLastTaskStartTime] = useState(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  // Toggle Free Mode between Pomodoro and Free mode\r\n  const toggleFreeMode = useCallback(() => {\r\n    setIsFreeMode((prev) => !prev);\r\n    if (isFreeMode) {\r\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft);\r\n    }\r\n    setIsRunning(false);\r\n    setFreeModeTime(0);\r\n  }, [isFreeMode, isFocusPhase, timeLeft]);\r\n\r\n  // Handle completion of Pomodoro or breaks\r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    setIsFocusPhase((prev) => !prev);\r\n    if (isFocusPhase) {\r\n      setCycle((prevCycle) => prevCycle + 1);\r\n      setTimeLeft((cycle + 1) % 4 === 0 ? 900 : 300);\r\n    } else {\r\n      setTimeLeft(1500);\r\n    }\r\n    toast.success(isFocusPhase ? \"Short Break! Take a 5-minute rest.\" : \"Back to Focus! 25 minutes.\");\r\n  }, [isFocusPhase, cycle, toast]);\r\n\r\n  // Start or pause the timer for the selected task\r\n  const handleStartPause = useCallback(() => {\r\n    if (!isRunning) {\r\n      setLastTaskStartTime(Date.now());\r\n    } else {\r\n      if (selectedTaskName) {\r\n        const elapsedTime = Math.floor((Date.now() - lastTaskStartTime) / 1000);\r\n        setTodayDataTimeCount((prev) => prev.map((task) =>\r\n          task.name === selectedTaskName ? { ...task, realTimeTaskCount: task.realTimeTaskCount + elapsedTime } : task\r\n        ));\r\n      }\r\n    }\r\n    setIsRunning((prev) => !prev);\r\n  }, [isRunning, selectedTaskName, lastTaskStartTime]);\r\n\r\n  // Handle time countdown\r\n  useEffect(() => {\r\n    if (timeLeft === 0) handlePomodoroComplete();\r\n  }, [timeLeft, handlePomodoroComplete]);\r\n\r\n  // Update current time every minute to sync with real world time\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 60000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Countdown timer for Pomodoro and breaks\r\n  useEffect(() => {\r\n    if (!isRunning) return;\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => prev - 1);\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, [isRunning]);\r\n\r\n  // Free Mode timer\r\n  useEffect(() => {\r\n    if (!isFreeMode || !isRunning) return;\r\n    const freeModeTimer = setInterval(() => {\r\n      setFreeModeTime((prev) => prev + 1);\r\n    }, 1000);\r\n    return () => clearInterval(freeModeTimer);\r\n  }, [isFreeMode, isRunning]);\r\n\r\n  // Handle task selection for tracking time\r\n  const handleSelectTaskBlock = (taskName) => {\r\n    if (selectedTaskName === taskName) {\r\n      setSelectedTaskName(null);\r\n      setIsTaskSelected(false);\r\n      setCountdownTimeTask(0);\r\n      setIsRunning(false);\r\n    } else {\r\n      setSelectedTaskName(taskName);\r\n      setIsTaskSelected(true);\r\n      const task = tasksForToday.find((t) => t.name === taskName);\r\n      if (task) {\r\n        const taskTime = taskTimeSlotToSeconds(calculateTimeSlot(task.startTime, task.endTime));\r\n        setCountdownTimeTask(taskTime);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Calculate and format time slots for display\r\n  const calculateTimeSlot = (startTime, endTime) => {\r\n    const start = new Date(startTime);\r\n    const end = new Date(endTime);\r\n    const diff = (end - start) / 1000;\r\n    const hours = Math.floor(diff / 3600);\r\n    const minutes = Math.floor((diff % 3600) / 60);\r\n    return `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const taskTimeSlotToSeconds = (timeSlot) => {\r\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\r\n    return hours * 3600 + minutes * 60;\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Component rendering logic goes here\r\n  return (\r\n    <div className=\"main-form\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"container-row\">\r\n      <div className=\"today-data-container\">\r\n        <button\r\n          className=\"today-data-toggle\"\r\n          onClick={() => setIsTodayDataVisible((prev) => !prev)}\r\n        >\r\n          TODAY-DataTimeCount ▼\r\n        </button>\r\n        {isTodayDataVisible && (\r\n          <div className=\"today-data-content\">\r\n            <p>Today: {new Date().toDateString()}</p>\r\n            <ul>\r\n              {todayDataTimeCount.map((task, index) => (\r\n                <li key={index}>\r\n                  {task.name}{\" \"}\r\n                  <strong>\r\n                    {formatTime(task.realTimeTaskCount)} / {task.timeSlot}\r\n                  </strong>{\" \"}\r\n                  <span>{task.status}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n  <div className=\"countdown-task\">\r\n    {isTaskSelected ? (\r\n      <p>{formatTime(countdownTimeTask)}</p>\r\n    ) : (\r\n      <p>Select task!</p>\r\n    )}\r\n  </div>\r\n\r\n  <div className=\"focus-modes\">\r\n    <button\r\n      className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n      onClick={() => setMode(\"auto\")}\r\n    >\r\n      Tự động\r\n    </button>\r\n    <button\r\n      className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n      onClick={() => {\r\n        setMode(\"manual\");\r\n        openManualSelectModal();\r\n      }}\r\n    >\r\n      Tự chọn\r\n    </button>\r\n    <button\r\n      className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n      onClick={() => setMode(\"free\")}\r\n    >\r\n      Tự do\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n      <div className=\"focus-content\">\r\n        <div className=\"timeline-container\" ref={timelineRef}>\r\n          <div className=\"timeline\">\r\n            <div\r\n              className=\"current-time-line\"\r\n              style={{\r\n                \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\r\n                top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`,\r\n              }}\r\n            ></div>\r\n            {Array.from({ length: 25 }).map((_, hour) => (\r\n              <div key={hour} className=\"hour-block\" style={{ top: `${hour * 60}px` }}>\r\n                <div className=\"hour-marker\">\r\n                  {hour < 10 ? `0${hour}:00` : `${hour}:00`}\r\n                </div>\r\n                <div className=\"hour-divider\"></div>\r\n              </div>\r\n            ))}\r\n            {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n          </div>\r\n        </div>\r\n                    {mode === \"auto\" && (\r\n          <div className=\"task-list\">\r\n          <h2>Today Task</h2>\r\n          <p>\r\n            Tổng số task: <strong>{tasksForToday.length}</strong>\r\n          </p>\r\n          {tasksForToday.length > 0 ? (\r\n            <table className=\"task-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Work</th>\r\n                  <th>Time</th>\r\n                  <th>TimeSlot</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasksForToday.map((task, index) => {\r\n                  const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\r\n                  return (\r\n                    <tr\r\n                      key={index}\r\n                      className={`task-list-item ${\r\n                        selectedTaskName === task.name ? \"selected\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSelectTaskBlock(task.name)}\r\n                    >\r\n                      <td>{task.name}</td>\r\n                      <td>{task.workName || \"N/A\"}</td>\r\n                      <td>\r\n                        {task.startTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}{\" \"}\r\n                        -{\" \"}\r\n                        {task.endTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}\r\n                      </td>\r\n                      <td>{timeSlot}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Empty Task Today</p>\r\n          )}\r\n        </div>\r\n        \r\n        )}\r\n        <div className=\"note-container\">\r\n          <div className=\"note-header\">\r\n            <button\r\n              className=\"note-button\"\r\n              onClick={() => alert(\"Daily form is not implemented yet.\")}\r\n            >\r\n              Daily\r\n            </button>\r\n            <button className=\"note-button\" onClick={() => setNoteContent(\"\")}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n          <div className=\"note-body\">\r\n            <label htmlFor=\"note-input\" className=\"note-label\">Note</label>\r\n            <textarea\r\n              id=\"note-input\"\r\n              className=\"note-input\"\r\n              value={noteContent}\r\n              onChange={(e) => setNoteContent(e.target.value)}\r\n              placeholder=\"Write your notes here...\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {mode === \"manual\" && currentTaskManual && (\r\n        <div className=\"task-select\">\r\n          <h2>Task hiện tại</h2>\r\n          <p>\r\n            <strong>Work:</strong> {currentTaskManual.workName}\r\n          </p>\r\n          <p>\r\n            <strong>Task:</strong> {currentTaskManual.name}\r\n          </p>\r\n          <p>\r\n            <strong>Thời gian:</strong>{\" \"}\r\n            {currentTaskManual.startTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}{\" \"}\r\n            -{\" \"}\r\n            {currentTaskManual.endTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Ngày Work:</strong> {currentTaskManual.workStartDate} -{\" \"}\r\n            {currentTaskManual.workEndDate}\r\n          </p>\r\n          <p>\r\n            <strong>Timeslot:</strong>{\" \"}\r\n            {calculateTimeSlot(\r\n              new Date(currentTaskManual.startTime),\r\n              new Date(currentTaskManual.endTime)\r\n            )}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n\r\n<div className=\"pomodoro-timer\" style={{ backgroundColor: getPomodoroBackground() }}>\r\n  <div className=\"pomodoro-header\">\r\n    <span className=\"swap-icon\" onClick={toggleFreeMode}>\r\n      🔄\r\n    </span>\r\n    <div className=\"pomodoro-modes\">\r\n  {!isFreeMode ? (\r\n    <>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"pomodoro\");\r\n          handleModeChange(\"pomodoro\");\r\n        }}\r\n      >\r\n        Pomodoro\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"short-break\");\r\n          handleModeChange(\"short-break\");\r\n        }}\r\n      >\r\n        Short-break\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"long-break\");\r\n          handleModeChange(\"long-break\");\r\n        }}\r\n      >\r\n        Long-break\r\n      </span>\r\n    </>\r\n  ) : (\r\n    <span\r\n  className={`pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`}\r\n  onClick={() => {\r\n    if (!isFreeMode) {\r\n      toggleFreeMode();\r\n    } else {\r\n      setFreeModeTime(0);\r\n    }\r\n  }}\r\n>\r\n  Stopwatch\r\n</span>\r\n\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n  <p>{formatTime(isFreeMode ? freeModeTime : timeLeft)}</p> {/* Hiển thị thời gian */}\r\n  <div className=\"timer-controls\">\r\n  <button\r\n  onClick={isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\")}\r\n  disabled={!isTaskSelected}\r\n>\r\n  {isRunning ? \"Tạm dừng\" : \"Bắt đầu\"}\r\n</button>\r\n\r\n    {isFreeMode && (\r\n      <button onClick={() => setFreeModeTime(0)}>Kết thúc</button>\r\n    )}\r\n    {!isFreeMode && <button onClick={handleSkip}>Bỏ qua</button>}\r\n  </div>\r\n</div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Danh sách Work</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${\r\n                    tempWork?.id === work.id ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>\r\n                    Ngày: {work.startDate} - {work.endDate}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"focus-button\" onClick={handleManualSelectionDone}>\r\n                  Done\r\n                </button>\r\n                <button className=\"modal-close\" onClick={closeModal}>\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <h2>Danh sách Task</h2>\r\n              {tempWork && tempWork.subWorks ? (\r\n                <>\r\n                  {tempWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${\r\n                        tempTask?.name === task.name ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>\r\n                        Thời gian: {task.startTime} - {task.endTime}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>Chọn một Work để xem Task.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}