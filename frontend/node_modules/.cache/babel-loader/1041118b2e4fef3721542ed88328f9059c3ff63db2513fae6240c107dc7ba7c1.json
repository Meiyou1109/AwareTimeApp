{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks,\n  recycledWorks,\n  setRecycledWorks,\n  taskCompletionStatus,\n  setTaskCompletionStatus\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n  useEffect(() => {\n    localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(taskCompletionStatus));\n  }, [taskCompletionStatus]);\n  useEffect(() => {\n    handleExpandAll();\n  }, []);\n  useEffect(() => {\n    setExpandedWorkIds(filteredWorks.map(work => work.id));\n  }, [filteredWorks]);\n  useEffect(() => {\n    // Cập nhật trạng thái khi completedWorks thay đổi\n    completedWorks.forEach(work => {\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        work.subWorks.forEach((_, index) => {\n          updatedStatus[`${work.id}-${index}`] = true;\n        });\n        return updatedStatus;\n      });\n    });\n  }, [completedWorks]);\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat();\n    if (viewMode === \"ongoing\") {\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index);\n    }\n    if (viewMode === \"recycle\") {\n      return recycledWorks;\n    }\n    return [];\n  }, [viewMode, works, completedWorks, recycledWorks]);\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n  const handleExpandAll = () => {\n    setExpandedWorkIds(filteredWorks.map(work => work.id));\n  };\n  const handleCollapseAll = () => {\n    setExpandedWorkIds([]);\n  };\n  const handleToggleComplete = (work, isManual = true) => {\n    const updatedWork = {\n      ...work,\n      isCompleted: !work.isCompleted\n    };\n    if (viewMode === \"ongoing\" || viewMode === \"completed\") {\n      if (isManual) {\n        setTaskCompletionStatus(prevStatus => {\n          const updatedStatus = {\n            ...prevStatus\n          };\n          if (updatedWork.isCompleted) {\n            updatedWork.subWorks.forEach((_, index) => {\n              updatedStatus[`${work.id}-${index}`] = true;\n            });\n          } else {\n            updatedWork.subWorks.forEach((_, index) => {\n              updatedStatus[`${work.id}-${index}`] = false;\n            });\n          }\n          return updatedStatus;\n        });\n      }\n      if (updatedWork.isCompleted) {\n        setCompletedWorks(prev => [...prev, updatedWork]);\n        setWorks(prevWorks => {\n          const updatedWorks = {\n            ...prevWorks\n          };\n          Object.keys(updatedWorks).forEach(key => {\n            updatedWorks[key] = updatedWorks[key].filter(w => w.id !== work.id);\n          });\n          return updatedWorks;\n        });\n      } else {\n        setWorks(prevWorks => {\n          const updatedWorks = {\n            ...prevWorks\n          };\n          const type = work.type || \"doNow\";\n          if (!updatedWorks[type].some(w => w.id === work.id)) {\n            updatedWorks[type] = [...updatedWorks[type], updatedWork];\n          }\n          return updatedWorks;\n        });\n        setCompletedWorks(prev => prev.filter(w => w.id !== work.id));\n      }\n    } else if (viewMode === \"recycle\") {\n      setRecycledWorks(prevRecycledWorks => prevRecycledWorks.map(w => {\n        if (w.id === work.id) {\n          if (isManual) {\n            setTaskCompletionStatus(prevStatus => {\n              const updatedStatus = {\n                ...prevStatus\n              };\n              if (updatedWork.isCompleted) {\n                updatedWork.subWorks.forEach((_, index) => {\n                  updatedStatus[`${work.id}-${index}`] = true;\n                });\n              } else {\n                updatedWork.subWorks.forEach((_, index) => {\n                  updatedStatus[`${work.id}-${index}`] = false;\n                });\n              }\n              return updatedStatus;\n            });\n          }\n          return updatedWork;\n        }\n        return w;\n      }));\n    }\n  };\n  const toggleTaskCompletion = (workId, taskIndex) => {\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      const taskKey = `${workId}-${taskIndex}`;\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\n      const work = filteredWorks.find(w => w.id === workId);\n      if (work) {\n        const totalTasks = work.subWorks.length;\n        const completedTasks = work.subWorks.filter((_, index) => updatedStatus[`${workId}-${index}`]).length;\n        if (completedTasks === totalTasks) {\n          handleToggleComplete(work, false);\n        } else if (work.isCompleted) {\n          handleToggleComplete(work, false);\n        }\n      }\n      return updatedStatus;\n    });\n  };\n  const handleDeleteWork = workId => {\n    const deletedWork = filteredWorks.find(work => work.id === workId);\n    if (deletedWork) {\n      setRecycledWorks(prevRecycledWorks => [...prevRecycledWorks, deletedWork]);\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(key => {\n        updatedWorks[key] = updatedWorks[key].filter(w => w.id !== workId);\n      });\n      return updatedWorks;\n    });\n    setCompletedWorks(prevCompletedWorks => prevCompletedWorks.filter(work => work.id !== workId));\n  };\n  const handleRestoreWork = workId => {\n    const restoredWork = recycledWorks.find(work => work.id === workId);\n    if (restoredWork) {\n      if (restoredWork.isCompleted) {\n        setCompletedWorks(prev => {\n          if (!prev.some(w => w.id === restoredWork.id)) {\n            return [...prev, restoredWork];\n          }\n          return prev;\n        });\n      } else {\n        setWorks(prevWorks => {\n          const updatedWorks = {\n            ...prevWorks\n          };\n          const type = restoredWork.type || \"doNow\";\n          if (!updatedWorks[type].some(w => w.id === workId)) {\n            updatedWorks[type] = [...updatedWorks[type], restoredWork];\n          }\n          return updatedWorks;\n        });\n      }\n      setRecycledWorks(prevRecycledWorks => prevRecycledWorks.filter(work => work.id !== workId));\n    }\n  };\n  const handleDeleteTask = (workId, taskIndex) => {\n    const isCompletedWork = completedWorks.some(work => work.id === workId);\n    if (isCompletedWork) {\n      setCompletedWorks(prevCompletedWorks => {\n        return prevCompletedWorks.map(work => {\n          if (work.id === workId) {\n            const updatedWork = {\n              ...work,\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex)\n            };\n            return updatedWork;\n          }\n          return work;\n        });\n      });\n    } else {\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(type => {\n          const workIndex = updatedWorks[type].findIndex(work => work.id === workId);\n          if (workIndex !== -1) {\n            const updatedWork = {\n              ...updatedWorks[type][workIndex]\n            };\n            updatedWork.subWorks = updatedWork.subWorks.filter((_, index) => index !== taskIndex);\n            updatedWorks[type] = [...updatedWorks[type].slice(0, workIndex), updatedWork, ...updatedWorks[type].slice(workIndex + 1)];\n          }\n        });\n        return updatedWorks;\n      });\n    }\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      delete updatedStatus[`${workId}-${taskIndex}`];\n      return updatedStatus;\n    });\n  };\n  const calculateProgress = work => {\n    if (!work.subWorks || work.subWorks.length === 0) {\n      if (viewMode === \"recycle\") {\n        return work.isCompleted ? 100 : 0;\n      }\n      return completedWorks.some(completedWork => completedWork.id === work.id) ? 100 : 0;\n    }\n    const totalTasks = work.subWorks.length;\n    const completedTasks = work.subWorks.filter((_, index) => {\n      const taskKey = `${work.id}-${index}`;\n      return taskCompletionStatus[taskKey];\n    }).length;\n    return Math.round(completedTasks / totalTasks * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"recycle\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"recycle\"),\n        children: \"Recycle Bin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expand-collapse-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"expand-btn\",\n        onClick: handleExpandAll,\n        children: \"Expand All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"collapse-btn\",\n        onClick: handleCollapseAll,\n        children: \"Collapse All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : viewMode === \"completed\" ? \"No completed works\" : \"No recycled works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const progress = calculateProgress(work);\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\" || work.isCompleted,\n                  onChange: () => handleToggleComplete(work)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 23\n                }, this), work.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [viewMode === \"recycle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"restore-bt\",\n                  style: {\n                    border: \"2px solid #007bff\",\n                    padding: \"4px 6px\"\n                  },\n                  onClick: () => handleRestoreWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiOutlineUndo, {\n                    size: 20,\n                    color: \"#007bff\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 352,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  onClick: () => handleDeleteWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 366,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 361,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container progress-container-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percentage\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 17\n          }, this)];\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              const taskKey = `${work.id}-${index}`;\n              const isTaskCompleted = taskCompletionStatus[taskKey];\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!isTaskCompleted,\n                    onChange: () => toggleTaskCompletion(work.id, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 399,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: isTaskCompleted ? \"line-through\" : \"none\"\n                    },\n                    children: [task.name, \" - Description: \", task.description, \", Time: \", task.startTime, \" - \", task.endTime, \", Repeat: \", task.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${task.customRepeat.repeatEvery} ${task.customRepeat.repeatUnit}${task.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(task.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\", \")}`}` : task.repeatOption]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"task-delete-icon\",\n                    onClick: () => handleDeleteTask(work.id, index),\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                      size: 14,\n                      className: \"task-delete-icon-style\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 429,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 23\n                }, this)\n              }, taskKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"HAkcACAcvSGYWFSuGtaLQFdqmgA=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","AiOutlineUndo","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Project","works","setWorks","completedWorks","setCompletedWorks","recycledWorks","setRecycledWorks","taskCompletionStatus","setTaskCompletionStatus","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","localStorage","setItem","JSON","stringify","handleExpandAll","filteredWorks","map","work","id","forEach","prevStatus","updatedStatus","subWorks","_","index","allOngoingWorks","Object","values","flat","filter","some","completedWork","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleCollapseAll","handleToggleComplete","isManual","updatedWork","isCompleted","prev","prevWorks","updatedWorks","keys","key","w","type","prevRecycledWorks","toggleTaskCompletion","taskIndex","taskKey","find","totalTasks","length","completedTasks","handleDeleteWork","deletedWork","prevCompletedWorks","handleRestoreWork","restoredWork","handleDeleteTask","isCompletedWork","workIndex","slice","calculateProgress","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","flatMap","progress","workElements","htmlFor","checked","name","style","border","padding","color","width","task","isTaskCompleted","push","textDecoration","description","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","Date","startDate","toLocaleDateString","repeatDays","join","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete, AiOutlineUndo } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks, recycledWorks, setRecycledWorks, taskCompletionStatus, setTaskCompletionStatus }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"taskCompletionStatus\", JSON.stringify(taskCompletionStatus));\r\n  }, [taskCompletionStatus]);\r\n  \r\n  useEffect(() => {\r\n    handleExpandAll();\r\n  }, []);\r\n  useEffect(() => {\r\n    setExpandedWorkIds(filteredWorks.map((work) => work.id));\r\n  }, [filteredWorks]);\r\n  \r\n  useEffect(() => {\r\n    // Cập nhật trạng thái khi completedWorks thay đổi\r\n    completedWorks.forEach((work) => {\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        work.subWorks.forEach((_, index) => {\r\n          updatedStatus[`${work.id}-${index}`] = true;\r\n        });\r\n        return updatedStatus;\r\n      });\r\n    });\r\n  }, [completedWorks]);\r\n\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat();\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      return allOngoingWorks.filter(\r\n        (work) => !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) => self.findIndex((work) => work.id === completedWork.id) === index\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"recycle\") {\r\n      return recycledWorks;\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks, recycledWorks]);\r\n\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  const handleExpandAll = () => {\r\n    setExpandedWorkIds(filteredWorks.map((work) => work.id));\r\n  };\r\n\r\n  const handleCollapseAll = () => {\r\n    setExpandedWorkIds([]);\r\n  };\r\n\r\n  const handleToggleComplete = (work, isManual = true) => {\r\n    const updatedWork = { ...work, isCompleted: !work.isCompleted };\r\n\r\n    if (viewMode === \"ongoing\" || viewMode === \"completed\") {\r\n      if (isManual) {\r\n        setTaskCompletionStatus((prevStatus) => {\r\n          const updatedStatus = { ...prevStatus };\r\n          if (updatedWork.isCompleted) {\r\n            updatedWork.subWorks.forEach((_, index) => {\r\n              updatedStatus[`${work.id}-${index}`] = true;\r\n            });\r\n          } else {\r\n            updatedWork.subWorks.forEach((_, index) => {\r\n              updatedStatus[`${work.id}-${index}`] = false;\r\n            });\r\n          }\r\n          return updatedStatus;\r\n        });\r\n      }\r\n\r\n      if (updatedWork.isCompleted) {\r\n        setCompletedWorks((prev) => [...prev, updatedWork]);\r\n        setWorks((prevWorks) => {\r\n          const updatedWorks = { ...prevWorks };\r\n          Object.keys(updatedWorks).forEach((key) => {\r\n            updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== work.id);\r\n          });\r\n          return updatedWorks;\r\n        });\r\n      } else {\r\n        setWorks((prevWorks) => {\r\n          const updatedWorks = { ...prevWorks };\r\n          const type = work.type || \"doNow\";\r\n          if (!updatedWorks[type].some((w) => w.id === work.id)) {\r\n            updatedWorks[type] = [...updatedWorks[type], updatedWork];\r\n          }\r\n          return updatedWorks;\r\n        });\r\n        setCompletedWorks((prev) => prev.filter((w) => w.id !== work.id));\r\n      }\r\n    } else if (viewMode === \"recycle\") {\r\n      setRecycledWorks((prevRecycledWorks) =>\r\n        prevRecycledWorks.map((w) => {\r\n          if (w.id === work.id) {\r\n            if (isManual) {\r\n              setTaskCompletionStatus((prevStatus) => {\r\n                const updatedStatus = { ...prevStatus };\r\n                if (updatedWork.isCompleted) {\r\n                  updatedWork.subWorks.forEach((_, index) => {\r\n                    updatedStatus[`${work.id}-${index}`] = true;\r\n                  });\r\n                } else {\r\n                  updatedWork.subWorks.forEach((_, index) => {\r\n                    updatedStatus[`${work.id}-${index}`] = false;\r\n                  });\r\n                }\r\n                return updatedStatus;\r\n              });\r\n            }\r\n            return updatedWork;\r\n          }\r\n          return w;\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const toggleTaskCompletion = (workId, taskIndex) => {\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      const taskKey = `${workId}-${taskIndex}`;\r\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\r\n\r\n      const work = filteredWorks.find((w) => w.id === workId);\r\n      if (work) {\r\n        const totalTasks = work.subWorks.length;\r\n        const completedTasks = work.subWorks.filter((_, index) => updatedStatus[`${workId}-${index}`]).length;\r\n\r\n        if (completedTasks === totalTasks) {\r\n          handleToggleComplete(work, false);\r\n        } else if (work.isCompleted) {\r\n          handleToggleComplete(work, false);\r\n        }\r\n      }\r\n\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  const handleDeleteWork = (workId) => {\r\n    const deletedWork = filteredWorks.find((work) => work.id === workId);\r\n\r\n    if (deletedWork) {\r\n      setRecycledWorks((prevRecycledWorks) => [...prevRecycledWorks, deletedWork]);\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((key) => {\r\n        updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== workId);\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    setCompletedWorks((prevCompletedWorks) =>\r\n      prevCompletedWorks.filter((work) => work.id !== workId)\r\n    );\r\n  };\r\n\r\n  const handleRestoreWork = (workId) => {\r\n    const restoredWork = recycledWorks.find((work) => work.id === workId);\r\n\r\n    if (restoredWork) {\r\n      if (restoredWork.isCompleted) {\r\n        setCompletedWorks((prev) => {\r\n          if (!prev.some((w) => w.id === restoredWork.id)) {\r\n            return [...prev, restoredWork];\r\n          }\r\n          return prev;\r\n        });\r\n      } else {\r\n        setWorks((prevWorks) => {\r\n          const updatedWorks = { ...prevWorks };\r\n          const type = restoredWork.type || \"doNow\";\r\n          if (!updatedWorks[type].some((w) => w.id === workId)) {\r\n            updatedWorks[type] = [...updatedWorks[type], restoredWork];\r\n          }\r\n          return updatedWorks;\r\n        });\r\n      }\r\n\r\n      setRecycledWorks((prevRecycledWorks) =>\r\n        prevRecycledWorks.filter((work) => work.id !== workId)\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleDeleteTask = (workId, taskIndex) => {\r\n    const isCompletedWork = completedWorks.some((work) => work.id === workId);\r\n\r\n    if (isCompletedWork) {\r\n      setCompletedWorks((prevCompletedWorks) => {\r\n        return prevCompletedWorks.map((work) => {\r\n          if (work.id === workId) {\r\n            const updatedWork = {\r\n              ...work,\r\n              subWorks: work.subWorks.filter((_, index) => index !== taskIndex),\r\n            };\r\n            return updatedWork;\r\n          }\r\n          return work;\r\n        });\r\n      });\r\n    } else {\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((type) => {\r\n          const workIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n          if (workIndex !== -1) {\r\n            const updatedWork = { ...updatedWorks[type][workIndex] };\r\n            updatedWork.subWorks = updatedWork.subWorks.filter(\r\n              (_, index) => index !== taskIndex\r\n            );\r\n            updatedWorks[type] = [\r\n              ...updatedWorks[type].slice(0, workIndex),\r\n              updatedWork,\r\n              ...updatedWorks[type].slice(workIndex + 1),\r\n            ];\r\n          }\r\n        });\r\n        return updatedWorks;\r\n      });\r\n    }\r\n\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      delete updatedStatus[`${workId}-${taskIndex}`];\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  const calculateProgress = (work) => {\r\n    if (!work.subWorks || work.subWorks.length === 0) {\r\n      if (viewMode === \"recycle\") {\r\n        return work.isCompleted ? 100 : 0;\r\n      }\r\n      return completedWorks.some((completedWork) => completedWork.id === work.id)\r\n        ? 100\r\n        : 0;\r\n    }\r\n\r\n    const totalTasks = work.subWorks.length;\r\n    const completedTasks = work.subWorks.filter((_, index) => {\r\n      const taskKey = `${work.id}-${index}`;\r\n      return taskCompletionStatus[taskKey];\r\n    }).length;\r\n\r\n    return Math.round((completedTasks / totalTasks) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\" ? \"ongoing\" : viewMode === \"completed\" ? \"completed\" : \"recycled\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"recycle\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"recycle\")}\r\n        >\r\n          Recycle Bin\r\n        </button>\r\n      </div>\r\n      <div className=\"expand-collapse-buttons\">\r\n        <button className=\"expand-btn\" onClick={handleExpandAll}>\r\n          Expand All\r\n        </button>\r\n        <button className=\"collapse-btn\" onClick={handleCollapseAll}>\r\n          Collapse All\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : viewMode === \"completed\"\r\n              ? \"No completed works\"\r\n              : \"No recycled works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const progress = calculateProgress(work);\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={viewMode === \"completed\" || work.isCompleted}\r\n                        onChange={() => handleToggleComplete(work)}\r\n                      />\r\n                      {work.name}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {viewMode === \"recycle\" && (\r\n                        <button\r\n                          id=\"restore-bt\"\r\n                          style={{ border: \"2px solid #007bff\", padding: \"4px 6px\" }}\r\n                          onClick={() => handleRestoreWork(work.id)}\r\n                        >\r\n                          <AiOutlineUndo size={20} color=\"#007bff\" />\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        id=\"del-bt\"\r\n                        onClick={() => handleDeleteWork(work.id)}\r\n                      >\r\n                        <AiFillDelete size={20} color=\"#FF6969\" />\r\n                      </button>\r\n                      <button\r\n                        className=\"expand-bt\"\r\n                        onClick={() => toggleExpand(work.id)}\r\n                      >\r\n                        {expandedWorkIds.includes(work.id) ? (\r\n                          <FaChevronUp />\r\n                        ) : (\r\n                          <FaChevronDown />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"progress-container progress-container-full\">\r\n                    <div className=\"progress-bar\">\r\n                      <div\r\n                        className=\"progress\"\r\n                        style={{\r\n                          width: `${progress}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <span className=\"progress-percentage\">{progress}%</span>\r\n                  </div>\r\n                </li>,\r\n              ];\r\n\r\n              if (\r\n                expandedWorkIds.includes(work.id) &&\r\n                work.subWorks &&\r\n                work.subWorks.length > 0\r\n              ) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  const taskKey = `${work.id}-${index}`;\r\n                  const isTaskCompleted = taskCompletionStatus[taskKey];\r\n\r\n                  workElements.push(\r\n                    <li key={taskKey} className=\"task-item\">\r\n                      <div className=\"task-details\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!isTaskCompleted}\r\n                          onChange={() => toggleTaskCompletion(work.id, index)}\r\n                        />\r\n                        <span\r\n                          style={{\r\n                            textDecoration: isTaskCompleted\r\n                              ? \"line-through\"\r\n                              : \"none\",\r\n                          }}\r\n                        >\r\n                          {task.name} - Description: {task.description}, Time: {task.startTime} - {task.endTime}, Repeat: {task.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${task.customRepeat.repeatEvery} ${\r\n                                task.customRepeat.repeatUnit\r\n                              }${\r\n                                task.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(\r\n                                      task.customRepeat.startDate\r\n                                    ).toLocaleDateString(\"vi-VN\")}`\r\n                                  : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\r\n                                      \", \"\r\n                                    )}`\r\n                              }`\r\n                            : task.repeatOption}\r\n                        </span>\r\n                        <button\r\n                          className=\"task-delete-icon\"\r\n                          onClick={() => handleDeleteTask(work.id, index)}\r\n                        >\r\n                          <AiFillDelete size={14} className=\"task-delete-icon-style\" />\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}