{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500); // Initial Pomodoro time\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const timelineRef = useRef(null);\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\n  const [noteContent, setNoteContent] = useState(\"\");\n  const [isFreeMode, setIsFreeMode] = useState(false);\n  const [freeModeTime, setFreeModeTime] = useState(0);\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\");\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0);\n  const [isTaskSelected, setIsTaskSelected] = useState(false);\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false);\n  const [lastTaskStartTime, setLastTaskStartTime] = useState(null);\n  const intervalRef = useRef(null);\n\n  // Toggle between Free mode and Pomodoro/structured mode\n  const toggleFreeMode = useCallback(() => {\n    setIsFreeMode(!isFreeMode);\n    if (!isFreeMode) {\n      // Entering free mode\n      setFreeModeTime(0);\n      setIsRunning(false);\n    } else {\n      // Exiting free mode, return to Pomodoro\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft);\n    }\n  }, [isFreeMode, isFocusPhase, timeLeft]);\n\n  // Handle the completion of a Pomodoro cycle\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    setIsFocusPhase(prev => !prev);\n    if (isFocusPhase) {\n      setCycle(prev => prev + 1);\n      setTimeLeft((cycle + 1) % 4 === 0 ? 900 : 300);\n      toast.info((cycle + 1) % 4 === 0 ? \"Long Break! Take a 15-minute rest.\" : \"Short Break! Take a 5-minute rest.\");\n    } else {\n      setTimeLeft(1500);\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  }, [cycle, isFocusPhase, toast]);\n\n  // Start or pause the current selected task\n  const handleStartPause = () => {\n    if (isRunning) {\n      clearInterval(intervalRef.current);\n      if (selectedTaskName && lastTaskStartTime) {\n        const elapsedTime = Math.floor((Date.now() - lastTaskStartTime) / 1000);\n        updateTaskTimeCount(selectedTaskName, elapsedTime);\n      }\n      setIsRunning(false);\n      setLastTaskStartTime(null);\n    } else {\n      setLastTaskStartTime(Date.now());\n      intervalRef.current = setInterval(() => {\n        updateTaskTimeCount(selectedTaskName, 1);\n      }, 1000);\n      setIsRunning(true);\n    }\n  };\n\n  // Update the time count for a specific task\n  const updateTaskTimeCount = (taskName, seconds) => {\n    setTodayDataTimeCount(prev => {\n      const updated = [...prev];\n      const taskIndex = updated.findIndex(task => task.name === taskName);\n      if (taskIndex >= 0) {\n        updated[taskIndex].realTimeTaskCount += seconds;\n      }\n      return updated;\n    });\n  };\n\n  // React to changes in timeLeft, particularly to handle zero\n  useEffect(() => {\n    if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n  }, [timeLeft, handlePomodoroComplete]);\n\n  // Effect to handle real-time updates\n  useEffect(() => {\n    if (isRunning && selectedTaskName) {\n      intervalRef.current = setInterval(() => {\n        setTodayDataTimeCount(prev => {\n          const updated = [...prev];\n          const taskIndex = updated.findIndex(task => task.name === selectedTaskName);\n          if (taskIndex >= 0) {\n            updated[taskIndex].realTimeTaskCount += 1;\n          }\n          return updated;\n        });\n      }, 1000);\n    } else {\n      clearInterval(intervalRef.current);\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, selectedTaskName]);\n\n  // Calculate tasks for today from works\n  useEffect(() => {\n    const calculateTasksForToday = () => {\n      const today = new Date();\n      const dailyTasks = Object.values(works).flat().reduce((acc, work) => {\n        work.subWorks.forEach(task => {\n          if (new Date(work.startDate) <= today && today <= new Date(work.endDate)) {\n            const taskTimeSlot = calculateTimeSlot(task.startTime, task.endTime);\n            acc.push({\n              name: task.name,\n              date: today.toDateString(),\n              realTimeTaskCount: 0,\n              timeSlot: taskTimeSlot,\n              status: \"pending-today\"\n            });\n          }\n        });\n        return acc;\n      }, []);\n      setTasksForToday(dailyTasks);\n    };\n    if (mode === \"auto\") {\n      calculateTasksForToday();\n    }\n  }, [mode, works]);\n\n  // Utility functions\n  const calculateTimeSlot = (startTime, endTime) => {\n    const [startHour, startMinute] = startTime.split(\":\").map(Number);\n    const [endHour, endMinute] = endTime.split(\":\").map(Number);\n    const start = new Date().setHours(startHour, startMinute, 0, 0);\n    const end = new Date().setHours(endHour, endMinute, 0, 0);\n    const duration = (end - start) / 1000;\n    return formatTime(duration);\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"today-data-toggle\",\n          onClick: () => setIsTodayDataVisible(prev => !prev),\n          children: \"TODAY-DataTimeCount \\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this), isTodayDataVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today-data-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Today: \", new Date().toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: todayDataTimeCount.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [task.name, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [formatTime(task.realTimeTaskCount), \" / \", task.timeSlot]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-task\",\n        children: isTaskSelected ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatTime(countdownTimeTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select task!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"focus-modes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n          onClick: () => setMode(\"auto\"),\n          children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            setMode(\"manual\");\n            openManualSelectModal();\n          },\n          children: \"T\\u1EF1 ch\\u1ECDn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n          onClick: () => setMode(\"free\"),\n          children: \"T\\u1EF1 do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        ref: timelineRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-line\",\n            style: {\n              \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\n              top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 25\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-block\",\n            style: {\n              top: `${hour * 60}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-marker\",\n              children: hour < 10 ? `0${hour}:00` : `${hour}:00`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), mode === \"auto\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"T\\u1ED5ng s\\u1ED1 task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: tasksForToday.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), tasksForToday.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TimeSlot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasksForToday.map((task, index) => {\n              const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `task-list-item ${selectedTaskName === task.name ? \"selected\" : \"\"}`,\n                onClick: () => handleSelectTaskBlock(task.name),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.workName || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [task.startTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  }), \" \", \"-\", \" \", task.endTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: timeSlot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Task Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => alert(\"Daily form is not implemented yet.\"),\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => setNoteContent(\"\"),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"note-input\",\n            className: \"note-label\",\n            children: \"Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"note-input\",\n            className: \"note-input\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value),\n            placeholder: \"Write your notes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), mode === \"manual\" && currentTaskManual && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task hi\\u1EC7n t\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Th\\u1EDDi gian:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.startTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        }), \" \", \"-\", \" \", currentTaskManual.endTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ng\\xE0y Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workStartDate, \" -\", \" \", currentTaskManual.workEndDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timeslot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), \" \", calculateTimeSlot(new Date(currentTaskManual.startTime), new Date(currentTaskManual.endTime))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro-timer\",\n      style: {\n        backgroundColor: getPomodoroBackground()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"swap-icon\",\n          onClick: toggleFreeMode,\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-modes\",\n          children: !isFreeMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"pomodoro\");\n                handleModeChange(\"pomodoro\");\n              },\n              children: \"Pomodoro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"short-break\");\n                handleModeChange(\"short-break\");\n              },\n              children: \"Short-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"long-break\");\n                handleModeChange(\"long-break\");\n              },\n              children: \"Long-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`,\n            onClick: () => {\n              if (!isFreeMode) {\n                toggleFreeMode();\n              } else {\n                setFreeModeTime(0);\n              }\n            },\n            children: \"Stopwatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(isFreeMode ? freeModeTime : timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 3\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\"),\n          disabled: !isTaskSelected,\n          children: isRunning ? \"Tạm dừng\" : \"Bắt đầu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 3\n        }, this), isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFreeModeTime(0),\n          children: \"K\\u1EBFt th\\xFAc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 7\n        }, this), !isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkip,\n          children: \"B\\u1ECF qua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 1\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(tempWork === null || tempWork === void 0 ? void 0 : tempWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ng\\xE0y: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"focus-button\",\n              onClick: handleManualSelectionDone,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-close\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 15\n          }, this), tempWork && tempWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tempWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(tempTask === null || tempTask === void 0 ? void 0 : tempTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\u1EDDi gian: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 480,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 21\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u1ECDn m\\u1ED9t Work \\u0111\\u1EC3 xem Task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"s9AytP5Irx1Up2eEB+rGZtWQUM4=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTaskManual","setCurrentTaskManual","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timelineRef","selectedTaskName","setSelectedTaskName","noteContent","setNoteContent","isFreeMode","setIsFreeMode","freeModeTime","setFreeModeTime","currentMode","setCurrentMode","countdownTimeTask","setCountdownTimeTask","isTaskSelected","setIsTaskSelected","todayDataTimeCount","setTodayDataTimeCount","isTodayDataVisible","setIsTodayDataVisible","lastTaskStartTime","setLastTaskStartTime","intervalRef","toggleFreeMode","handlePomodoroComplete","prev","info","success","handleStartPause","clearInterval","current","elapsedTime","Math","floor","now","updateTaskTimeCount","setInterval","taskName","seconds","updated","taskIndex","findIndex","task","name","realTimeTaskCount","calculateTasksForToday","today","dailyTasks","Object","values","flat","reduce","acc","work","subWorks","forEach","startDate","endDate","taskTimeSlot","calculateTimeSlot","startTime","endTime","push","date","toDateString","timeSlot","status","startHour","startMinute","split","map","Number","endHour","endMinute","start","setHours","end","duration","formatTime","hours","minutes","secs","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","openManualSelectModal","ref","style","getHours","getMinutes","top","Array","from","length","_","hour","renderTaskOnTimeline","handleSelectTaskBlock","workName","toLocaleTimeString","minute","hour12","alert","htmlFor","id","value","onChange","e","target","placeholder","workStartDate","workEndDate","backgroundColor","getPomodoroBackground","handleModeChange","error","disabled","handleSkip","handleManualSelectWork","handleManualSelectionDone","closeModal","handleManualSelectTask","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500); // Initial Pomodoro time\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const timelineRef = useRef(null);\r\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [isFreeMode, setIsFreeMode] = useState(false);\r\n  const [freeModeTime, setFreeModeTime] = useState(0);\r\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\");\r\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0);\r\n  const [isTaskSelected, setIsTaskSelected] = useState(false);\r\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\r\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false);\r\n  const [lastTaskStartTime, setLastTaskStartTime] = useState(null);\r\n  const intervalRef = useRef(null);\r\n\r\n  // Toggle between Free mode and Pomodoro/structured mode\r\n  const toggleFreeMode = useCallback(() => {\r\n    setIsFreeMode(!isFreeMode);\r\n    if (!isFreeMode) {\r\n      // Entering free mode\r\n      setFreeModeTime(0);\r\n      setIsRunning(false);\r\n    } else {\r\n      // Exiting free mode, return to Pomodoro\r\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft);\r\n    }\r\n  }, [isFreeMode, isFocusPhase, timeLeft]);\r\n\r\n  // Handle the completion of a Pomodoro cycle\r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    setIsFocusPhase((prev) => !prev);\r\n    if (isFocusPhase) {\r\n      setCycle((prev) => prev + 1);\r\n      setTimeLeft((cycle + 1) % 4 === 0 ? 900 : 300);\r\n      toast.info((cycle + 1) % 4 === 0 ? \"Long Break! Take a 15-minute rest.\" : \"Short Break! Take a 5-minute rest.\");\r\n    } else {\r\n      setTimeLeft(1500);\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  }, [cycle, isFocusPhase, toast]);\r\n\r\n  // Start or pause the current selected task\r\n  const handleStartPause = () => {\r\n    if (isRunning) {\r\n      clearInterval(intervalRef.current);\r\n      if (selectedTaskName && lastTaskStartTime) {\r\n        const elapsedTime = Math.floor((Date.now() - lastTaskStartTime) / 1000);\r\n        updateTaskTimeCount(selectedTaskName, elapsedTime);\r\n      }\r\n      setIsRunning(false);\r\n      setLastTaskStartTime(null);\r\n    } else {\r\n      setLastTaskStartTime(Date.now());\r\n      intervalRef.current = setInterval(() => {\r\n        updateTaskTimeCount(selectedTaskName, 1);\r\n      }, 1000);\r\n      setIsRunning(true);\r\n    }\r\n  };\r\n\r\n  // Update the time count for a specific task\r\n  const updateTaskTimeCount = (taskName, seconds) => {\r\n    setTodayDataTimeCount((prev) => {\r\n      const updated = [...prev];\r\n      const taskIndex = updated.findIndex((task) => task.name === taskName);\r\n      if (taskIndex >= 0) {\r\n        updated[taskIndex].realTimeTaskCount += seconds;\r\n      }\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  // React to changes in timeLeft, particularly to handle zero\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      handlePomodoroComplete();\r\n    }\r\n  }, [timeLeft, handlePomodoroComplete]);\r\n\r\n  // Effect to handle real-time updates\r\n  useEffect(() => {\r\n    if (isRunning && selectedTaskName) {\r\n      intervalRef.current = setInterval(() => {\r\n        setTodayDataTimeCount((prev) => {\r\n          const updated = [...prev];\r\n          const taskIndex = updated.findIndex((task) => task.name === selectedTaskName);\r\n          if (taskIndex >= 0) {\r\n            updated[taskIndex].realTimeTaskCount += 1;\r\n          }\r\n          return updated;\r\n        });\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(intervalRef.current);\r\n    }\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [isRunning, selectedTaskName]);\r\n\r\n  // Calculate tasks for today from works\r\n  useEffect(() => {\r\n    const calculateTasksForToday = () => {\r\n      const today = new Date();\r\n      const dailyTasks = Object.values(works).flat().reduce((acc, work) => {\r\n        work.subWorks.forEach((task) => {\r\n          if (new Date(work.startDate) <= today && today <= new Date(work.endDate)) {\r\n            const taskTimeSlot = calculateTimeSlot(task.startTime, task.endTime);\r\n            acc.push({\r\n              name: task.name,\r\n              date: today.toDateString(),\r\n              realTimeTaskCount: 0,\r\n              timeSlot: taskTimeSlot,\r\n              status: \"pending-today\"\r\n            });\r\n          }\r\n        });\r\n        return acc;\r\n      }, []);\r\n      setTasksForToday(dailyTasks);\r\n    };\r\n\r\n    if (mode === \"auto\") {\r\n      calculateTasksForToday();\r\n    }\r\n  }, [mode, works]);\r\n\r\n  // Utility functions\r\n  const calculateTimeSlot = (startTime, endTime) => {\r\n    const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n    const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n    const start = new Date().setHours(startHour, startMinute, 0, 0);\r\n    const end = new Date().setHours(endHour, endMinute, 0, 0);\r\n    const duration = (end - start) / 1000;\r\n    return formatTime(duration);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"container-row\">\r\n      <div className=\"today-data-container\">\r\n        <button\r\n          className=\"today-data-toggle\"\r\n          onClick={() => setIsTodayDataVisible((prev) => !prev)}\r\n        >\r\n          TODAY-DataTimeCount ▼\r\n        </button>\r\n        {isTodayDataVisible && (\r\n          <div className=\"today-data-content\">\r\n            <p>Today: {new Date().toDateString()}</p>\r\n            <ul>\r\n              {todayDataTimeCount.map((task, index) => (\r\n                <li key={index}>\r\n                  {task.name}{\" \"}\r\n                  <strong>\r\n                    {formatTime(task.realTimeTaskCount)} / {task.timeSlot}\r\n                  </strong>{\" \"}\r\n                  <span>{task.status}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n  <div className=\"countdown-task\">\r\n    {isTaskSelected ? (\r\n      <p>{formatTime(countdownTimeTask)}</p>\r\n    ) : (\r\n      <p>Select task!</p>\r\n    )}\r\n  </div>\r\n\r\n  <div className=\"focus-modes\">\r\n    <button\r\n      className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n      onClick={() => setMode(\"auto\")}\r\n    >\r\n      Tự động\r\n    </button>\r\n    <button\r\n      className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n      onClick={() => {\r\n        setMode(\"manual\");\r\n        openManualSelectModal();\r\n      }}\r\n    >\r\n      Tự chọn\r\n    </button>\r\n    <button\r\n      className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n      onClick={() => setMode(\"free\")}\r\n    >\r\n      Tự do\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n      <div className=\"focus-content\">\r\n        <div className=\"timeline-container\" ref={timelineRef}>\r\n          <div className=\"timeline\">\r\n            <div\r\n              className=\"current-time-line\"\r\n              style={{\r\n                \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\r\n                top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`,\r\n              }}\r\n            ></div>\r\n            {Array.from({ length: 25 }).map((_, hour) => (\r\n              <div key={hour} className=\"hour-block\" style={{ top: `${hour * 60}px` }}>\r\n                <div className=\"hour-marker\">\r\n                  {hour < 10 ? `0${hour}:00` : `${hour}:00`}\r\n                </div>\r\n                <div className=\"hour-divider\"></div>\r\n              </div>\r\n            ))}\r\n            {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n          </div>\r\n        </div>\r\n                    {mode === \"auto\" && (\r\n          <div className=\"task-list\">\r\n          <h2>Today Task</h2>\r\n          <p>\r\n            Tổng số task: <strong>{tasksForToday.length}</strong>\r\n          </p>\r\n          {tasksForToday.length > 0 ? (\r\n            <table className=\"task-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Work</th>\r\n                  <th>Time</th>\r\n                  <th>TimeSlot</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasksForToday.map((task, index) => {\r\n                  const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\r\n                  return (\r\n                    <tr\r\n                      key={index}\r\n                      className={`task-list-item ${\r\n                        selectedTaskName === task.name ? \"selected\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSelectTaskBlock(task.name)}\r\n                    >\r\n                      <td>{task.name}</td>\r\n                      <td>{task.workName || \"N/A\"}</td>\r\n                      <td>\r\n                        {task.startTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}{\" \"}\r\n                        -{\" \"}\r\n                        {task.endTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}\r\n                      </td>\r\n                      <td>{timeSlot}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Empty Task Today</p>\r\n          )}\r\n        </div>\r\n        \r\n        )}\r\n        <div className=\"note-container\">\r\n          <div className=\"note-header\">\r\n            <button\r\n              className=\"note-button\"\r\n              onClick={() => alert(\"Daily form is not implemented yet.\")}\r\n            >\r\n              Daily\r\n            </button>\r\n            <button className=\"note-button\" onClick={() => setNoteContent(\"\")}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n          <div className=\"note-body\">\r\n            <label htmlFor=\"note-input\" className=\"note-label\">Note</label>\r\n            <textarea\r\n              id=\"note-input\"\r\n              className=\"note-input\"\r\n              value={noteContent}\r\n              onChange={(e) => setNoteContent(e.target.value)}\r\n              placeholder=\"Write your notes here...\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {mode === \"manual\" && currentTaskManual && (\r\n        <div className=\"task-select\">\r\n          <h2>Task hiện tại</h2>\r\n          <p>\r\n            <strong>Work:</strong> {currentTaskManual.workName}\r\n          </p>\r\n          <p>\r\n            <strong>Task:</strong> {currentTaskManual.name}\r\n          </p>\r\n          <p>\r\n            <strong>Thời gian:</strong>{\" \"}\r\n            {currentTaskManual.startTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}{\" \"}\r\n            -{\" \"}\r\n            {currentTaskManual.endTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Ngày Work:</strong> {currentTaskManual.workStartDate} -{\" \"}\r\n            {currentTaskManual.workEndDate}\r\n          </p>\r\n          <p>\r\n            <strong>Timeslot:</strong>{\" \"}\r\n            {calculateTimeSlot(\r\n              new Date(currentTaskManual.startTime),\r\n              new Date(currentTaskManual.endTime)\r\n            )}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n\r\n<div className=\"pomodoro-timer\" style={{ backgroundColor: getPomodoroBackground() }}>\r\n  <div className=\"pomodoro-header\">\r\n    <span className=\"swap-icon\" onClick={toggleFreeMode}>\r\n      🔄\r\n    </span>\r\n    <div className=\"pomodoro-modes\">\r\n  {!isFreeMode ? (\r\n    <>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"pomodoro\");\r\n          handleModeChange(\"pomodoro\");\r\n        }}\r\n      >\r\n        Pomodoro\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"short-break\");\r\n          handleModeChange(\"short-break\");\r\n        }}\r\n      >\r\n        Short-break\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"long-break\");\r\n          handleModeChange(\"long-break\");\r\n        }}\r\n      >\r\n        Long-break\r\n      </span>\r\n    </>\r\n  ) : (\r\n    <span\r\n  className={`pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`}\r\n  onClick={() => {\r\n    if (!isFreeMode) {\r\n      toggleFreeMode();\r\n    } else {\r\n      setFreeModeTime(0);\r\n    }\r\n  }}\r\n>\r\n  Stopwatch\r\n</span>\r\n\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n  <p>{formatTime(isFreeMode ? freeModeTime : timeLeft)}</p> {/* Hiển thị thời gian */}\r\n  <div className=\"timer-controls\">\r\n  <button\r\n  onClick={isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\")}\r\n  disabled={!isTaskSelected}\r\n>\r\n  {isRunning ? \"Tạm dừng\" : \"Bắt đầu\"}\r\n</button>\r\n\r\n    {isFreeMode && (\r\n      <button onClick={() => setFreeModeTime(0)}>Kết thúc</button>\r\n    )}\r\n    {!isFreeMode && <button onClick={handleSkip}>Bỏ qua</button>}\r\n  </div>\r\n</div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Danh sách Work</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${\r\n                    tempWork?.id === work.id ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>\r\n                    Ngày: {work.startDate} - {work.endDate}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"focus-button\" onClick={handleManualSelectionDone}>\r\n                  Done\r\n                </button>\r\n                <button className=\"modal-close\" onClick={closeModal}>\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <h2>Danh sách Task</h2>\r\n              {tempWork && tempWork.subWorks ? (\r\n                <>\r\n                  {tempWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${\r\n                        tempTask?.name === task.name ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>\r\n                        Thời gian: {task.startTime} - {task.endTime}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>Chọn một Work để xem Task.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}