{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\n  const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\n  const [noteContent, setNoteContent] = useState(\"\");\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\n\n  // Pomodoro logic\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n  const toggleFreeMode = () => {\n    if (isFreeMode) {\n      // Chuyển về chế độ Pomodoro\n      setIsFreeMode(false);\n      setFreeModeTime(0); // Reset thời gian tự do\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\n    } else {\n      // Chuyển sang chế độ tự do\n      setIsFreeMode(true);\n      setIsRunning(false); // Dừng đếm trước khi bắt đầu đếm tự do\n    }\n  };\n\n  // Free count time\n  useEffect(() => {\n    let freeModeTimer;\n    if (isFreeMode && isRunning) {\n      freeModeTimer = setInterval(() => {\n        setFreeModeTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(freeModeTimer);\n  }, [isFreeMode, isRunning]);\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    if (isFocusPhase) {\n      setIsFocusPhase(false);\n      setCycle(prev => prev + 1);\n      if ((cycle + 1) % 4 === 0) {\n        setTimeLeft(900);\n        toast.info(\"Long Break! Take a 15-minute rest.\");\n      } else {\n        setTimeLeft(300);\n        toast.info(\"Short Break! Take a 5-minute rest.\");\n      }\n    } else {\n      setIsFocusPhase(true);\n      setTimeLeft(1500);\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  }, [cycle, isFocusPhase, toast]);\n  const handleStartPause = () => {\n    if (!isRunning) {\n      // Đảm bảo chế độ hiển thị đúng trước khi bắt đầu\n      if (timeLeft === 300) {\n        setIsFocusPhase(false); // Short Break\n      } else if (timeLeft === 900) {\n        setIsFocusPhase(false); // Long Break\n      } else if (timeLeft === 1500 || isFocusPhase) {\n        setIsFocusPhase(true); // Pomodoro\n      }\n    }\n    setIsRunning(prev => !prev);\n  };\n  const handleSkip = () => {\n    setTimeLeft(0);\n  };\n  const handleSelectTaskBlock = taskName => {\n    setSelectedTaskName(prev => prev === taskName ? null : taskName); // Chọn hoặc bỏ chọn\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 6000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Tự động cuộn đến current-time-line khi mở trang\n  useEffect(() => {\n    if (timelineRef.current) {\n      const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\n      timelineRef.current.scrollTo({\n        top: currentTimePosition - 50,\n        // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\n        behavior: \"smooth\"\n      });\n    }\n  }, [currentTime]);\n\n  // Calculate tasks for today\n  const calculateTasksForToday = useCallback(() => {\n    const today = new Date();\n    const tasks = [];\n    Object.values(works).flat().forEach(work => {\n      const workStartDate = new Date(work.startDate);\n      const workEndDate = new Date(work.endDate);\n      work.subWorks.forEach(task => {\n        const {\n          startTime,\n          endTime,\n          repeatOption,\n          customRepeat = {}\n        } = task;\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\n        let validDates = [];\n        if (repeatOption === \"Không lặp lại\") {\n          validDates = [workStartDate];\n        } else if (repeatOption === \"Hàng ngày\") {\n          let currentDate = new Date(workStartDate);\n          while (currentDate <= workEndDate) {\n            validDates.push(new Date(currentDate));\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n        } else if (repeatOption === \"Tùy chỉnh\") {\n          const {\n            repeatEvery = 1,\n            repeatUnit = \"ngày\",\n            startDate,\n            repeatDays = []\n          } = customRepeat;\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\n          let currentDate = new Date(taskStartDate);\n          if (repeatUnit === \"ngày\") {\n            while (currentDate <= workEndDate) {\n              validDates.push(new Date(currentDate));\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\n            }\n          } else if (repeatUnit === \"tuần\") {\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\n            while (currentDate <= workEndDate) {\n              const dayOfWeek = dayMapping[currentDate.getDay()];\n              if (repeatDays.includes(dayOfWeek)) {\n                validDates.push(new Date(currentDate));\n              }\n              currentDate.setDate(currentDate.getDate() + 1);\n            }\n          }\n        }\n        validDates.forEach(date => {\n          if (date.toDateString() === today.toDateString()) {\n            tasks.push({\n              ...task,\n              workName: work.name,\n              startTime: new Date(today.setHours(startHour, startMinute)),\n              endTime: new Date(today.setHours(endHour, endMinute))\n            });\n          }\n        });\n      });\n    });\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\n    setTasksForToday(sortedTasks);\n  }, [works]);\n  useEffect(() => {\n    if (mode === \"auto\") {\n      calculateTasksForToday();\n    }\n  }, [mode, calculateTasksForToday]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const now = new Date();\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\n        calculateTasksForToday(); // Làm mới danh sách task\n      }\n    }, 60000); // Kiểm tra mỗi phút\n    return () => clearInterval(timer);\n  }, [calculateTasksForToday]);\n  const renderTaskOnTimeline = task => {\n    const taskStart = task.startTime;\n    const taskEnd = task.endTime;\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\n\n    // Kiểm tra trạng thái của task\n    const isSelected = selectedTaskName === task.name;\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-block ${isSelected ? \"selected\" : \"\"} ${isDimmed ? \"dimmed\" : \"\"}`,\n      style: {\n        top: `${startMinutes}px`,\n        height: `${endMinutes - startMinutes}px`\n      },\n      onClick: () => handleSelectTaskBlock(task.name),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-name\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"select-task-button\",\n        children: isSelected ? \"Deselect\" : \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, task.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  };\n  const calculateTimeSlot = (startTime, endTime) => {\n    const diff = new Date(endTime - startTime);\n    const hours = diff.getUTCHours(); // Lấy giờ\n    const minutes = diff.getUTCMinutes(); // Lấy phút\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`; // Định dạng hh:mm\n  };\n  const getPomodoroBackground = () => {\n    if (isFreeMode) return \"#f9f9f9\"; // Chế độ tự do\n    if (timeLeft === 300) return \"#a8d5ba\"; // Short Break\n    if (timeLeft === 900) return \"#f6e58d\"; // Long Break\n    if (timeLeft === 1500 || isFocusPhase) return \"#56daeb\"; // Pomodoro\n    return \"#f9f9f9\"; // Màu mặc định\n  };\n  const handleModeChange = mode => {\n    if (mode === \"pomodoro\") {\n      setIsFocusPhase(true);\n      setTimeLeft(1500); // Reset về 25 phút\n      setIsRunning(false); // Dừng đếm\n    } else if (mode === \"short-break\") {\n      setIsFocusPhase(false);\n      setTimeLeft(300); // Reset về 5 phút\n      setIsRunning(false);\n    } else if (mode === \"long-break\") {\n      setIsFocusPhase(false);\n      setTimeLeft(900); // Reset về 15 phút\n      setIsRunning(false);\n    }\n  };\n  const openManualSelectModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(true);\n  };\n  const handleManualSelectWork = work => {\n    setTempWork(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === work.id ? null : work);\n    setTempTask(null);\n  };\n  const handleManualSelectTask = task => {\n    setTempTask(prev => (prev === null || prev === void 0 ? void 0 : prev.name) === task.name ? null : task);\n  };\n  const handleManualSelectionDone = () => {\n    setSelectedWork(tempWork);\n    setSelectedTask(tempTask);\n    setCurrentTaskManual(tempTask ? {\n      ...tempTask,\n      workName: tempWork.name,\n      workStartDate: tempWork.startDate,\n      workEndDate: tempWork.endDate\n    } : null);\n    setIsModalOpen(false);\n  };\n  const closeModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-modes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"auto\"),\n        children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n        onClick: () => {\n          setMode(\"manual\");\n          openManualSelectModal();\n        },\n        children: \"T\\u1EF1 ch\\u1ECDn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"free\"),\n        children: \"T\\u1EF1 do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        ref: timelineRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-line\",\n            style: {\n              \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\n              top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 25\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-block\",\n            style: {\n              top: `${hour * 60}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-marker\",\n              children: hour < 10 ? `0${hour}:00` : `${hour}:00`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), mode === \"auto\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"T\\u1ED5ng s\\u1ED1 task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: tasksForToday.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), tasksForToday.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TimeSlot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasksForToday.map((task, index) => {\n              const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `task-list-item ${selectedTaskName === task.name ? \"selected\" : \"\"}`,\n                onClick: () => handleSelectTaskBlock(task.name),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.workName || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [task.startTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  }), \" \", \"-\", \" \", task.endTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: timeSlot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Task Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => alert(\"Daily form is not implemented yet.\"),\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => setNoteContent(\"\"),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"note-input\",\n            className: \"note-label\",\n            children: \"Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"note-input\",\n            className: \"note-input\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value),\n            placeholder: \"Write your notes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this), mode === \"manual\" && currentTaskManual && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task hi\\u1EC7n t\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Th\\u1EDDi gian:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.startTime, \" -\", \" \", currentTaskManual.endTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ng\\xE0y Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workStartDate, \" -\", \" \", currentTaskManual.workEndDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro-timer\",\n      style: {\n        backgroundColor: getPomodoroBackground()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"swap-icon\",\n          onClick: toggleFreeMode,\n          children: \"\\uD83D\\uDD04 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-modes\",\n          children: !isFreeMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${isFocusPhase ? \"active\" : \"\"}`,\n              onClick: () => handleModeChange(\"pomodoro\"),\n              children: \"Pomodoro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${!isFocusPhase && timeLeft === 300 ? \"active\" : \"\"}`,\n              onClick: () => handleModeChange(\"short-break\"),\n              children: \"Short-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${!isFocusPhase && timeLeft === 900 ? \"active\" : \"\"}`,\n              onClick: () => handleModeChange(\"long-break\"),\n              children: \"Long-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pomodoro-mode active\",\n            children: \"Stopwatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(isFreeMode ? freeModeTime : timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 3\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartPause,\n          children: isRunning ? \"Tạm dừng\" : \"Bắt đầu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 5\n        }, this), isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFreeModeTime(0),\n          children: \"K\\u1EBFt th\\xFAc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 7\n        }, this), !isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkip,\n          children: \"B\\u1ECF qua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 1\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(tempWork === null || tempWork === void 0 ? void 0 : tempWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ng\\xE0y: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"focus-button\",\n              onClick: handleManualSelectionDone,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 543,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-close\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this), tempWork && tempWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tempWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(tempTask === null || tempTask === void 0 ? void 0 : tempTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\u1EDDi gian: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 554,\n              columnNumber: 21\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u1ECDn m\\u1ED9t Work \\u0111\\u1EC3 xem Task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"kWUjAnUf7KBNtyfAhEOHhLR75SE=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTaskManual","setCurrentTaskManual","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timelineRef","selectedTaskBlock","setSelectedTaskBlock","selectedTaskName","setSelectedTaskName","noteContent","setNoteContent","isFreeMode","setIsFreeMode","freeModeTime","setFreeModeTime","timer","setInterval","prev","handlePomodoroComplete","clearInterval","toggleFreeMode","freeModeTimer","info","success","handleStartPause","handleSkip","handleSelectTaskBlock","taskName","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","current","currentTimePosition","getHours","getMinutes","scrollTo","top","behavior","calculateTasksForToday","today","tasks","Object","values","flat","forEach","work","workStartDate","startDate","workEndDate","endDate","subWorks","task","startTime","endTime","repeatOption","customRepeat","startHour","startMinute","split","map","Number","endHour","endMinute","validDates","currentDate","push","setDate","getDate","repeatEvery","repeatUnit","repeatDays","taskStartDate","dayMapping","dayOfWeek","getDay","includes","date","toDateString","workName","name","setHours","sortedTasks","sort","a","b","now","renderTaskOnTimeline","taskStart","taskEnd","startMinutes","endMinutes","isSelected","isDimmed","className","style","height","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateTimeSlot","diff","hours","getUTCHours","getUTCMinutes","getPomodoroBackground","handleModeChange","openManualSelectModal","handleManualSelectWork","id","handleManualSelectTask","handleManualSelectionDone","closeModal","ref","Array","from","length","_","hour","index","timeSlot","toLocaleTimeString","minute","hour12","alert","htmlFor","value","onChange","e","target","placeholder","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\r\n  const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\r\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\r\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\r\n\r\n\r\n\r\n  // Pomodoro logic\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      handlePomodoroComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const toggleFreeMode = () => {\r\n    if (isFreeMode) {\r\n      // Chuyển về chế độ Pomodoro\r\n      setIsFreeMode(false);\r\n      setFreeModeTime(0); // Reset thời gian tự do\r\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\r\n    } else {\r\n      // Chuyển sang chế độ tự do\r\n      setIsFreeMode(true);\r\n      setIsRunning(false); // Dừng đếm trước khi bắt đầu đếm tự do\r\n    }\r\n  };\r\n  \r\n\r\n  // Free count time\r\n  useEffect(() => {\r\n    let freeModeTimer;\r\n    if (isFreeMode && isRunning) {\r\n      freeModeTimer = setInterval(() => {\r\n        setFreeModeTime((prev) => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(freeModeTimer);\r\n  }, [isFreeMode, isRunning]);\r\n  \r\n\r\n  \r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    if (isFocusPhase) {\r\n      setIsFocusPhase(false);\r\n      setCycle((prev) => prev + 1);\r\n      if ((cycle + 1) % 4 === 0) {\r\n        setTimeLeft(900);\r\n        toast.info(\"Long Break! Take a 15-minute rest.\");\r\n      } else {\r\n        setTimeLeft(300);\r\n        toast.info(\"Short Break! Take a 5-minute rest.\");\r\n      }\r\n    } else {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500);\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  }, [cycle, isFocusPhase, toast]);\r\n\r\n\r\n  const handleStartPause = () => {\r\n    if (!isRunning) {\r\n      // Đảm bảo chế độ hiển thị đúng trước khi bắt đầu\r\n      if (timeLeft === 300) {\r\n        setIsFocusPhase(false); // Short Break\r\n      } else if (timeLeft === 900) {\r\n        setIsFocusPhase(false); // Long Break\r\n      } else if (timeLeft === 1500 || isFocusPhase) {\r\n        setIsFocusPhase(true); // Pomodoro\r\n      }\r\n    }\r\n    setIsRunning((prev) => !prev);\r\n  };\r\n  \r\n\r\n  const handleSkip = () => {\r\n    setTimeLeft(0);\r\n  };\r\n\r\n  const handleSelectTaskBlock = (taskName) => {\r\n    setSelectedTaskName((prev) => (prev === taskName ? null : taskName)); // Chọn hoặc bỏ chọn\r\n  };\r\n  \r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Update current time every minute\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 6000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Tự động cuộn đến current-time-line khi mở trang\r\nuseEffect(() => {\r\n  if (timelineRef.current) {\r\n    const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\r\n    timelineRef.current.scrollTo({\r\n      top: currentTimePosition - 50, // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n}, [currentTime]);\r\n\r\n\r\n  // Calculate tasks for today\r\n  const calculateTasksForToday = useCallback(() => {\r\n    const today = new Date();\r\n    const tasks = [];\r\n\r\n    Object.values(works).flat().forEach((work) => {\r\n      const workStartDate = new Date(work.startDate);\r\n      const workEndDate = new Date(work.endDate);\r\n\r\n      work.subWorks.forEach((task) => {\r\n        const { startTime, endTime, repeatOption, customRepeat = {} } = task;\r\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n        let validDates = [];\r\n        if (repeatOption === \"Không lặp lại\") {\r\n          validDates = [workStartDate];\r\n        } else if (repeatOption === \"Hàng ngày\") {\r\n          let currentDate = new Date(workStartDate);\r\n          while (currentDate <= workEndDate) {\r\n            validDates.push(new Date(currentDate));\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n          }\r\n        } else if (repeatOption === \"Tùy chỉnh\") {\r\n          const { repeatEvery = 1, repeatUnit = \"ngày\", startDate, repeatDays = [] } = customRepeat;\r\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\r\n          let currentDate = new Date(taskStartDate);\r\n\r\n          if (repeatUnit === \"ngày\") {\r\n            while (currentDate <= workEndDate) {\r\n              validDates.push(new Date(currentDate));\r\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\r\n            }\r\n          } else if (repeatUnit === \"tuần\") {\r\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n            while (currentDate <= workEndDate) {\r\n              const dayOfWeek = dayMapping[currentDate.getDay()];\r\n              if (repeatDays.includes(dayOfWeek)) {\r\n                validDates.push(new Date(currentDate));\r\n              }\r\n              currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        validDates.forEach((date) => {\r\n          if (date.toDateString() === today.toDateString()) {\r\n            tasks.push({\r\n              ...task,\r\n              workName: work.name,\r\n              startTime: new Date(today.setHours(startHour, startMinute)),\r\n              endTime: new Date(today.setHours(endHour, endMinute)),\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\r\n    setTasksForToday(sortedTasks);\r\n  }, [works]);\r\n\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      calculateTasksForToday();\r\n    }\r\n  }, [mode, calculateTasksForToday]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const now = new Date();\r\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\r\n        calculateTasksForToday(); // Làm mới danh sách task\r\n      }\r\n    }, 60000); // Kiểm tra mỗi phút\r\n    return () => clearInterval(timer);\r\n  }, [calculateTasksForToday]);\r\n\r\n  const renderTaskOnTimeline = (task) => {\r\n    const taskStart = task.startTime;\r\n    const taskEnd = task.endTime;\r\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\r\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\r\n  \r\n    // Kiểm tra trạng thái của task\r\n    const isSelected = selectedTaskName === task.name;\r\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\r\n  \r\n    return (\r\n      <div\r\n        className={`task-block ${isSelected ? \"selected\" : \"\"} ${\r\n          isDimmed ? \"dimmed\" : \"\"\r\n        }`}\r\n        style={{\r\n          top: `${startMinutes}px`,\r\n          height: `${endMinutes - startMinutes}px`,\r\n        }}\r\n        key={task.name}\r\n        onClick={() => handleSelectTaskBlock(task.name)} \r\n      >\r\n        <div className=\"task-name\">{task.name}</div>\r\n        <button className=\"select-task-button\">\r\n          {isSelected ? \"Deselect\" : \"Select\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const calculateTimeSlot = (startTime, endTime) => {\r\n    const diff = new Date(endTime - startTime);\r\n    const hours = diff.getUTCHours(); // Lấy giờ\r\n    const minutes = diff.getUTCMinutes(); // Lấy phút\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}`; // Định dạng hh:mm\r\n  };\r\n  \r\n  const getPomodoroBackground = () => {\r\n    if (isFreeMode) return \"#f9f9f9\"; // Chế độ tự do\r\n    if (timeLeft === 300) return \"#a8d5ba\"; // Short Break\r\n    if (timeLeft === 900) return \"#f6e58d\"; // Long Break\r\n    if (timeLeft === 1500 || isFocusPhase) return \"#56daeb\"; // Pomodoro\r\n    return \"#f9f9f9\"; // Màu mặc định\r\n  };\r\n  \r\n \r\n  const handleModeChange = (mode) => {\r\n    if (mode === \"pomodoro\") {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500); // Reset về 25 phút\r\n      setIsRunning(false); // Dừng đếm\r\n    } else if (mode === \"short-break\") {\r\n      setIsFocusPhase(false);\r\n      setTimeLeft(300); // Reset về 5 phút\r\n      setIsRunning(false);\r\n    } else if (mode === \"long-break\") {\r\n      setIsFocusPhase(false);\r\n      setTimeLeft(900); // Reset về 15 phút\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n\r\n  const openManualSelectModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleManualSelectWork = (work) => {\r\n    setTempWork((prev) => (prev?.id === work.id ? null : work));\r\n    setTempTask(null);\r\n  };\r\n\r\n  const handleManualSelectTask = (task) => {\r\n    setTempTask((prev) => (prev?.name === task.name ? null : task));\r\n  };\r\n\r\n  const handleManualSelectionDone = () => {\r\n    setSelectedWork(tempWork);\r\n    setSelectedTask(tempTask);\r\n\r\n    setCurrentTaskManual(\r\n      tempTask\r\n        ? {\r\n            ...tempTask,\r\n            workName: tempWork.name,\r\n            workStartDate: tempWork.startDate,\r\n            workEndDate: tempWork.endDate,\r\n          }\r\n        : null\r\n    );\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"focus-modes\">\r\n        <button\r\n          className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"auto\")}\r\n        >\r\n          Tự động\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n          onClick={() => {\r\n            setMode(\"manual\");\r\n            openManualSelectModal();\r\n          }}\r\n        >\r\n          Tự chọn\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"free\")}\r\n        >\r\n          Tự do\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"focus-content\">\r\n        {/* Time-line luôn hiển thị */}\r\n        <div className=\"timeline-container\" ref={timelineRef}>\r\n          <div className=\"timeline\">\r\n            <div\r\n              className=\"current-time-line\"\r\n              style={{\r\n                \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\r\n                top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`,\r\n              }}\r\n            ></div>\r\n            {Array.from({ length: 25 }).map((_, hour) => (\r\n              <div key={hour} className=\"hour-block\" style={{ top: `${hour * 60}px` }}>\r\n                <div className=\"hour-marker\">\r\n                  {hour < 10 ? `0${hour}:00` : `${hour}:00`}\r\n                </div>\r\n                <div className=\"hour-divider\"></div>\r\n              </div>\r\n            ))}\r\n            {/* Chỉ hiển thị các task trên timeline nếu có */}\r\n            {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n          </div>\r\n        </div>\r\n            \r\n        {/* Task-list chỉ hiển thị ở chế độ \"tự động\" */}\r\n        {mode === \"auto\" && (\r\n          <div className=\"task-list\">\r\n          <h2>Today Task</h2>\r\n          <p>\r\n            Tổng số task: <strong>{tasksForToday.length}</strong>\r\n          </p>\r\n          {tasksForToday.length > 0 ? (\r\n            <table className=\"task-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Work</th>\r\n                  <th>Time</th>\r\n                  <th>TimeSlot</th> {/* Thêm cột TimeSlot */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasksForToday.map((task, index) => {\r\n                  const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\r\n                  return (\r\n                    <tr\r\n                      key={index}\r\n                      className={`task-list-item ${\r\n                        selectedTaskName === task.name ? \"selected\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSelectTaskBlock(task.name)}\r\n                    >\r\n                      <td>{task.name}</td>\r\n                      <td>{task.workName || \"N/A\"}</td>\r\n                      <td>\r\n                        {task.startTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}{\" \"}\r\n                        -{\" \"}\r\n                        {task.endTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}\r\n                      </td>\r\n                      <td>{timeSlot}</td> {/* Hiển thị TimeSlot */}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Empty Task Today</p>\r\n          )}\r\n        </div>\r\n        \r\n        )}\r\n\r\n        {/* Note-container luôn hiển thị */}\r\n        <div className=\"note-container\">\r\n          <div className=\"note-header\">\r\n            <button\r\n              className=\"note-button\"\r\n              onClick={() => alert(\"Daily form is not implemented yet.\")}\r\n            >\r\n              Daily\r\n            </button>\r\n            <button className=\"note-button\" onClick={() => setNoteContent(\"\")}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n          <div className=\"note-body\">\r\n            <label htmlFor=\"note-input\" className=\"note-label\">Note</label>\r\n            <textarea\r\n              id=\"note-input\"\r\n              className=\"note-input\"\r\n              value={noteContent}\r\n              onChange={(e) => setNoteContent(e.target.value)}\r\n              placeholder=\"Write your notes here...\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {mode === \"manual\" && currentTaskManual && (\r\n        <div className=\"task-details\">\r\n          <h2>Task hiện tại</h2>\r\n          <p>\r\n            <strong>Work:</strong> {currentTaskManual.workName}\r\n          </p>\r\n          <p>\r\n            <strong>Task:</strong> {currentTaskManual.name}\r\n          </p>\r\n          <p>\r\n            <strong>Thời gian:</strong> {currentTaskManual.startTime} -{\" \"}\r\n            {currentTaskManual.endTime}\r\n          </p>\r\n          <p>\r\n            <strong>Ngày Work:</strong> {currentTaskManual.workStartDate} -{\" \"}\r\n            {currentTaskManual.workEndDate}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n<div className=\"pomodoro-timer\" style={{ backgroundColor: getPomodoroBackground() }}>\r\n  <div className=\"pomodoro-header\">\r\n    <span className=\"swap-icon\" onClick={toggleFreeMode}>\r\n      🔄 {/* Icon Swap */}\r\n    </span>\r\n    <div className=\"pomodoro-modes\">\r\n      {!isFreeMode ? (\r\n        <>\r\n          <span\r\n            className={`pomodoro-mode ${isFocusPhase ? \"active\" : \"\"}`}\r\n            onClick={() => handleModeChange(\"pomodoro\")}\r\n          >\r\n            Pomodoro\r\n          </span>\r\n          <span\r\n            className={`pomodoro-mode ${!isFocusPhase && timeLeft === 300 ? \"active\" : \"\"}`}\r\n            onClick={() => handleModeChange(\"short-break\")}\r\n          >\r\n            Short-break\r\n          </span>\r\n          <span\r\n            className={`pomodoro-mode ${!isFocusPhase && timeLeft === 900 ? \"active\" : \"\"}`}\r\n            onClick={() => handleModeChange(\"long-break\")}\r\n          >\r\n            Long-break\r\n          </span>\r\n        </>\r\n      ) : (\r\n        <span className=\"pomodoro-mode active\">Stopwatch</span>\r\n      )}\r\n    </div>\r\n  </div>\r\n  <p>{formatTime(isFreeMode ? freeModeTime : timeLeft)}</p> {/* Hiển thị thời gian */}\r\n  <div className=\"timer-controls\">\r\n    <button onClick={handleStartPause}>\r\n      {isRunning ? \"Tạm dừng\" : \"Bắt đầu\"}\r\n    </button>\r\n    {isFreeMode && (\r\n      <button onClick={() => setFreeModeTime(0)}>Kết thúc</button>\r\n    )}\r\n    {!isFreeMode && <button onClick={handleSkip}>Bỏ qua</button>}\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Danh sách Work</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${\r\n                    tempWork?.id === work.id ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>\r\n                    Ngày: {work.startDate} - {work.endDate}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"focus-button\" onClick={handleManualSelectionDone}>\r\n                  Done\r\n                </button>\r\n                <button className=\"modal-close\" onClick={closeModal}>\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <h2>Danh sách Task</h2>\r\n              {tempWork && tempWork.subWorks ? (\r\n                <>\r\n                  {tempWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${\r\n                        tempTask?.name === task.name ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>\r\n                        Thời gian: {task.startTime} - {task.endTime}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>Chọn một Work để xem Task.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}