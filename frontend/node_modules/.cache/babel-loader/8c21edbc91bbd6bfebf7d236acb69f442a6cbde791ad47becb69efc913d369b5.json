{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Aos from \"aos\";\nimport \"./styles/dashboard.css\";\nimport { AiFillDelete, AiFillEdit, AiOutlinePlus } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    id: null,\n    name: \"\",\n    type: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    describe: \"\",\n    tag: \"\"\n  });\n  const [taskFormData, setTaskFormData] = useState({\n    workId: null,\n    taskName: \"\",\n    taskDescription: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    repeatOption: \"Không lặp lại\",\n    customRepeat: {\n      repeatEvery: 1,\n      repeatUnit: \"ngày\",\n      repeatDays: []\n    }\n  });\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    Aos.init({\n      duration: 1000\n    });\n  }, []);\n  useEffect(() => {\n    if (isModalOpen || isTaskModalOpen) {\n      document.body.classList.add(\"disable-hover\");\n    } else {\n      document.body.classList.remove(\"disable-hover\");\n    }\n  }, [isModalOpen, isTaskModalOpen]);\n  const handleAddNewWork = () => {\n    setIsModalOpen(true);\n    setEditMode(false);\n    setFormData({\n      id: null,\n      name: \"\",\n      type: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      describe: \"\",\n      tag: \"\"\n    });\n  };\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTaskFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskFormData(prev => {\n      const updated = {\n        ...prev,\n        [name]: value\n      };\n      if (name === \"customRepeat.repeatUnit\" && value === \"ngày\") {\n        updated.customRepeat.repeatDays = [];\n      }\n      return updated;\n    });\n  };\n  const handleAddTask = workId => {\n    const work = Object.values(works).flat().find(work => work.id === workId);\n    setIsTaskModalOpen(true);\n    setTaskFormData({\n      ...taskFormData,\n      workId,\n      workName: work ? work.name : \"\"\n    });\n  };\n  const handleDone = () => {\n    const {\n      name,\n      type,\n      startDate,\n      endDate\n    } = formData;\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      if (editMode) {\n        Object.keys(updatedWorks).forEach(type => {\n          updatedWorks[type] = updatedWorks[type].filter(work => work.id !== formData.id);\n        });\n      }\n      updatedWorks[type] = [...updatedWorks[type], {\n        ...formData,\n        id: formData.id || Date.now(),\n        subWorks: formData.subWorks || []\n      }];\n      return updatedWorks;\n    });\n    setIsModalOpen(false);\n  };\n  const handleDoneTask = () => {\n    const {\n      startTime,\n      endTime,\n      taskName,\n      taskDescription\n    } = taskFormData;\n    if (!taskName || !startTime || !endTime) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    let [startHour, startMinute] = startTime.split(\":\").map(Number);\n    let [endHour, endMinute] = endTime.split(\":\").map(Number);\n    if (endHour === 0 && endMinute === 0) {\n      endHour = 24;\n    }\n    const startTotalMinutes = startHour * 60 + startMinute;\n    const endTotalMinutes = endHour * 60 + endMinute;\n    if (endTotalMinutes < startTotalMinutes) {\n      alert(\"End time must be equal to or after start time.\");\n      return;\n    }\n    const updatedCustomRepeat = {\n      ...taskFormData.customRepeat\n    };\n    if (updatedCustomRepeat.repeatUnit === \"ngày\") {\n      delete updatedCustomRepeat.repeatDays;\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      const workType = Object.keys(updatedWorks).find(type => updatedWorks[type].some(work => work.id === taskFormData.workId));\n      if (!workType) {\n        alert(\"Work not found. Please try again.\");\n        return prevWorks;\n      }\n      const workIndex = updatedWorks[workType].findIndex(work => work.id === taskFormData.workId);\n      if (workIndex === -1) {\n        alert(\"Work not found. Please try again.\");\n        return prevWorks;\n      }\n      const work = updatedWorks[workType][workIndex];\n      if (!work.subWorks) {\n        work.subWorks = [];\n      }\n      const isDuplicateTask = work.subWorks.some(subWork => subWork.name === taskFormData.taskName);\n      if (!isDuplicateTask) {\n        work.subWorks.push({\n          name: taskFormData.taskName,\n          description: taskFormData.taskDescription,\n          startTime: taskFormData.startTime,\n          endTime: taskFormData.endTime,\n          repeatOption: taskFormData.repeatOption,\n          customRepeat: taskFormData.customRepeat\n        });\n      }\n      return updatedWorks;\n    });\n    setTaskFormData({\n      workId: null,\n      taskName: \"\",\n      taskDescription: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      repeatOption: \"Không lặp lại\",\n      customRepeat: {\n        repeatEvery: 1,\n        repeatUnit: \"ngày\",\n        repeatDays: []\n      }\n    });\n    setIsTaskModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setIsTaskModalOpen(false);\n  };\n  const handleDeleteTask = (type, id) => {\n    setWorks(prevWorks => ({\n      ...prevWorks,\n      [type]: prevWorks[type].filter(work => work.id !== id)\n    }));\n  };\n  const handleEditTask = work => {\n    setEditMode(true);\n    setFormData(work);\n    setIsModalOpen(true);\n  };\n  const handleWorkCheckbox = (type, workId, subWorkIndex) => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      if (subWorkIndex === -1) {\n        const completedWork = updatedWorks[type].find(work => work.id === workId);\n        if (completedWork) {\n          setCompletedWorks(prevCompleted => {\n            const updatedCompleted = [...prevCompleted, completedWork];\n            return updatedCompleted;\n          });\n        }\n        updatedWorks[type] = updatedWorks[type].filter(work => work.id !== workId);\n      }\n      return updatedWorks;\n    });\n  };\n  const handleDragStart = (e, work, type) => {\n    e.dataTransfer.setData(\"work\", JSON.stringify({\n      ...work,\n      type\n    }));\n  };\n  const handleDrop = (e, newType) => {\n    const data = JSON.parse(e.dataTransfer.getData(\"work\"));\n    if (data.type === newType) return;\n    setWorks(prevWorks => {\n      const updatedSourceWorks = prevWorks[data.type].filter(work => work.id !== data.id);\n      const updatedTargetWorks = [...prevWorks[newType], {\n        ...data,\n        type: newType\n      }];\n      return {\n        ...prevWorks,\n        [data.type]: updatedSourceWorks,\n        [newType]: updatedTargetWorks\n      };\n    });\n  };\n  const allowDrop = e => e.preventDefault();\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}/${month}/${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-body-conatiner\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"dash-header\",\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-work-btn\",\n      onClick: handleAddNewWork,\n      children: \"Add new work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editMode ? \"Edit Work\" : \"Add New Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter work name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: formData.type,\n            onChange: handleFormChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"doNow\",\n              children: \"Do now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"schedule\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"delegate\",\n              children: \"Delegate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"drop\",\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"tag\",\n            value: formData.tag,\n            onChange: e => {\n              handleFormChange(e);\n              if (e.target.value === \"Other\") {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: \"\"\n                }));\n              } else {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: null\n                }));\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"H\\u1ECDc t\\u1EADp\",\n              children: \"H\\u1ECDc t\\u1EADp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"L\\xE0m vi\\u1EC7c\",\n              children: \"L\\xE0m vi\\u1EC7c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ngh\\u1EC9 ng\\u01A1i\",\n              children: \"Ngh\\u1EC9 ng\\u01A1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Gi\\u1EA3i tr\\xED\",\n              children: \"Gi\\u1EA3i tr\\xED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), formData.tag === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter custom tag\",\n            name: \"customTag\",\n            value: formData.customTag || \"\",\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"startDate\",\n            value: formData.startDate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"endDate\",\n            value: formData.endDate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Describe work (use # for hashtags)\",\n          name: \"describe\",\n          value: formData.describe,\n          onChange: handleFormChange,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDone,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), isTaskModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal modal-task\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Add Task for \", taskFormData.workName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter task name\",\n            name: \"taskName\",\n            value: taskFormData.taskName,\n            onChange: handleTaskFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Task description\",\n            name: \"taskDescription\",\n            value: taskFormData.taskDescription,\n            onChange: handleTaskFormChange,\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"startTime\",\n                value: taskFormData.startTime,\n                onChange: handleTaskFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"endTime\",\n                value: taskFormData.endTime,\n                onChange: handleTaskFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"repeatOption\",\n            value: taskFormData.repeatOption,\n            onChange: e => {\n              handleTaskFormChange(e);\n              if (e.target.value === \"Tùy chỉnh\") {\n                setTaskFormData(prev => ({\n                  ...prev,\n                  customRepeat: {\n                    ...prev.customRepeat,\n                    isCustomizing: true\n                  }\n                }));\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Kh\\xF4ng l\\u1EB7p l\\u1EA1i\",\n              children: \"Kh\\xF4ng l\\u1EB7p l\\u1EA1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"H\\xE0ng ng\\xE0y\",\n              children: \"H\\xE0ng ng\\xE0y\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"T\\xF9y ch\\u1EC9nh\",\n              children: \"T\\xF9y ch\\u1EC9nh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 15\n          }, this), taskFormData.repeatOption === \"Tùy chỉnh\" && taskFormData.customRepeat.isCustomizing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-repeat-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"L\\u1EB7p l\\u1EA1i m\\u1ED7i:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  name: \"repeatEvery\",\n                  value: taskFormData.customRepeat.repeatEvery,\n                  onChange: e => setTaskFormData(prev => ({\n                    ...prev,\n                    customRepeat: {\n                      ...prev.customRepeat,\n                      repeatEvery: Math.max(1, Number(e.target.value))\n                    }\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"repeatUnit\",\n                value: taskFormData.customRepeat.repeatUnit,\n                onChange: e => setTaskFormData(prev => {\n                  const isDay = e.target.value === \"ngày\";\n                  return {\n                    ...prev,\n                    customRepeat: {\n                      ...prev.customRepeat,\n                      repeatUnit: e.target.value,\n                      repeatDays: isDay ? [] : prev.customRepeat.repeatDays\n                    }\n                  };\n                }),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"ng\\xE0y\",\n                  children: \"Ng\\xE0y\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"tu\\u1EA7n\",\n                  children: \"Tu\\u1EA7n\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"th\\xE1ng\",\n                  children: \"Th\\xE1ng\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"n\\u0103m\",\n                  children: \"N\\u0103m\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 19\n            }, this), taskFormData.customRepeat.repeatUnit === \"ngày\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Ng\\xE0y b\\u1EAFt \\u0111\\u1EA7u:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  name: \"startDate\",\n                  value: taskFormData.customRepeat.startDate || \"\",\n                  onChange: e => setTaskFormData(prev => ({\n                    ...prev,\n                    customRepeat: {\n                      ...prev.customRepeat,\n                      startDate: e.target.value\n                    }\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 23\n            }, this) :\n            /*#__PURE__*/\n            // Nếu không phải ngày, hiển thị danh sách thứ\n            _jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"L\\u1EB7p l\\u1EA1i v\\xE0o:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 25\n              }, this), [\"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\", \"CN\"].map(day => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"repeat-day-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  disabled: taskFormData.customRepeat.repeatUnit === \"ngày\",\n                  checked: taskFormData.customRepeat.repeatDays.includes(day),\n                  onChange: e => {\n                    setTaskFormData(prev => {\n                      const updatedDays = e.target.checked ? [...prev.customRepeat.repeatDays, day] : prev.customRepeat.repeatDays.filter(d => d !== day);\n                      return {\n                        ...prev,\n                        customRepeat: {\n                          ...prev.customRepeat,\n                          repeatDays: updatedDays\n                        }\n                      };\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 29\n                }, this), day]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 27\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"custom-repeat-done\",\n              onClick: () => setTaskFormData(prev => ({\n                ...prev,\n                customRepeat: {\n                  ...prev.customRepeat,\n                  isCustomizing: false\n                }\n              })),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this), taskFormData.repeatOption === \"Tùy chỉnh\" && !taskFormData.customRepeat.isCustomizing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"L\\u1EB7p l\\u1EA1i \", taskFormData.customRepeat.repeatEvery, \" \", taskFormData.customRepeat.repeatUnit, taskFormData.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(taskFormData.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào thứ ${taskFormData.customRepeat.repeatDays.join(\", \")}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDoneTask,\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Existing Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this), (() => {\n            const workType = Object.keys(works).find(type => works[type].some(work => work.id === taskFormData.workId));\n            if (!workType) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tasks available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 39\n            }, this);\n            const work = works[workType].find(work => work.id === taskFormData.workId);\n            return work && work.subWorks && work.subWorks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: work.subWorks.map((subWork, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: subWork.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 569,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: subWork.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 570,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [subWork.startTime, \" - \", subWork.endTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 571,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: subWork.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${subWork.customRepeat.repeatEvery} ${subWork.customRepeat.repeatUnit}${subWork.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(subWork.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${subWork.customRepeat.repeatDays.join(\", \")}`}` : subWork.repeatOption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 574,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 568,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tasks available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 19\n            }, this);\n          })()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"body-content\",\n      children: [\"doNow\", \"schedule\", \"delegate\", \"drop\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-box\",\n        onDrop: e => handleDrop(e, type),\n        onDragOver: allowDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: type.charAt(0).toUpperCase() + type.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: works[type].map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task\",\n            draggable: true,\n            onDragStart: e => handleDragStart(e, work, type),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => handleWorkCheckbox(type, work.id, -1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: work.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [formatDate(work.startDate), \" - \", formatDate(work.endDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: work.describe ? work.describe.split(\" \").map((word, i) => word.startsWith(\"#\") ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: [word, \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 31\n                }, this) : `${word} `) : \"No description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Tasks: \", work.subWorks ? work.subWorks.length : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 638,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 616,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {\n                className: \"add-task-icon\",\n                onClick: () => handleAddTask(work.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 641,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillEdit, {\n                className: \"edit-icon\",\n                onClick: () => handleEditTask(work)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                className: \"delete-icon\",\n                onClick: () => handleDeleteTask(type, work.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 649,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 608,\n          columnNumber: 13\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 599,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"U5M/nkaX+WBcrvyWfB0BaU4y6no=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Aos","AiFillDelete","AiFillEdit","AiOutlinePlus","jsxDEV","_jsxDEV","Dashboard","works","setWorks","completedWorks","setCompletedWorks","_s","isModalOpen","setIsModalOpen","isTaskModalOpen","setIsTaskModalOpen","formData","setFormData","id","name","type","startDate","endDate","describe","tag","taskFormData","setTaskFormData","workId","taskName","taskDescription","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","repeatDays","editMode","setEditMode","init","duration","document","body","classList","add","remove","handleAddNewWork","handleFormChange","e","value","target","prev","handleTaskFormChange","updated","handleAddTask","work","Object","values","flat","find","workName","handleDone","alert","prevWorks","updatedWorks","keys","forEach","filter","Date","now","subWorks","handleDoneTask","startHour","startMinute","split","map","Number","endHour","endMinute","startTotalMinutes","endTotalMinutes","updatedCustomRepeat","workType","some","workIndex","findIndex","isDuplicateTask","subWork","push","description","handleCancel","handleDeleteTask","handleEditTask","handleWorkCheckbox","subWorkIndex","completedWork","prevCompleted","updatedCompleted","handleDragStart","dataTransfer","setData","JSON","stringify","handleDrop","newType","data","parse","getData","updatedSourceWorks","updatedTargetWorks","allowDrop","preventDefault","formatDate","dateString","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","customTag","rows","isCustomizing","min","Math","max","isDay","disabled","checked","includes","updatedDays","d","toLocaleDateString","join","length","index","onDrop","onDragOver","charAt","toUpperCase","slice","draggable","onDragStart","word","i","startsWith","style","color","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Aos from \"aos\";\r\nimport \"./styles/dashboard.css\";\r\nimport { AiFillDelete, AiFillEdit, AiOutlinePlus } from \"react-icons/ai\";\r\n\r\nconst Dashboard = ({ works, setWorks, completedWorks, setCompletedWorks }) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    id: null,\r\n    name: \"\",\r\n    type: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    describe: \"\",\r\n    tag: \"\",\r\n  });\r\n\r\n  const [taskFormData, setTaskFormData] = useState({\r\n    workId: null,\r\n    taskName: \"\",\r\n    taskDescription: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    repeatOption: \"Không lặp lại\",\r\n    customRepeat: {\r\n      repeatEvery: 1,\r\n      repeatUnit: \"ngày\",\r\n      repeatDays: [],\r\n    },\r\n  });\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Aos.init({ duration: 1000 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isModalOpen || isTaskModalOpen) {\r\n      document.body.classList.add(\"disable-hover\");\r\n    } else {\r\n      document.body.classList.remove(\"disable-hover\");\r\n    }\r\n  }, [isModalOpen, isTaskModalOpen]);\r\n\r\n  const handleAddNewWork = () => {\r\n    setIsModalOpen(true);\r\n    setEditMode(false);\r\n    setFormData({\r\n      id: null,\r\n      name: \"\",\r\n      type: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      describe: \"\",\r\n      tag: \"\",\r\n    });\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleTaskFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setTaskFormData((prev) => {\r\n      const updated = { ...prev, [name]: value };\r\n\r\n      if (name === \"customRepeat.repeatUnit\" && value === \"ngày\") {\r\n        updated.customRepeat.repeatDays = [];\r\n      }\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleAddTask = (workId) => {\r\n    const work = Object.values(works).flat().find((work) => work.id === workId);\r\n    setIsTaskModalOpen(true);\r\n    setTaskFormData({ ...taskFormData, workId, workName: work ? work.name : \"\" });\r\n  };\r\n\r\n  const handleDone = () => {\r\n    const { name, type, startDate, endDate } = formData;\r\n\r\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n\r\n      if (editMode) {\r\n        Object.keys(updatedWorks).forEach((type) => {\r\n          updatedWorks[type] = updatedWorks[type].filter(\r\n            (work) => work.id !== formData.id\r\n          );\r\n        });\r\n      }\r\n\r\n      updatedWorks[type] = [\r\n        ...updatedWorks[type],\r\n        {\r\n          ...formData,\r\n          id: formData.id || Date.now(),\r\n          subWorks: formData.subWorks || [],\r\n        },\r\n      ];\r\n\r\n      return updatedWorks;\r\n    });\r\n\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDoneTask = () => {\r\n    const { startTime, endTime, taskName, taskDescription } = taskFormData;\r\n\r\n    if (!taskName || !startTime || !endTime) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    let [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n    let [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n    if (endHour === 0 && endMinute === 0) {\r\n      endHour = 24;\r\n    }\r\n\r\n    const startTotalMinutes = startHour * 60 + startMinute;\r\n    const endTotalMinutes = endHour * 60 + endMinute;\r\n\r\n    if (endTotalMinutes < startTotalMinutes) {\r\n      alert(\"End time must be equal to or after start time.\");\r\n      return;\r\n    }\r\n\r\n    const updatedCustomRepeat = { ...taskFormData.customRepeat };\r\n    if (updatedCustomRepeat.repeatUnit === \"ngày\") {\r\n      delete updatedCustomRepeat.repeatDays;\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      const workType = Object.keys(updatedWorks).find((type) =>\r\n        updatedWorks[type].some((work) => work.id === taskFormData.workId)\r\n      );\r\n\r\n      if (!workType) {\r\n        alert(\"Work not found. Please try again.\");\r\n        return prevWorks;\r\n      }\r\n\r\n      const workIndex = updatedWorks[workType].findIndex(\r\n        (work) => work.id === taskFormData.workId\r\n      );\r\n\r\n      if (workIndex === -1) {\r\n        alert(\"Work not found. Please try again.\");\r\n        return prevWorks;\r\n      }\r\n\r\n      const work = updatedWorks[workType][workIndex];\r\n      if (!work.subWorks) {\r\n        work.subWorks = [];\r\n      }\r\n\r\n      const isDuplicateTask = work.subWorks.some(\r\n        (subWork) => subWork.name === taskFormData.taskName\r\n      );\r\n\r\n      if (!isDuplicateTask) {\r\n        work.subWorks.push({\r\n          name: taskFormData.taskName,\r\n          description: taskFormData.taskDescription,\r\n          startTime: taskFormData.startTime,\r\n          endTime: taskFormData.endTime,\r\n          repeatOption: taskFormData.repeatOption,\r\n          customRepeat: taskFormData.customRepeat,\r\n        });\r\n      }\r\n\r\n      return updatedWorks;\r\n    });\r\n\r\n    setTaskFormData({\r\n      workId: null,\r\n      taskName: \"\",\r\n      taskDescription: \"\",\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      repeatOption: \"Không lặp lại\",\r\n      customRepeat: {\r\n        repeatEvery: 1,\r\n        repeatUnit: \"ngày\",\r\n        repeatDays: [],\r\n      },\r\n    });\r\n\r\n    setIsTaskModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n    setIsTaskModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteTask = (type, id) => {\r\n    setWorks((prevWorks) => ({\r\n      ...prevWorks,\r\n      [type]: prevWorks[type].filter((work) => work.id !== id),\r\n    }));\r\n  };\r\n\r\n  const handleEditTask = (work) => {\r\n    setEditMode(true);\r\n    setFormData(work);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleWorkCheckbox = (type, workId, subWorkIndex) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n\r\n      if (subWorkIndex === -1) {\r\n        const completedWork = updatedWorks[type].find((work) => work.id === workId);\r\n\r\n        if (completedWork) {\r\n          setCompletedWorks((prevCompleted) => {\r\n            const updatedCompleted = [...prevCompleted, completedWork];\r\n            return updatedCompleted;\r\n          });\r\n        }\r\n\r\n        updatedWorks[type] = updatedWorks[type].filter((work) => work.id !== workId);\r\n      }\r\n\r\n      return updatedWorks;\r\n    });\r\n  };\r\n\r\n  const handleDragStart = (e, work, type) => {\r\n    e.dataTransfer.setData(\"work\", JSON.stringify({ ...work, type }));\r\n  };\r\n\r\n  const handleDrop = (e, newType) => {\r\n    const data = JSON.parse(e.dataTransfer.getData(\"work\"));\r\n\r\n    if (data.type === newType) return;\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedSourceWorks = prevWorks[data.type].filter(\r\n        (work) => work.id !== data.id\r\n      );\r\n      const updatedTargetWorks = [\r\n        ...prevWorks[newType],\r\n        { ...data, type: newType },\r\n      ];\r\n      return {\r\n        ...prevWorks,\r\n        [data.type]: updatedSourceWorks,\r\n        [newType]: updatedTargetWorks,\r\n      };\r\n    });\r\n  };\r\n\r\n  const allowDrop = (e) => e.preventDefault();\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const [year, month, day] = dateString.split(\"-\");\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-body-conatiner\" data-aos=\"zoom-in\">\r\n      <header id=\"dash-header\" className=\"search-bar\">\r\n        <h1>Dashboard</h1>\r\n      </header>\r\n      <button className=\"add-work-btn\" onClick={handleAddNewWork}>\r\n        Add new work\r\n      </button>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>{editMode ? \"Edit Work\" : \"Add New Work\"}</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter work name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleFormChange}\r\n            />\r\n            <div className=\"form-row\">\r\n              <select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleFormChange}\r\n              >\r\n                <option value=\"\">Select type</option>\r\n                <option value=\"doNow\">Do now</option>\r\n                <option value=\"schedule\">Schedule</option>\r\n                <option value=\"delegate\">Delegate</option>\r\n                <option value=\"drop\">Drop</option>\r\n              </select>\r\n              <select\r\n                name=\"tag\"\r\n                value={formData.tag}\r\n                onChange={(e) => {\r\n                  handleFormChange(e);\r\n                  if (e.target.value === \"Other\") {\r\n                    setFormData((prev) => ({ ...prev, customTag: \"\" }));\r\n                  } else {\r\n                    setFormData((prev) => ({ ...prev, customTag: null }));\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"\">Select tag</option>\r\n                <option value=\"Học tập\">Học tập</option>\r\n                <option value=\"Làm việc\">Làm việc</option>\r\n                <option value=\"Nghỉ ngơi\">Nghỉ ngơi</option>\r\n                <option value=\"Giải trí\">Giải trí</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n              {formData.tag === \"Other\" && (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter custom tag\"\r\n                  name=\"customTag\"\r\n                  value={formData.customTag || \"\"}\r\n                  onChange={handleFormChange}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={formData.startDate}\r\n                onChange={handleFormChange}\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                value={formData.endDate}\r\n                onChange={handleFormChange}\r\n              />\r\n            </div>\r\n            <textarea\r\n              placeholder=\"Describe work (use # for hashtags)\"\r\n              name=\"describe\"\r\n              value={formData.describe}\r\n              onChange={handleFormChange}\r\n              rows=\"4\"\r\n            ></textarea>\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleDone}>Done</button>\r\n              <button onClick={handleCancel}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isTaskModalOpen && (\r\n        <div className=\"modal modal-task\">\r\n          <div className=\"modal-content modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Add Task for {taskFormData.workName}</h2>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter task name\"\r\n                name=\"taskName\"\r\n                value={taskFormData.taskName}\r\n                onChange={handleTaskFormChange}\r\n              />\r\n              <textarea\r\n                placeholder=\"Task description\"\r\n                name=\"taskDescription\"\r\n                value={taskFormData.taskDescription}\r\n                onChange={handleTaskFormChange}\r\n                rows=\"4\"\r\n              ></textarea>\r\n              <div className=\"form-row-inline\">\r\n                <div>\r\n                  <label>Start Time</label>\r\n                  <input\r\n                    type=\"time\"\r\n                    name=\"startTime\"\r\n                    value={taskFormData.startTime}\r\n                    onChange={handleTaskFormChange}\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label>End Time</label>\r\n                  <input\r\n                    type=\"time\"\r\n                    name=\"endTime\"\r\n                    value={taskFormData.endTime}\r\n                    onChange={handleTaskFormChange}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <select\r\n                name=\"repeatOption\"\r\n                value={taskFormData.repeatOption}\r\n                onChange={(e) => {\r\n                  handleTaskFormChange(e);\r\n                  if (e.target.value === \"Tùy chỉnh\") {\r\n                    setTaskFormData((prev) => ({\r\n                      ...prev,\r\n                      customRepeat: {\r\n                        ...prev.customRepeat,\r\n                        isCustomizing: true,\r\n                      },\r\n                    }));\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"Không lặp lại\">Không lặp lại</option>\r\n                <option value=\"Hàng ngày\">Hàng ngày</option>\r\n                <option value=\"Tùy chỉnh\">Tùy chỉnh</option>\r\n              </select>\r\n              {taskFormData.repeatOption === \"Tùy chỉnh\" && taskFormData.customRepeat.isCustomizing && (\r\n                <div className=\"custom-repeat-form\">\r\n                  <div className=\"form-row-inline\">\r\n                    <label>\r\n                      Lặp lại mỗi:\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        name=\"repeatEvery\"\r\n                        value={taskFormData.customRepeat.repeatEvery}\r\n                        onChange={(e) =>\r\n                          setTaskFormData((prev) => ({\r\n                            ...prev,\r\n                            customRepeat: {\r\n                              ...prev.customRepeat,\r\n                              repeatEvery: Math.max(1, Number(e.target.value)),\r\n                            },\r\n                          }))\r\n                        }\r\n                      />\r\n                    </label>\r\n                    <select\r\n                      name=\"repeatUnit\"\r\n                      value={taskFormData.customRepeat.repeatUnit}\r\n                      onChange={(e) =>\r\n                        setTaskFormData((prev) => {\r\n                          const isDay = e.target.value === \"ngày\";\r\n                          return {\r\n                            ...prev,\r\n                            customRepeat: {\r\n                              ...prev.customRepeat,\r\n                              repeatUnit: e.target.value,\r\n                              repeatDays: isDay ? [] : prev.customRepeat.repeatDays,\r\n                            },\r\n                          };\r\n                        })\r\n                      }\r\n                    >\r\n                      <option value=\"ngày\">Ngày</option>\r\n                      <option value=\"tuần\">Tuần</option>\r\n                      <option value=\"tháng\">Tháng</option>\r\n                      <option value=\"năm\">Năm</option>\r\n                    </select>\r\n                  </div>\r\n                    {taskFormData.customRepeat.repeatUnit === \"ngày\" ? (\r\n                      <div className=\"form-row\">\r\n                        <label>\r\n                          Ngày bắt đầu:\r\n                          <input\r\n                            type=\"date\"\r\n                            name=\"startDate\"\r\n                            value={taskFormData.customRepeat.startDate || \"\"}\r\n                            onChange={(e) =>\r\n                              setTaskFormData((prev) => ({\r\n                                ...prev,\r\n                                customRepeat: {\r\n                                  ...prev.customRepeat,\r\n                                  startDate: e.target.value,\r\n                                },\r\n                              }))\r\n                            }\r\n                          />\r\n                        </label>\r\n                      </div>\r\n                    ) : (\r\n                      // Nếu không phải ngày, hiển thị danh sách thứ\r\n                      <div className=\"form-row\">\r\n                        <label>Lặp lại vào:</label>\r\n                        {[\"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\", \"CN\"].map((day) => (\r\n                          <label key={day} className=\"repeat-day-option\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              disabled={taskFormData.customRepeat.repeatUnit === \"ngày\"}\r\n                              checked={taskFormData.customRepeat.repeatDays.includes(day)}\r\n                              onChange={(e) => {\r\n                                setTaskFormData((prev) => {\r\n                                  const updatedDays = e.target.checked\r\n                                    ? [...prev.customRepeat.repeatDays, day]\r\n                                    : prev.customRepeat.repeatDays.filter((d) => d !== day);\r\n                                  return {\r\n                                    ...prev,\r\n                                    customRepeat: {\r\n                                      ...prev.customRepeat,\r\n                                      repeatDays: updatedDays,\r\n                                    },\r\n                                  };\r\n                                });\r\n                              }}\r\n                            />\r\n                            {day}\r\n                          </label>\r\n                        ))}\r\n                      </div>\r\n                    )}\r\n\r\n    <button\r\n      className=\"custom-repeat-done\"\r\n      onClick={() =>\r\n        setTaskFormData((prev) => ({\r\n          ...prev,\r\n          customRepeat: {\r\n            ...prev.customRepeat,\r\n            isCustomizing: false,\r\n          },\r\n        }))\r\n      }\r\n    >\r\n      Done\r\n    </button>\r\n  </div>\r\n              )}\r\n              {taskFormData.repeatOption === \"Tùy chỉnh\" && !taskFormData.customRepeat.isCustomizing && (\r\n  <p>\r\n    Lặp lại {taskFormData.customRepeat.repeatEvery}{\" \"}\r\n    {taskFormData.customRepeat.repeatUnit}\r\n    {taskFormData.customRepeat.repeatUnit === \"ngày\"\r\n      ? ` một lần từ ${new Date(taskFormData.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}`\r\n      : ` một lần vào thứ ${taskFormData.customRepeat.repeatDays.join(\", \")}`}\r\n  </p>\r\n)}\r\n              <div className=\"modal-buttons\">\r\n                <button onClick={handleDoneTask}>Add Task</button>\r\n                <button onClick={handleCancel}>Cancel</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-right\">\r\n              <h2>Existing Tasks</h2>\r\n              {(() => {\r\n                const workType = Object.keys(works).find((type) =>\r\n                  works[type].some((work) => work.id === taskFormData.workId)\r\n                );\r\n                if (!workType) return <p>No tasks available.</p>;\r\n              \r\n                const work = works[workType].find((work) => work.id === taskFormData.workId);\r\n              \r\n                return work && work.subWorks && work.subWorks.length > 0 ? (\r\n                  <ul>\r\n                    {work.subWorks.map((subWork, index) => (\r\n                      <li key={index}>\r\n                        <h4>{subWork.name}</h4>\r\n                        <p>{subWork.description}</p>\r\n                        <p>\r\n                          {subWork.startTime} - {subWork.endTime}\r\n                        </p>\r\n                        <p>\r\n                          {subWork.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${subWork.customRepeat.repeatEvery} ${\r\n                                subWork.customRepeat.repeatUnit\r\n                              }${\r\n                                subWork.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(subWork.customRepeat.startDate).toLocaleDateString(\r\n                                      \"vi-VN\"\r\n                                    )}`\r\n                                  : ` một lần vào các ngày ${subWork.customRepeat.repeatDays.join(\", \")}`\r\n                              }`\r\n                            : subWork.repeatOption}\r\n                        </p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>No tasks available.</p>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <main className=\"body-content\">\r\n        {[\"doNow\", \"schedule\", \"delegate\", \"drop\"].map((type) => (\r\n          <div\r\n            className=\"work-box\"\r\n            key={type}\r\n            onDrop={(e) => handleDrop(e, type)}\r\n            onDragOver={allowDrop}\r\n          >\r\n            <h2>{type.charAt(0).toUpperCase() + type.slice(1)}</h2>\r\n            <div className=\"task-list\">\r\n              {works[type].map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className=\"task\"\r\n                  draggable\r\n                  onDragStart={(e) => handleDragStart(e, work, type)}\r\n                >\r\n                  <div>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleWorkCheckbox(type, work.id, -1)}\r\n                    />\r\n                    <span>{work.name}</span>\r\n                    <p>\r\n                      {formatDate(work.startDate)} - {formatDate(work.endDate)}\r\n                    </p>\r\n                    <p>\r\n                      {work.describe\r\n                        ? work.describe.split(\" \").map((word, i) =>\r\n                            word.startsWith(\"#\") ? (\r\n                              <span key={i} style={{ color: \"blue\" }}>\r\n                                {word}{\" \"}\r\n                              </span>\r\n                            ) : (\r\n                              `${word} `\r\n                            )\r\n                          )\r\n                        : \"No description\"}\r\n                    </p>\r\n                    <p>Tasks: {work.subWorks ? work.subWorks.length : 0}</p>\r\n                  </div>\r\n                  <div className=\"work-buttons\">\r\n                    <AiOutlinePlus\r\n                      className=\"add-task-icon\"\r\n                      onClick={() => handleAddTask(work.id)}\r\n                    />\r\n                    <AiFillEdit\r\n                      className=\"edit-icon\"\r\n                      onClick={() => handleEditTask(work)}\r\n                    />\r\n                    <AiFillDelete\r\n                      className=\"delete-icon\"\r\n                      onClick={() => handleDeleteTask(type, work.id)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}