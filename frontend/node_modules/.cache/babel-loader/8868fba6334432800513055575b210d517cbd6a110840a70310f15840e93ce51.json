{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef, useMemo } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\n  // const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\n  const [noteContent, setNoteContent] = useState(\"\");\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\"); // Lưu chế độ hiện tại\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0); // Thời gian đếm ngược\n  const [isTaskSelected, setIsTaskSelected] = useState(false); // Trạng thái task được chọn\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false); // Định nghĩa biến\n  const [lastTaskStartTime, setLastTaskStartTime] = useState(null);\n  const intervalRef = useRef(null);\n  const [viewMode, setViewMode] = useState(\"byTime\");\n  // Add state for AutoSelect\n  const [isAutoSelectEnabled, setIsAutoSelectEnabled] = useState(false);\n  const toggleFreeMode = () => {\n    if (isFreeMode) {\n      // Chuyển về chế độ Pomodoro\n      setIsFreeMode(false);\n      setFreeModeTime(0); // Reset thời gian tự do\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\n    } else {\n      // Chuyển sang chế độ tự do\n      setIsFreeMode(true);\n      setFreeModeTime(0); // Reset bộ đếm tự do về 0\n      setIsRunning(false); // Dừng đếm tự do\n    }\n  };\n  useEffect(() => {\n    if (timeLeft === 0) {\n      if (currentMode === \"pomodoro\") {\n        setPomodoroCount(prevCount => {\n          const newCount = prevCount + 1;\n          if (newCount % 4 === 0) {\n            setCurrentMode(\"long-break\");\n            setTimeLeft(900); // Long Break - 15 phút\n          } else {\n            setCurrentMode(\"short-break\");\n            setTimeLeft(300); // Short Break - 5 phút\n          }\n          return newCount;\n        });\n      } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\n        setCurrentMode(\"pomodoro\");\n        setTimeLeft(1500); // Pomodoro - 25 phút\n      }\n    }\n  }, [timeLeft, currentMode]);\n\n  // Chu kỳ Pomodoro\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    if (isFocusPhase) {\n      setIsFocusPhase(false);\n      setCycle(prev => prev + 1);\n      if ((cycle + 1) % 4 === 0) {\n        setTimeLeft(900);\n        toast.info(\"Long Break! Take a 15-minute rest.\");\n      } else {\n        setTimeLeft(300);\n        toast.info(\"Short Break! Take a 5-minute rest.\");\n      }\n    } else {\n      setIsFocusPhase(true);\n      setTimeLeft(1500);\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  }, [cycle, isFocusPhase, toast]);\n\n  // Quản lý realTimeTaskCount khi đồng hồ chạy\n  useEffect(() => {\n    if (!isRunning || !selectedTaskName || currentMode !== \"pomodoro\") {\n      clearInterval(intervalRef.current);\n      return;\n    }\n    clearInterval(intervalRef.current);\n    intervalRef.current = setInterval(() => {\n      setTodayDataTimeCount(prev => prev.map(task => {\n        if (task.name === selectedTaskName) {\n          const updatedRealTime = task.realTimeTaskCount + 1;\n          const percentCompleted = Math.floor(updatedRealTime / task.totalTimeSlotInSeconds * 100);\n          return {\n            ...task,\n            realTimeTaskCount: updatedRealTime,\n            status: `${percentCompleted}%` // Cập nhật phần trăm hoàn thành\n          };\n        }\n        return task;\n      }));\n    }, 1000);\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, selectedTaskName, currentMode]);\n  const totalRealTime = useMemo(() => {\n    // Tính tổng thời gian thực của tất cả các task\n    return todayDataTimeCount.reduce((total, task) => total + task.realTimeTaskCount, 0);\n  }, [todayDataTimeCount]);\n  const completedTaskCount = useMemo(() => {\n    // Đếm số lượng task đã hoàn thành\n    return todayDataTimeCount.filter(task => parseInt(task.status.replace('%', ''), 10) >= 100).length;\n  }, [todayDataTimeCount]);\n  const totalTasks = todayDataTimeCount.length; // Tổng số task hôm nay\n\n  // Khi bắt đầu hoặc tạm dừng\n  const handleStartPause = () => {\n    if (isRunning) {\n      // Dừng interval\n      clearInterval(intervalRef.current);\n      setIsRunning(false);\n      // Không cần thêm thời gian đã trôi qua vào realTimeTaskCount nữa\n      setLastTaskStartTime(null); // Đặt lại mốc thời gian bắt đầu\n    } else {\n      // Bắt đầu đếm\n      setLastTaskStartTime(Date.now());\n      intervalRef.current = setInterval(() => {\n        setTodayDataTimeCount(prev => {\n          return prev.map(task => {\n            if (task.name === selectedTaskName) {\n              return {\n                ...task,\n                realTimeTaskCount: task.realTimeTaskCount + 1\n              };\n            }\n            return task;\n          });\n        });\n      }, 1000);\n      setIsRunning(true);\n    }\n  };\n\n  // Update list todayDatatimeCount every newDay\n  useEffect(() => {\n    setTodayDataTimeCount(tasksForToday.map(task => {\n      const taskTimeSlot = calculateTimeSlot(task.startTime, task.endTime);\n      const [hours, minutes] = taskTimeSlot.split(\":\").map(Number);\n      const totalTimeSlotInSeconds = hours * 3600 + minutes * 60;\n      return {\n        name: task.name,\n        date: new Date().toDateString(),\n        realTimeTaskCount: 0,\n        // Ban đầu chưa có thời gian thực hiện\n        timeSlot: `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:00`,\n        // Định dạng hh:mm:ss\n        totalTimeSlotInSeconds,\n        // Lưu thêm tổng thời gian tính bằng giây\n        status: \"0%\" // Phần trăm hoàn thành ban đầu\n      };\n    }));\n  }, [tasksForToday]);\n  const [pomodoroCount, setPomodoroCount] = useState(0); // Số lần Pomodoro hoàn thành\n  // Skip process pomodoro\n  const handleSkip = () => {\n    if (currentMode === \"pomodoro\") {\n      setPomodoroCount(prevCount => {\n        const newCount = prevCount + 1;\n        if (newCount % 4 === 0) {\n          // Sau 3 lần nghỉ ngắn, nghỉ dài\n          setCurrentMode(\"long-break\");\n          setTimeLeft(900); // Long Break - 15 phút\n        } else {\n          setCurrentMode(\"short-break\");\n          setTimeLeft(300); // Short Break - 5 phút\n        }\n        return newCount;\n      });\n    } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\n      setCurrentMode(\"pomodoro\");\n      setTimeLeft(1500); // Pomodoro - 25 phút\n    }\n  };\n\n  // THỜI GIAN CHO COUNTDOWN TIME\n  useEffect(() => {\n    let countdownTimer;\n    if (isTaskSelected && isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\n      countdownTimer = setInterval(() => {\n        setCountdownTimeTask(prev => Math.max(prev - 1, 0)); // Đảm bảo không giảm dưới 0\n      }, 1000);\n    }\n    return () => clearInterval(countdownTimer);\n  }, [isRunning, isTaskSelected, currentMode, isFreeMode]);\n\n  // Pomodoro logic decrease timeLeft\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n\n  // Freemode count time\n  useEffect(() => {\n    let freeModeTimer;\n    if (isFreeMode && isRunning) {\n      freeModeTimer = setInterval(() => {\n        setFreeModeTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(freeModeTimer);\n  }, [isFreeMode, isRunning]);\n\n  // Chọn và bỏ chọn task\n  const handleSelectTaskBlock = taskName => {\n    // Nếu AutoSelect đang bật và người dùng thao tác chọn task, tắt AutoSelect\n    if (isAutoSelectEnabled) {\n      setIsAutoSelectEnabled(false);\n    }\n\n    // Nếu chọn lại task đang được chọn, bỏ chọn\n    if (selectedTaskName === taskName) {\n      if (isRunning) {\n        clearInterval(intervalRef.current); // Dừng interval đếm thời gian\n      }\n      setSelectedTaskName(null);\n      setIsTaskSelected(false);\n      setCountdownTimeTask(0);\n      setLastTaskStartTime(null);\n      setIsRunning(false); // Tạm dừng đếm\n      return;\n    }\n\n    // Chuyển sang task mới\n    const selectedTask = tasksForToday.find(task => task.name === taskName);\n    setSelectedTaskName(taskName);\n    if (selectedTask) {\n      const taskTimeSlotInSeconds = taskTimeSlotToSeconds(calculateTimeSlot(selectedTask.startTime, selectedTask.endTime));\n      const taskData = todayDataTimeCount.find(task => task.name === taskName);\n      const taskWorkedTime = taskData ? taskData.realTimeTaskCount : 0;\n\n      // Đảm bảo countdown không âm\n      const remainingTime = Math.max(taskTimeSlotInSeconds - taskWorkedTime, 0);\n      setCountdownTimeTask(remainingTime);\n      setIsTaskSelected(true);\n      setLastTaskStartTime(null); // Reset thời gian bắt đầu cho task mới\n    } else {\n      setCountdownTimeTask(0);\n      setIsTaskSelected(false);\n    }\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 6000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    if (currentMode === \"short-break\" || currentMode === \"long-break\") {\n      setIsRunning(false); // Dừng đếm ngược\n    }\n  }, [currentMode]);\n\n  // Tự động cuộn đến current-time-line khi mở trang\n  useEffect(() => {\n    if (timelineRef.current) {\n      const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\n      timelineRef.current.scrollTo({\n        top: currentTimePosition - 50,\n        // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\n        behavior: \"smooth\"\n      });\n    }\n  }, [currentTime]);\n\n  // Calculate tasks for today\n  const calculateTasksForToday = useCallback(() => {\n    const today = new Date();\n    const tasks = [];\n    Object.values(works).flat().forEach(work => {\n      const workStartDate = new Date(work.startDate);\n      const workEndDate = new Date(work.endDate);\n      work.subWorks.forEach(task => {\n        const {\n          startTime,\n          endTime,\n          repeatOption,\n          customRepeat = {}\n        } = task;\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\n        let validDates = [];\n        if (repeatOption === \"Không lặp lại\") {\n          validDates = [workStartDate];\n        } else if (repeatOption === \"Hàng ngày\") {\n          let currentDate = new Date(workStartDate);\n          while (currentDate <= workEndDate) {\n            validDates.push(new Date(currentDate));\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n        } else if (repeatOption === \"Tùy chỉnh\") {\n          const {\n            repeatEvery = 1,\n            repeatUnit = \"ngày\",\n            startDate,\n            repeatDays = []\n          } = customRepeat;\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\n          let currentDate = new Date(taskStartDate);\n          if (repeatUnit === \"ngày\") {\n            while (currentDate <= workEndDate) {\n              validDates.push(new Date(currentDate));\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\n            }\n          } else if (repeatUnit === \"tuần\") {\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\n            while (currentDate <= workEndDate) {\n              const dayOfWeek = dayMapping[currentDate.getDay()];\n              if (repeatDays.includes(dayOfWeek)) {\n                validDates.push(new Date(currentDate));\n              }\n              currentDate.setDate(currentDate.getDate() + 1);\n            }\n          }\n        }\n        validDates.forEach(date => {\n          if (date.toDateString() === today.toDateString()) {\n            tasks.push({\n              ...task,\n              workName: work.name,\n              startTime: new Date(today.setHours(startHour, startMinute)),\n              endTime: new Date(today.setHours(endHour, endMinute))\n            });\n          }\n        });\n      });\n    });\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\n    setTasksForToday(sortedTasks);\n  }, [works]);\n  const autoSelectTask = useCallback(() => {\n    if (!isAutoSelectEnabled) {\n      setIsAutoSelectEnabled(true); // Đảm bảo trạng thái AutoSelect luôn bật\n    }\n    const availableTasks = todayDataTimeCount.filter(task => parseInt(task.status.replace(\"%\", \"\"), 10) < 100);\n    if (availableTasks.length === 0) return; // Không có task nào khả dụng\n\n    let selectedTask = null;\n\n    // Ưu tiên chọn task theo chế độ xem\n    if (viewMode === \"byPercent\") {\n      availableTasks.sort((a, b) => {\n        const percentA = parseInt(a.status.replace(\"%\", \"\"), 10);\n        const percentB = parseInt(b.status.replace(\"%\", \"\"), 10);\n        if (percentA !== percentB) return percentB - percentA;\n        return a.totalTimeSlotInSeconds - b.totalTimeSlotInSeconds;\n      });\n    } else if (viewMode === \"byTime\") {\n      const currentMinutes = currentTime.getHours() * 60 + currentTime.getMinutes();\n      availableTasks.sort((a, b) => {\n        var _tasksForToday$find, _tasksForToday$find$s, _tasksForToday$find2, _tasksForToday$find2$, _tasksForToday$find3, _tasksForToday$find3$, _tasksForToday$find4, _tasksForToday$find4$;\n        const taskAStartMinutes = ((_tasksForToday$find = tasksForToday.find(task => task.name === a.name)) === null || _tasksForToday$find === void 0 ? void 0 : (_tasksForToday$find$s = _tasksForToday$find.startTime) === null || _tasksForToday$find$s === void 0 ? void 0 : _tasksForToday$find$s.getHours()) * 60 + ((_tasksForToday$find2 = tasksForToday.find(task => task.name === a.name)) === null || _tasksForToday$find2 === void 0 ? void 0 : (_tasksForToday$find2$ = _tasksForToday$find2.startTime) === null || _tasksForToday$find2$ === void 0 ? void 0 : _tasksForToday$find2$.getMinutes()) || Infinity;\n        const taskBStartMinutes = ((_tasksForToday$find3 = tasksForToday.find(task => task.name === b.name)) === null || _tasksForToday$find3 === void 0 ? void 0 : (_tasksForToday$find3$ = _tasksForToday$find3.startTime) === null || _tasksForToday$find3$ === void 0 ? void 0 : _tasksForToday$find3$.getHours()) * 60 + ((_tasksForToday$find4 = tasksForToday.find(task => task.name === b.name)) === null || _tasksForToday$find4 === void 0 ? void 0 : (_tasksForToday$find4$ = _tasksForToday$find4.startTime) === null || _tasksForToday$find4$ === void 0 ? void 0 : _tasksForToday$find4$.getMinutes()) || Infinity;\n        const diffA = Math.abs(taskAStartMinutes - currentMinutes);\n        const diffB = Math.abs(taskBStartMinutes - currentMinutes);\n        if (diffA !== diffB) return diffA - diffB;\n        return a.totalTimeSlotInSeconds - b.totalTimeSlotInSeconds;\n      });\n    }\n    selectedTask = availableTasks[0];\n\n    // Nếu task hiện tại đã là ưu tiên, không thay đổi\n    if (selectedTaskName === selectedTask.name) return;\n\n    // Nếu task hiện tại không phải ưu tiên, chọn lại\n    handleSelectTaskBlock(selectedTask.name);\n  }, [isAutoSelectEnabled, todayDataTimeCount, viewMode, tasksForToday, currentTime, selectedTaskName]);\n\n  // cập nhật danh sách taskFortoday\n  useEffect(() => {\n    if (mode === \"auto\") {\n      calculateTasksForToday();\n    }\n  }, [mode, calculateTasksForToday]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const now = new Date();\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\n        calculateTasksForToday(); // Làm mới danh sách task\n      }\n    }, 60000); // Kiểm tra mỗi phút\n    return () => clearInterval(timer);\n  }, [calculateTasksForToday]);\n  const renderTaskOnTimeline = task => {\n    const taskStart = task.startTime;\n    const taskEnd = task.endTime;\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\n\n    // Kiểm tra trạng thái của task\n    const isSelected = selectedTaskName === task.name;\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-block ${isSelected ? \"selected\" : \"\"} ${isDimmed ? \"dimmed\" : \"\"}`,\n      style: {\n        top: `${startMinutes}px`,\n        height: `${endMinutes - startMinutes}px`\n      },\n      onClick: () => handleSelectTaskBlock(task.name),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-name\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"select-task-button\",\n        children: isSelected ? \"Deselect\" : \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this)]\n    }, task.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }, this);\n  };\n  const calculateTimeSlot = (startTime, endTime) => {\n    const diff = new Date(endTime - startTime);\n    const hours = diff.getUTCHours();\n    const minutes = diff.getUTCMinutes();\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\n  };\n  const getPomodoroBackground = () => {\n    if (isFreeMode) return \"#d4b3e9\"; // Màu tím pastel cho chế độ tự do\n    switch (currentMode) {\n      case \"pomodoro\":\n        return \"#56daeb\";\n      // Xanh ngọc bích\n      case \"short-break\":\n        return \"#a8d5ba\";\n      // Xanh lá pastel\n      case \"long-break\":\n        return \"#f6e58d\";\n      // Vàng chanh\n      default:\n        return \"#f9f9f9\";\n      // Mặc định\n    }\n  };\n  const taskTimeSlotToSeconds = timeSlot => {\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\n    return hours * 3600 + minutes * 60;\n  };\n  const handleModeChange = newMode => {\n    // Dừng đồng hồ khi chuyển đổi chế độ\n    setIsRunning(false); // Dừng tất cả các bộ đếm\n    setLastTaskStartTime(null); // Reset mốc thời gian bắt đầu\n    setTimeLeft(1500); // Reset thời gian Pomodoro về 25 phút\n    setFreeModeTime(0); // Reset thời gian đếm tự do về 0\n\n    // Bỏ chọn task và work\n    setSelectedTaskName(null); // Hủy chọn task hiện tại\n    setIsTaskSelected(false); // Đặt lại trạng thái task đã chọn\n    setCurrentTaskManual(null); // Đặt lại task thủ công\n    setSelectedWork(null); // Đặt lại work được chọn\n    setSelectedTask(null); // Đặt lại task trong work\n    setTempWork(null); // Reset work tạm thời\n    setTempTask(null); // Reset task tạm thời\n\n    // Cập nhật chế độ\n    setMode(newMode);\n\n    // Đặt lại các trạng thái liên quan nếu cần theo chế độ mới\n    if (newMode === \"pomodoro\") {\n      setIsFocusPhase(true);\n    } else if (newMode === \"short-break\") {\n      setTimeLeft(300); // Reset thời gian nghỉ ngắn về 5 phút\n    } else if (newMode === \"long-break\") {\n      setTimeLeft(900); // Reset thời gian nghỉ dài về 15 phút\n    } else if (newMode === \"free\") {\n      setFreeModeTime(0); // Reset đồng hồ đếm tự do\n    }\n  };\n  const openManualSelectModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(true);\n  };\n  const handleManualSelectWork = work => {\n    setTempWork(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === work.id ? null : work);\n    setTempTask(null);\n  };\n  const handleManualSelectTask = task => {\n    setTempTask(prev => (prev === null || prev === void 0 ? void 0 : prev.name) === task.name ? null : task);\n  };\n  const handleManualSelectionDone = () => {\n    setSelectedWork(tempWork);\n    setSelectedTask(tempTask);\n    setCurrentTaskManual(tempTask ? {\n      ...tempTask,\n      workName: tempWork.name,\n      workStartDate: tempWork.startDate,\n      workEndDate: tempWork.endDate,\n      startTime: new Date(`1970-01-01T${tempTask.startTime}:00`),\n      endTime: new Date(`1970-01-01T${tempTask.endTime}:00`)\n    } : null);\n    if (tempTask) {\n      const taskTimeSlot = calculateTimeSlot(new Date(`1970-01-01T${tempTask.startTime}:00`), new Date(`1970-01-01T${tempTask.endTime}:00`));\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot));\n      setIsTaskSelected(true);\n    } else {\n      setCountdownTimeTask(0);\n      setIsTaskSelected(false);\n    }\n    setIsModalOpen(false);\n  };\n  const closeModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(false);\n  };\n  const selectedTaskData = todayDataTimeCount.find(task => task.name === selectedTaskName);\n  const percentCompleted = selectedTaskData ? parseInt(selectedTaskData.status.replace('%', ''), 10) : 0; // Nếu không tìm thấy, mặc định là 0\n  const sortedTodayDataTimeCount = useMemo(() => {\n    if (viewMode === \"byPercent\") {\n      return [...todayDataTimeCount].sort((a, b) => {\n        const percentA = parseInt(a.status.replace(\"%\", \"\"), 10);\n        const percentB = parseInt(b.status.replace(\"%\", \"\"), 10);\n        if (percentA !== percentB) {\n          return percentB - percentA; // Sắp xếp theo phần trăm giảm dần\n        }\n        if (a.totalTimeSlotInSeconds !== b.totalTimeSlotInSeconds) {\n          return b.totalTimeSlotInSeconds - a.totalTimeSlotInSeconds; // Sắp xếp theo timeslot giảm dần\n        }\n        return a.name.localeCompare(b.name); // Sắp xếp theo thứ tự chữ cái\n      });\n    }\n    return todayDataTimeCount;\n  }, [todayDataTimeCount, viewMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"today-data-toggle\",\n          onClick: () => setIsTodayDataVisible(prev => !prev),\n          children: \"TODAY-DataTimeCount \\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 5\n        }, this), isTodayDataVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today-data-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"today-data-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Today: \", new Date().toDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"view-mode-selector\",\n              value: viewMode,\n              onChange: e => setViewMode(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"byTime\",\n                children: \"By Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"byPercent\",\n                children: \"By Percent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 660,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: sortedTodayDataTimeCount.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [task.name, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [formatTime(task.realTimeTaskCount), \" / \", task.timeSlot]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 15\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 15\n              }, this), \" \"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-task\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar-todaytask-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar-todaytask\",\n            style: {\n              width: `${Math.min(percentCompleted, 100)}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 9\n        }, this), isTaskSelected ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"countdown-text\",\n          children: formatTime(countdownTimeTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"countdown-text\",\n          children: \"Select task!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"focus-modes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n          onClick: () => handleModeChange(\"auto\"),\n          children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            handleModeChange(\"manual\");\n            openManualSelectModal();\n          },\n          children: \"T\\u1EF1 ch\\u1ECDn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n          onClick: () => handleModeChange(\"free\"),\n          children: \"T\\u1EF1 do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 709,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"autoselect-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autoselect-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"autoselect-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Total Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: formatTime(totalRealTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"autoselect-stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"Completed:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value\",\n              children: `${completedTaskCount}/${totalTasks}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `autoselect-button ${isAutoSelectEnabled ? \"on\" : \"off\"}`,\n          onClick: () => {\n            setIsAutoSelectEnabled(prev => {\n              const newState = !prev;\n              if (newState) {\n                // Nếu bật AutoSelect\n                autoSelectTask(); // Tự động chọn task\n              }\n              return newState;\n            });\n          },\n          children: isAutoSelectEnabled ? \"ON\" : \"OFF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        ref: timelineRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-line\",\n            style: {\n              \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\n              top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 25\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-block\",\n            style: {\n              top: `${hour * 60}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-marker\",\n              children: hour < 10 ? `0${hour}:00` : `${hour}:00`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 766,\n              columnNumber: 17\n            }, this)]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 753,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 752,\n        columnNumber: 9\n      }, this), mode === \"auto\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"T\\u1ED5ng s\\u1ED1 task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: tasksForToday.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 11\n        }, this), tasksForToday.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TimeSlot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasksForToday.map((task, index) => {\n              const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `task-list-item ${selectedTaskName === task.name ? \"selected\" : \"\"}`,\n                onClick: () => handleSelectTaskBlock(task.name),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 799,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.workName || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [task.startTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  }), \" \", \"-\", \" \", task.endTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: timeSlot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 814,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 792,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Task Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => alert(\"Daily form is not implemented yet.\"),\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => setNoteContent(\"\"),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"note-input\",\n            className: \"note-label\",\n            children: \"Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 839,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"note-input\",\n            className: \"note-input\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value),\n            placeholder: \"Write your notes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 840,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 7\n    }, this), mode === \"manual\" && currentTaskManual && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task hi\\u1EC7n t\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Th\\u1EDDi gian:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.startTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        }), \" \", \"-\", \" \", currentTaskManual.endTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ng\\xE0y Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 877,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workStartDate, \" -\", \" \", currentTaskManual.workEndDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timeslot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 13\n        }, this), \" \", calculateTimeSlot(new Date(currentTaskManual.startTime), new Date(currentTaskManual.endTime))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 880,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro-timer\",\n      style: {\n        backgroundColor: getPomodoroBackground()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"swap-icon\",\n          onClick: toggleFreeMode,\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-modes\",\n          children: !isFreeMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"pomodoro\");\n                handleModeChange(\"pomodoro\");\n              },\n              children: \"Pomodoro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"short-break\");\n                handleModeChange(\"short-break\");\n              },\n              children: \"Short-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 908,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"long-break\");\n                handleModeChange(\"long-break\");\n              },\n              children: \"Long-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 917,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`,\n            onClick: () => {\n              if (!isFreeMode) {\n                toggleFreeMode();\n              } else {\n                setFreeModeTime(0);\n              }\n            },\n            children: \"Stopwatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 892,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(isFreeMode ? freeModeTime : timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 3\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\"),\n          disabled: !isTaskSelected,\n          children: isRunning ? \"Tạm dừng\" : \"Bắt đầu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 949,\n          columnNumber: 3\n        }, this), isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFreeModeTime(0),\n          children: \"K\\u1EBFt th\\xFAc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 7\n        }, this), !isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkip,\n          children: \"B\\u1ECF qua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 891,\n      columnNumber: 1\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(tempWork === null || tempWork === void 0 ? void 0 : tempWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 976,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ng\\xE0y: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 977,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 983,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"focus-button\",\n              onClick: handleManualSelectionDone,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 986,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-close\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 15\n          }, this), tempWork && tempWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tempWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(tempTask === null || tempTask === void 0 ? void 0 : tempTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1004,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\u1EDDi gian: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1005,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 997,\n              columnNumber: 21\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u1ECDn m\\u1ED9t Work \\u0111\\u1EC3 xem Task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1012,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 984,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"dux90md8o6B1+RFV8apdxm49HsY=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTaskManual","setCurrentTaskManual","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timelineRef","selectedTaskName","setSelectedTaskName","noteContent","setNoteContent","isFreeMode","setIsFreeMode","freeModeTime","setFreeModeTime","currentMode","setCurrentMode","countdownTimeTask","setCountdownTimeTask","isTaskSelected","setIsTaskSelected","todayDataTimeCount","setTodayDataTimeCount","isTodayDataVisible","setIsTodayDataVisible","lastTaskStartTime","setLastTaskStartTime","intervalRef","viewMode","setViewMode","isAutoSelectEnabled","setIsAutoSelectEnabled","toggleFreeMode","setPomodoroCount","prevCount","newCount","handlePomodoroComplete","prev","info","success","clearInterval","current","setInterval","map","task","name","updatedRealTime","realTimeTaskCount","percentCompleted","Math","floor","totalTimeSlotInSeconds","status","totalRealTime","reduce","total","completedTaskCount","filter","parseInt","replace","length","totalTasks","handleStartPause","now","taskTimeSlot","calculateTimeSlot","startTime","endTime","hours","minutes","split","Number","date","toDateString","timeSlot","toString","padStart","pomodoroCount","handleSkip","countdownTimer","max","timer","freeModeTimer","handleSelectTaskBlock","taskName","find","taskTimeSlotInSeconds","taskTimeSlotToSeconds","taskData","taskWorkedTime","remainingTime","formatTime","seconds","secs","currentTimePosition","getHours","getMinutes","scrollTo","top","behavior","calculateTasksForToday","today","tasks","Object","values","flat","forEach","work","workStartDate","startDate","workEndDate","endDate","subWorks","repeatOption","customRepeat","startHour","startMinute","endHour","endMinute","validDates","currentDate","push","setDate","getDate","repeatEvery","repeatUnit","repeatDays","taskStartDate","dayMapping","dayOfWeek","getDay","includes","workName","setHours","sortedTasks","sort","a","b","autoSelectTask","availableTasks","percentA","percentB","currentMinutes","_tasksForToday$find","_tasksForToday$find$s","_tasksForToday$find2","_tasksForToday$find2$","_tasksForToday$find3","_tasksForToday$find3$","_tasksForToday$find4","_tasksForToday$find4$","taskAStartMinutes","Infinity","taskBStartMinutes","diffA","abs","diffB","renderTaskOnTimeline","taskStart","taskEnd","startMinutes","endMinutes","isSelected","isDimmed","className","style","height","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","diff","getUTCHours","getUTCMinutes","getPomodoroBackground","handleModeChange","newMode","openManualSelectModal","handleManualSelectWork","id","handleManualSelectTask","handleManualSelectionDone","closeModal","selectedTaskData","sortedTodayDataTimeCount","localeCompare","value","onChange","e","target","index","width","min","newState","ref","Array","from","_","hour","toLocaleTimeString","minute","hour12","alert","htmlFor","placeholder","backgroundColor","error","disabled","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef, useMemo } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\r\n  // const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\r\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\r\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\r\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\"); // Lưu chế độ hiện tại\r\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0); // Thời gian đếm ngược\r\n  const [isTaskSelected, setIsTaskSelected] = useState(false); // Trạng thái task được chọn\r\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\r\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false); // Định nghĩa biến\r\n  const [lastTaskStartTime, setLastTaskStartTime] = useState(null);\r\n  const intervalRef = useRef(null);\r\n  const [viewMode, setViewMode] = useState(\"byTime\");\r\n  // Add state for AutoSelect\r\n  const [isAutoSelectEnabled, setIsAutoSelectEnabled] = useState(false);\r\n\r\n \r\n\r\n  const toggleFreeMode = () => {\r\n    if (isFreeMode) {\r\n      // Chuyển về chế độ Pomodoro\r\n      setIsFreeMode(false);\r\n      setFreeModeTime(0); // Reset thời gian tự do\r\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\r\n    } else {\r\n      // Chuyển sang chế độ tự do\r\n      setIsFreeMode(true);\r\n      setFreeModeTime(0); // Reset bộ đếm tự do về 0\r\n      setIsRunning(false); // Dừng đếm tự do\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      if (currentMode === \"pomodoro\") {\r\n        setPomodoroCount((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          if (newCount % 4 === 0) {\r\n            setCurrentMode(\"long-break\");\r\n            setTimeLeft(900); // Long Break - 15 phút\r\n          } else {\r\n            setCurrentMode(\"short-break\");\r\n            setTimeLeft(300); // Short Break - 5 phút\r\n          }\r\n          return newCount;\r\n        });\r\n      } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\r\n        setCurrentMode(\"pomodoro\");\r\n        setTimeLeft(1500); // Pomodoro - 25 phút\r\n      }\r\n    }\r\n  }, [timeLeft, currentMode]);\r\n  \r\n\r\n  // Chu kỳ Pomodoro\r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    if (isFocusPhase) {\r\n      setIsFocusPhase(false);\r\n      setCycle((prev) => prev + 1);\r\n      if ((cycle + 1) % 4 === 0) {\r\n        setTimeLeft(900);\r\n        toast.info(\"Long Break! Take a 15-minute rest.\");\r\n      } else {\r\n        setTimeLeft(300);\r\n        toast.info(\"Short Break! Take a 5-minute rest.\");\r\n      }\r\n    } else {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500);\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  }, [cycle, isFocusPhase, toast]);\r\n\r\n\r\n// Quản lý realTimeTaskCount khi đồng hồ chạy\r\nuseEffect(() => {\r\n  if (!isRunning || !selectedTaskName || currentMode !== \"pomodoro\") {\r\n    clearInterval(intervalRef.current);\r\n    return;\r\n  }\r\n\r\n  clearInterval(intervalRef.current);\r\n\r\n  intervalRef.current = setInterval(() => {\r\n    setTodayDataTimeCount((prev) =>\r\n      prev.map((task) => {\r\n        if (task.name === selectedTaskName) {\r\n          const updatedRealTime = task.realTimeTaskCount + 1;\r\n          const percentCompleted = Math.floor(\r\n            (updatedRealTime / task.totalTimeSlotInSeconds) * 100\r\n          );\r\n          return {\r\n            ...task,\r\n            realTimeTaskCount: updatedRealTime,\r\n            status: `${percentCompleted}%`, // Cập nhật phần trăm hoàn thành\r\n          };\r\n        }\r\n        return task;\r\n      })\r\n    );\r\n  }, 1000);\r\n\r\n  return () => clearInterval(intervalRef.current);\r\n}, [isRunning, selectedTaskName, currentMode]);\r\n\r\nconst totalRealTime = useMemo(() => {\r\n  // Tính tổng thời gian thực của tất cả các task\r\n  return todayDataTimeCount.reduce((total, task) => total + task.realTimeTaskCount, 0);\r\n}, [todayDataTimeCount]);\r\n\r\nconst completedTaskCount = useMemo(() => {\r\n  // Đếm số lượng task đã hoàn thành\r\n  return todayDataTimeCount.filter((task) => parseInt(task.status.replace('%', ''), 10) >= 100).length;\r\n}, [todayDataTimeCount]);\r\n\r\nconst totalTasks = todayDataTimeCount.length; // Tổng số task hôm nay\r\n\r\n\r\n// Khi bắt đầu hoặc tạm dừng\r\nconst handleStartPause = () => {\r\n  if (isRunning) {\r\n    // Dừng interval\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    // Không cần thêm thời gian đã trôi qua vào realTimeTaskCount nữa\r\n    setLastTaskStartTime(null); // Đặt lại mốc thời gian bắt đầu\r\n  } else {\r\n    // Bắt đầu đếm\r\n    setLastTaskStartTime(Date.now());\r\n    intervalRef.current = setInterval(() => {\r\n      setTodayDataTimeCount((prev) => {\r\n        return prev.map((task) => {\r\n          if (task.name === selectedTaskName) {\r\n            return { ...task, realTimeTaskCount: task.realTimeTaskCount + 1 };\r\n          }\r\n          return task;\r\n        });\r\n      });\r\n    }, 1000);\r\n    setIsRunning(true);\r\n  }\r\n};\r\n\r\n\r\n  // Update list todayDatatimeCount every newDay\r\n  useEffect(() => {\r\n    setTodayDataTimeCount(\r\n      tasksForToday.map((task) => {\r\n        const taskTimeSlot = calculateTimeSlot(task.startTime, task.endTime);\r\n        const [hours, minutes] = taskTimeSlot.split(\":\").map(Number);\r\n        const totalTimeSlotInSeconds = hours * 3600 + minutes * 60;\r\n  \r\n        return {\r\n          name: task.name,\r\n          date: new Date().toDateString(),\r\n          realTimeTaskCount: 0, // Ban đầu chưa có thời gian thực hiện\r\n          timeSlot: `${hours.toString().padStart(2, \"0\")}:${minutes\r\n            .toString()\r\n            .padStart(2, \"0\")}:00`, // Định dạng hh:mm:ss\r\n          totalTimeSlotInSeconds, // Lưu thêm tổng thời gian tính bằng giây\r\n          status: \"0%\", // Phần trăm hoàn thành ban đầu\r\n        };\r\n      })\r\n    );\r\n  }, [tasksForToday]);\r\n  \r\n  \r\n  \r\n\r\n  const [pomodoroCount, setPomodoroCount] = useState(0); // Số lần Pomodoro hoàn thành\r\n  // Skip process pomodoro\r\n  const handleSkip = () => {\r\n    if (currentMode === \"pomodoro\") {\r\n      setPomodoroCount((prevCount) => {\r\n        const newCount = prevCount + 1;\r\n        if (newCount % 4 === 0) {\r\n          // Sau 3 lần nghỉ ngắn, nghỉ dài\r\n          setCurrentMode(\"long-break\");\r\n          setTimeLeft(900); // Long Break - 15 phút\r\n        } else {\r\n          setCurrentMode(\"short-break\");\r\n          setTimeLeft(300); // Short Break - 5 phút\r\n        }\r\n        return newCount;\r\n      });\r\n    } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\r\n      setCurrentMode(\"pomodoro\");\r\n      setTimeLeft(1500); // Pomodoro - 25 phút\r\n    }\r\n  };\r\n\r\n  \r\n  // THỜI GIAN CHO COUNTDOWN TIME\r\n  useEffect(() => {\r\n    let countdownTimer;\r\n    if (isTaskSelected && isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\r\n      countdownTimer = setInterval(() => {\r\n        setCountdownTimeTask((prev) => Math.max(prev - 1, 0)); // Đảm bảo không giảm dưới 0\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(countdownTimer);\r\n  }, [isRunning, isTaskSelected, currentMode, isFreeMode]);\r\n  \r\n\r\n    // Pomodoro logic decrease timeLeft\r\n    useEffect(() => {\r\n      let timer;\r\n      if (isRunning && timeLeft > 0) {\r\n        timer = setInterval(() => {\r\n          setTimeLeft((prev) => prev - 1);\r\n        }, 1000);\r\n      } else if (timeLeft === 0) {\r\n        handlePomodoroComplete();\r\n      }\r\n      return () => clearInterval(timer);\r\n    }, [isRunning, timeLeft]);\r\n\r\n  // Freemode count time\r\n  useEffect(() => {\r\n    let freeModeTimer;\r\n    if (isFreeMode && isRunning) {\r\n      freeModeTimer = setInterval(() => {\r\n        setFreeModeTime((prev) => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(freeModeTimer);\r\n  }, [isFreeMode, isRunning]);\r\n  \r\n  // Chọn và bỏ chọn task\r\n  const handleSelectTaskBlock = (taskName) => {\r\n    // Nếu AutoSelect đang bật và người dùng thao tác chọn task, tắt AutoSelect\r\n    if (isAutoSelectEnabled) {\r\n      setIsAutoSelectEnabled(false);\r\n    }\r\n  \r\n    // Nếu chọn lại task đang được chọn, bỏ chọn\r\n    if (selectedTaskName === taskName) {\r\n      if (isRunning) {\r\n        clearInterval(intervalRef.current); // Dừng interval đếm thời gian\r\n      }\r\n      setSelectedTaskName(null);\r\n      setIsTaskSelected(false);\r\n      setCountdownTimeTask(0);\r\n      setLastTaskStartTime(null);\r\n      setIsRunning(false); // Tạm dừng đếm\r\n      return;\r\n    }\r\n  \r\n    // Chuyển sang task mới\r\n    const selectedTask = tasksForToday.find((task) => task.name === taskName);\r\n    setSelectedTaskName(taskName);\r\n  \r\n    if (selectedTask) {\r\n      const taskTimeSlotInSeconds = taskTimeSlotToSeconds(\r\n        calculateTimeSlot(selectedTask.startTime, selectedTask.endTime)\r\n      );\r\n      const taskData = todayDataTimeCount.find((task) => task.name === taskName);\r\n      const taskWorkedTime = taskData ? taskData.realTimeTaskCount : 0;\r\n  \r\n      // Đảm bảo countdown không âm\r\n      const remainingTime = Math.max(taskTimeSlotInSeconds - taskWorkedTime, 0);\r\n  \r\n      setCountdownTimeTask(remainingTime);\r\n      setIsTaskSelected(true);\r\n      setLastTaskStartTime(null); // Reset thời gian bắt đầu cho task mới\r\n    } else {\r\n      setCountdownTimeTask(0);\r\n      setIsTaskSelected(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n  \r\n  \r\n\r\n  // Update current time every minute\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 6000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentMode === \"short-break\" || currentMode === \"long-break\") {\r\n      setIsRunning(false); // Dừng đếm ngược\r\n    }\r\n  }, [currentMode]);\r\n  \r\n\r\n  // Tự động cuộn đến current-time-line khi mở trang\r\n  useEffect(() => {\r\n  if (timelineRef.current) {\r\n    const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\r\n    timelineRef.current.scrollTo({\r\n      top: currentTimePosition - 50, // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n}, [currentTime]);\r\n\r\n\r\n  // Calculate tasks for today\r\n  const calculateTasksForToday = useCallback(() => {\r\n    const today = new Date();\r\n    const tasks = [];\r\n\r\n    Object.values(works).flat().forEach((work) => {\r\n      const workStartDate = new Date(work.startDate);\r\n      const workEndDate = new Date(work.endDate);\r\n\r\n      work.subWorks.forEach((task) => {\r\n        const { startTime, endTime, repeatOption, customRepeat = {} } = task;\r\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n        let validDates = [];\r\n        if (repeatOption === \"Không lặp lại\") {\r\n          validDates = [workStartDate];\r\n        } else if (repeatOption === \"Hàng ngày\") {\r\n          let currentDate = new Date(workStartDate);\r\n          while (currentDate <= workEndDate) {\r\n            validDates.push(new Date(currentDate));\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n          }\r\n        } else if (repeatOption === \"Tùy chỉnh\") {\r\n          const { repeatEvery = 1, repeatUnit = \"ngày\", startDate, repeatDays = [] } = customRepeat;\r\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\r\n          let currentDate = new Date(taskStartDate);\r\n\r\n          if (repeatUnit === \"ngày\") {\r\n            while (currentDate <= workEndDate) {\r\n              validDates.push(new Date(currentDate));\r\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\r\n            }\r\n          } else if (repeatUnit === \"tuần\") {\r\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n            while (currentDate <= workEndDate) {\r\n              const dayOfWeek = dayMapping[currentDate.getDay()];\r\n              if (repeatDays.includes(dayOfWeek)) {\r\n                validDates.push(new Date(currentDate));\r\n              }\r\n              currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        validDates.forEach((date) => {\r\n          if (date.toDateString() === today.toDateString()) {\r\n            tasks.push({\r\n              ...task,\r\n              workName: work.name,\r\n              startTime: new Date(today.setHours(startHour, startMinute)),\r\n              endTime: new Date(today.setHours(endHour, endMinute)),\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\r\n    setTasksForToday(sortedTasks);\r\n  }, [works]);\r\n\r\n  const autoSelectTask = useCallback(() => {\r\n    if (!isAutoSelectEnabled) {\r\n      setIsAutoSelectEnabled(true); // Đảm bảo trạng thái AutoSelect luôn bật\r\n    }\r\n  \r\n    const availableTasks = todayDataTimeCount.filter(\r\n      (task) => parseInt(task.status.replace(\"%\", \"\"), 10) < 100\r\n    );\r\n  \r\n    if (availableTasks.length === 0) return; // Không có task nào khả dụng\r\n  \r\n    let selectedTask = null;\r\n  \r\n    // Ưu tiên chọn task theo chế độ xem\r\n    if (viewMode === \"byPercent\") {\r\n      availableTasks.sort((a, b) => {\r\n        const percentA = parseInt(a.status.replace(\"%\", \"\"), 10);\r\n        const percentB = parseInt(b.status.replace(\"%\", \"\"), 10);\r\n        if (percentA !== percentB) return percentB - percentA;\r\n        return a.totalTimeSlotInSeconds - b.totalTimeSlotInSeconds;\r\n      });\r\n    } else if (viewMode === \"byTime\") {\r\n      const currentMinutes = currentTime.getHours() * 60 + currentTime.getMinutes();\r\n      availableTasks.sort((a, b) => {\r\n        const taskAStartMinutes =\r\n          tasksForToday.find((task) => task.name === a.name)?.startTime?.getHours() * 60 +\r\n          tasksForToday.find((task) => task.name === a.name)?.startTime?.getMinutes() || Infinity;\r\n  \r\n        const taskBStartMinutes =\r\n          tasksForToday.find((task) => task.name === b.name)?.startTime?.getHours() * 60 +\r\n          tasksForToday.find((task) => task.name === b.name)?.startTime?.getMinutes() || Infinity;\r\n  \r\n        const diffA = Math.abs(taskAStartMinutes - currentMinutes);\r\n        const diffB = Math.abs(taskBStartMinutes - currentMinutes);\r\n  \r\n        if (diffA !== diffB) return diffA - diffB;\r\n        return a.totalTimeSlotInSeconds - b.totalTimeSlotInSeconds;\r\n      });\r\n    }\r\n  \r\n    selectedTask = availableTasks[0];\r\n  \r\n    // Nếu task hiện tại đã là ưu tiên, không thay đổi\r\n    if (selectedTaskName === selectedTask.name) return;\r\n  \r\n    // Nếu task hiện tại không phải ưu tiên, chọn lại\r\n    handleSelectTaskBlock(selectedTask.name);\r\n  }, [isAutoSelectEnabled, todayDataTimeCount, viewMode, tasksForToday, currentTime, selectedTaskName]);\r\n  \r\n\r\n  // cập nhật danh sách taskFortoday\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      calculateTasksForToday();\r\n    }\r\n  }, [mode, calculateTasksForToday]);\r\n\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const now = new Date();\r\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\r\n        calculateTasksForToday(); // Làm mới danh sách task\r\n      }\r\n    }, 60000); // Kiểm tra mỗi phút\r\n    return () => clearInterval(timer);\r\n  }, [calculateTasksForToday]);\r\n\r\n\r\n\r\n  \r\n\r\n  const renderTaskOnTimeline = (task) => {\r\n    const taskStart = task.startTime;\r\n    const taskEnd = task.endTime;\r\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\r\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\r\n  \r\n    // Kiểm tra trạng thái của task\r\n    const isSelected = selectedTaskName === task.name;\r\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\r\n  \r\n    return (\r\n      <div\r\n        className={`task-block ${isSelected ? \"selected\" : \"\"} ${\r\n          isDimmed ? \"dimmed\" : \"\"\r\n        }`}\r\n        style={{\r\n          top: `${startMinutes}px`,\r\n          height: `${endMinutes - startMinutes}px`,\r\n        }}\r\n        key={task.name}\r\n        onClick={() => handleSelectTaskBlock(task.name)} \r\n      >\r\n        <div className=\"task-name\">{task.name}</div>\r\n        <button className=\"select-task-button\">\r\n          {isSelected ? \"Deselect\" : \"Select\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const calculateTimeSlot = (startTime, endTime) => {\r\n    const diff = new Date(endTime - startTime);\r\n    const hours = diff.getUTCHours();\r\n    const minutes = diff.getUTCMinutes();\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n  \r\n  \r\n  const getPomodoroBackground = () => {\r\n    if (isFreeMode) return \"#d4b3e9\"; // Màu tím pastel cho chế độ tự do\r\n    switch (currentMode) {\r\n      case \"pomodoro\":\r\n        return \"#56daeb\"; // Xanh ngọc bích\r\n      case \"short-break\":\r\n        return \"#a8d5ba\"; // Xanh lá pastel\r\n      case \"long-break\":\r\n        return \"#f6e58d\"; // Vàng chanh\r\n      default:\r\n        return \"#f9f9f9\"; // Mặc định\r\n    }\r\n  };\r\n\r\n  const taskTimeSlotToSeconds = (timeSlot) => {\r\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\r\n    return hours * 3600 + minutes * 60;\r\n  };\r\n  \r\n  const handleModeChange = (newMode) => {\r\n    // Dừng đồng hồ khi chuyển đổi chế độ\r\n    setIsRunning(false); // Dừng tất cả các bộ đếm\r\n    setLastTaskStartTime(null); // Reset mốc thời gian bắt đầu\r\n    setTimeLeft(1500); // Reset thời gian Pomodoro về 25 phút\r\n    setFreeModeTime(0); // Reset thời gian đếm tự do về 0\r\n  \r\n    // Bỏ chọn task và work\r\n    setSelectedTaskName(null); // Hủy chọn task hiện tại\r\n    setIsTaskSelected(false); // Đặt lại trạng thái task đã chọn\r\n    setCurrentTaskManual(null); // Đặt lại task thủ công\r\n    setSelectedWork(null); // Đặt lại work được chọn\r\n    setSelectedTask(null); // Đặt lại task trong work\r\n    setTempWork(null); // Reset work tạm thời\r\n    setTempTask(null); // Reset task tạm thời\r\n  \r\n    // Cập nhật chế độ\r\n    setMode(newMode);\r\n  \r\n    // Đặt lại các trạng thái liên quan nếu cần theo chế độ mới\r\n    if (newMode === \"pomodoro\") {\r\n      setIsFocusPhase(true);\r\n    } else if (newMode === \"short-break\") {\r\n      setTimeLeft(300); // Reset thời gian nghỉ ngắn về 5 phút\r\n    } else if (newMode === \"long-break\") {\r\n      setTimeLeft(900); // Reset thời gian nghỉ dài về 15 phút\r\n    } else if (newMode === \"free\") {\r\n      setFreeModeTime(0); // Reset đồng hồ đếm tự do\r\n    }\r\n  };\r\n  \r\n\r\n\r\n  const openManualSelectModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(true);\r\n  };\r\n  \r\n  const handleManualSelectWork = (work) => {\r\n    setTempWork((prev) => (prev?.id === work.id ? null : work));\r\n    setTempTask(null);\r\n  };\r\n\r\n  const handleManualSelectTask = (task) => {\r\n    setTempTask((prev) => (prev?.name === task.name ? null : task));\r\n  };\r\n\r\n  const handleManualSelectionDone = () => {\r\n    setSelectedWork(tempWork);\r\n    setSelectedTask(tempTask);\r\n  \r\n    setCurrentTaskManual(\r\n      tempTask\r\n        ? {\r\n            ...tempTask,\r\n            workName: tempWork.name,\r\n            workStartDate: tempWork.startDate,\r\n            workEndDate: tempWork.endDate,\r\n            startTime: new Date(`1970-01-01T${tempTask.startTime}:00`),\r\n            endTime: new Date(`1970-01-01T${tempTask.endTime}:00`),\r\n          }\r\n        : null\r\n    );\r\n    if (tempTask) {\r\n      const taskTimeSlot = calculateTimeSlot(\r\n        new Date(`1970-01-01T${tempTask.startTime}:00`),\r\n        new Date(`1970-01-01T${tempTask.endTime}:00`)\r\n      );\r\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot));\r\n      setIsTaskSelected(true);\r\n    } else {\r\n      setCountdownTimeTask(0);\r\n      setIsTaskSelected(false);\r\n    }\r\n    \r\n    setIsModalOpen(false);\r\n  };\r\n  \r\n\r\n  const closeModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const selectedTaskData = todayDataTimeCount.find(\r\n    (task) => task.name === selectedTaskName\r\n  );\r\n  \r\n  const percentCompleted = selectedTaskData\r\n    ? parseInt(selectedTaskData.status.replace('%', ''), 10)\r\n    : 0; // Nếu không tìm thấy, mặc định là 0\r\n    const sortedTodayDataTimeCount = useMemo(() => {\r\n      if (viewMode === \"byPercent\") {\r\n        return [...todayDataTimeCount].sort((a, b) => {\r\n          const percentA = parseInt(a.status.replace(\"%\", \"\"), 10);\r\n          const percentB = parseInt(b.status.replace(\"%\", \"\"), 10);\r\n    \r\n          if (percentA !== percentB) {\r\n            return percentB - percentA; // Sắp xếp theo phần trăm giảm dần\r\n          }\r\n    \r\n          if (a.totalTimeSlotInSeconds !== b.totalTimeSlotInSeconds) {\r\n            return b.totalTimeSlotInSeconds - a.totalTimeSlotInSeconds; // Sắp xếp theo timeslot giảm dần\r\n          }\r\n    \r\n          return a.name.localeCompare(b.name); // Sắp xếp theo thứ tự chữ cái\r\n        });\r\n      }\r\n      return todayDataTimeCount;\r\n    }, [todayDataTimeCount, viewMode]);\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"container-row\">\r\n      <div className=\"today-data-container\">\r\n    <button\r\n      className=\"today-data-toggle\"\r\n      onClick={() => setIsTodayDataVisible((prev) => !prev)}\r\n    >\r\n      TODAY-DataTimeCount ▼\r\n    </button>\r\n    {isTodayDataVisible && (\r\n      <div className=\"today-data-content\">\r\n        <div className=\"today-data-header\">\r\n          <p>Today: {new Date().toDateString()}</p>\r\n          <select\r\n            className=\"view-mode-selector\"\r\n            value={viewMode}\r\n            onChange={(e) => setViewMode(e.target.value)}\r\n          >\r\n            <option value=\"byTime\">By Time</option>\r\n            <option value=\"byPercent\">By Percent</option>\r\n          </select>\r\n        </div>\r\n        <ul>\r\n          {sortedTodayDataTimeCount.map((task, index) => (\r\n            <li key={index}>\r\n              {task.name}{\" \"}\r\n              <strong>\r\n                {formatTime(task.realTimeTaskCount)} / {task.timeSlot}\r\n              </strong>{\" \"}\r\n              <span>{task.status}</span> {/* Hiển thị phần trăm hoàn thành */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )}\r\n  </div>\r\n\r\n      <div className=\"countdown-task\">\r\n        <div className=\"progress-bar-todaytask-container\">\r\n          <div\r\n            className=\"progress-bar-todaytask\"\r\n            style={{ width: `${Math.min(percentCompleted, 100)}%` }}\r\n          ></div>\r\n        </div>\r\n        {isTaskSelected ? (\r\n          <p className=\"countdown-text\">{formatTime(countdownTimeTask)}</p>\r\n        ) : (\r\n          <p className=\"countdown-text\">Select task!</p>\r\n        )}\r\n      </div>\r\n\r\n\r\n\r\n  <div className=\"focus-modes\">\r\n  <button\r\n    className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleModeChange(\"auto\")}\r\n  >\r\n    Tự động\r\n  </button>\r\n  <button\r\n    className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n    onClick={() => {handleModeChange(\"manual\");\r\n    openManualSelectModal();\r\n  }}\r\n  >\r\n    Tự chọn\r\n  </button>\r\n  <button\r\n    className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n    onClick={() => handleModeChange(\"free\")}\r\n  >\r\n    Tự do\r\n  </button>\r\n</div>\r\n\r\n</div>\r\n\r\n\r\n      <div className=\"focus-content\">\r\n      <div className=\"autoselect-container\">\r\n      <div className=\"autoselect-stats\">\r\n    <div className=\"autoselect-stat\">\r\n      <span className=\"stat-label\">Total Time:</span>\r\n      <span className=\"stat-value\">{formatTime(totalRealTime)}</span>\r\n    </div>\r\n    <div className=\"autoselect-stat\">\r\n      <span className=\"stat-label\">Completed:</span>\r\n      <span className=\"stat-value\">{`${completedTaskCount}/${totalTasks}`}</span>\r\n    </div>\r\n  </div>\r\n    <button\r\n      className={`autoselect-button ${isAutoSelectEnabled ? \"on\" : \"off\"}`}\r\n      onClick={() => {\r\n        setIsAutoSelectEnabled((prev) => {\r\n          const newState = !prev;\r\n\r\n          if (newState) {\r\n            // Nếu bật AutoSelect\r\n            autoSelectTask(); // Tự động chọn task\r\n          }\r\n\r\n          return newState;\r\n        });\r\n      }}\r\n    >\r\n      {isAutoSelectEnabled ? \"ON\" : \"OFF\"}\r\n  </button>\r\n</div>\r\n\r\n\r\n        <div className=\"timeline-container\" ref={timelineRef}>\r\n          <div className=\"timeline\">\r\n            <div\r\n              className=\"current-time-line\"\r\n              style={{\r\n                \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\r\n                top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`,\r\n              }}\r\n            ></div>\r\n            {Array.from({ length: 25 }).map((_, hour) => (\r\n              <div key={hour} className=\"hour-block\" style={{ top: `${hour * 60}px` }}>\r\n                <div className=\"hour-marker\">\r\n                  {hour < 10 ? `0${hour}:00` : `${hour}:00`}\r\n                </div>\r\n                <div className=\"hour-divider\"></div>\r\n              </div>\r\n            ))}\r\n            {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n          </div>\r\n        </div>\r\n                    {mode === \"auto\" && (\r\n          <div className=\"task-list\">\r\n          <h2>Today Task</h2>\r\n          <p>\r\n            Tổng số task: <strong>{tasksForToday.length}</strong>\r\n          </p>\r\n          {tasksForToday.length > 0 ? (\r\n            <table className=\"task-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Work</th>\r\n                  <th>Time</th>\r\n                  <th>TimeSlot</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasksForToday.map((task, index) => {\r\n                  const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\r\n                  return (\r\n                    <tr\r\n                      key={index}\r\n                      className={`task-list-item ${\r\n                        selectedTaskName === task.name ? \"selected\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSelectTaskBlock(task.name)}\r\n                    >\r\n                      <td>{task.name}</td>\r\n                      <td>{task.workName || \"N/A\"}</td>\r\n                      <td>\r\n                        {task.startTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}{\" \"}\r\n                        -{\" \"}\r\n                        {task.endTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}\r\n                      </td>\r\n                      <td>{timeSlot}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Empty Task Today</p>\r\n          )}\r\n        </div>\r\n        \r\n        )}\r\n        <div className=\"note-container\">\r\n          <div className=\"note-header\">\r\n            <button\r\n              className=\"note-button\"\r\n              onClick={() => alert(\"Daily form is not implemented yet.\")}\r\n            >\r\n              Daily\r\n            </button>\r\n            <button className=\"note-button\" onClick={() => setNoteContent(\"\")}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n          <div className=\"note-body\">\r\n            <label htmlFor=\"note-input\" className=\"note-label\">Note</label>\r\n            <textarea\r\n              id=\"note-input\"\r\n              className=\"note-input\"\r\n              value={noteContent}\r\n              onChange={(e) => setNoteContent(e.target.value)}\r\n              placeholder=\"Write your notes here...\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {mode === \"manual\" && currentTaskManual && (\r\n        <div className=\"task-select\">\r\n          <h2>Task hiện tại</h2>\r\n          <p>\r\n            <strong>Work:</strong> {currentTaskManual.workName}\r\n          </p>\r\n          <p>\r\n            <strong>Task:</strong> {currentTaskManual.name}\r\n          </p>\r\n          <p>\r\n            <strong>Thời gian:</strong>{\" \"}\r\n            {currentTaskManual.startTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}{\" \"}\r\n            -{\" \"}\r\n            {currentTaskManual.endTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Ngày Work:</strong> {currentTaskManual.workStartDate} -{\" \"}\r\n            {currentTaskManual.workEndDate}\r\n          </p>\r\n          <p>\r\n            <strong>Timeslot:</strong>{\" \"}\r\n            {calculateTimeSlot(\r\n              new Date(currentTaskManual.startTime),\r\n              new Date(currentTaskManual.endTime)\r\n            )}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n\r\n<div className=\"pomodoro-timer\" style={{ backgroundColor: getPomodoroBackground() }}>\r\n  <div className=\"pomodoro-header\">\r\n    <span className=\"swap-icon\" onClick={toggleFreeMode}>\r\n      🔄\r\n    </span>\r\n    <div className=\"pomodoro-modes\">\r\n  {!isFreeMode ? (\r\n    <>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"pomodoro\");\r\n          handleModeChange(\"pomodoro\");\r\n        }}\r\n      >\r\n        Pomodoro\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"short-break\");\r\n          handleModeChange(\"short-break\");\r\n        }}\r\n      >\r\n        Short-break\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"long-break\");\r\n          handleModeChange(\"long-break\");\r\n        }}\r\n      >\r\n        Long-break\r\n      </span>\r\n    </>\r\n  ) : (\r\n    <span\r\n  className={`pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`}\r\n  onClick={() => {\r\n    if (!isFreeMode) {\r\n      toggleFreeMode();\r\n    } else {\r\n      setFreeModeTime(0);\r\n    }\r\n  }}\r\n>\r\n  Stopwatch\r\n</span>\r\n\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n  <p>{formatTime(isFreeMode ? freeModeTime : timeLeft)}</p> {/* Hiển thị thời gian */}\r\n  <div className=\"timer-controls\">\r\n  <button\r\n  onClick={isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\")}\r\n  disabled={!isTaskSelected}\r\n>\r\n  {isRunning ? \"Tạm dừng\" : \"Bắt đầu\"}\r\n</button>\r\n\r\n    {isFreeMode && (\r\n      <button onClick={() => setFreeModeTime(0)}>Kết thúc</button>\r\n    )}\r\n    {!isFreeMode && <button onClick={handleSkip}>Bỏ qua</button>}\r\n  </div>\r\n</div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Danh sách Work</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${\r\n                    tempWork?.id === work.id ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>\r\n                    Ngày: {work.startDate} - {work.endDate}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"focus-button\" onClick={handleManualSelectionDone}>\r\n                  Done\r\n                </button>\r\n                <button className=\"modal-close\" onClick={closeModal}>\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <h2>Danh sách Task</h2>\r\n              {tempWork && tempWork.subWorks ? (\r\n                <>\r\n                  {tempWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${\r\n                        tempTask?.name === task.name ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>\r\n                        Thời gian: {task.startTime} - {task.endTime}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>Chọn một Work để xem Task.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}