{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\ResetPass.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./styles/forgotpass.css\";\nimport axios from \"axios\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPass = ({\n  toast\n}) => {\n  _s();\n  const {\n    id,\n    token\n  } = useParams();\n  const [newPassword, setNewPassword] = useState(\"\");\n  const navigate = useNavigate();\n  axios.defaults.withCredentials = true;\n  function resetPass(e) {\n    e.preventDefault();\n    axios.post(`${process.env.REACT_APP_API_URL}/resetPassword/${id}/${token}`, {\n      newPassword\n    }).then(res => {\n      if (res.data.Status === \"success\") {\n        toast.success(\"Password updated successfully\");\n        navigate(\"/\");\n      }\n    }).catch(err => console.log(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-con\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"reset password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"new pass\",\n      children: \"Enter your new password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"\",\n      placeholder: \"Password\",\n      id: \"\",\n      onChange: e => setNewPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetPass,\n      children: \"submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPass, \"5c3n2zamR8gfOdIFuw/lbp/mrV4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPass;\nexport default ResetPass;\nvar _c;\n$RefreshReg$(_c, \"ResetPass\");","map":{"version":3,"names":["React","useState","axios","useNavigate","useParams","jsxDEV","_jsxDEV","ResetPass","toast","_s","id","token","newPassword","setNewPassword","navigate","defaults","withCredentials","resetPass","e","preventDefault","post","process","env","REACT_APP_API_URL","then","res","data","Status","success","catch","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","placeholder","onChange","target","value","onClick","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/ResetPass.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./styles/forgotpass.css\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\n\r\nconst ResetPass = ({ toast }) => {\r\n  const { id, token } = useParams();\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  axios.defaults.withCredentials = true;\r\n\r\n  function resetPass(e) {\r\n    e.preventDefault();\r\n    axios\r\n      .post(`${process.env.REACT_APP_API_URL}/resetPassword/${id}/${token}`, {\r\n        newPassword,\r\n      })\r\n      .then((res) => {\r\n        if (res.data.Status === \"success\") {\r\n          toast.success(\"Password updated successfully\");\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"forgot-con\">\r\n      <h3>reset password</h3>\r\n      <label htmlFor=\"new pass\">Enter your new password</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"\"\r\n        placeholder=\"Password\"\r\n        id=\"\"\r\n        onChange={(e) => setNewPassword(e.target.value)}\r\n      />\r\n      <button onClick={resetPass}>submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPass;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,yBAAyB;AAChC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC/B,MAAM;IAAEC,EAAE;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAC,CAAC;EACjC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9BD,KAAK,CAACa,QAAQ,CAACC,eAAe,GAAG,IAAI;EAErC,SAASC,SAASA,CAACC,CAAC,EAAE;IACpBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBjB,KAAK,CACFkB,IAAI,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,kBAAkBb,EAAE,IAAIC,KAAK,EAAE,EAAE;MACrEC;IACF,CAAC,CAAC,CACDY,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACjCnB,KAAK,CAACoB,OAAO,CAAC,+BAA+B,CAAC;QAC9Cd,QAAQ,CAAC,GAAG,CAAC;MACf;IACF,CAAC,CAAC,CACDe,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACrC;EAEA,oBACExB,OAAA;IAAK2B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB5B,OAAA;MAAA4B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhC,OAAA;MAAOiC,OAAO,EAAC,UAAU;MAAAL,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACzDhC,OAAA;MACEkC,IAAI,EAAC,UAAU;MACfC,IAAI,EAAC,EAAE;MACPC,WAAW,EAAC,UAAU;MACtBhC,EAAE,EAAC,EAAE;MACLiC,QAAQ,EAAGzB,CAAC,IAAKL,cAAc,CAACK,CAAC,CAAC0B,MAAM,CAACC,KAAK;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFhC,OAAA;MAAQwC,OAAO,EAAE7B,SAAU;MAAAiB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAnCIF,SAAS;EAAA,QACSH,SAAS,EAEdD,WAAW;AAAA;AAAA4C,EAAA,GAHxBxC,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}