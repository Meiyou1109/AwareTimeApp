{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\n  const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\n  const [noteContent, setNoteContent] = useState(\"\");\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\"); // Lưu chế độ hiện tại\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0); // Thời gian đếm ngược\n  const [isTaskSelected, setIsTaskSelected] = useState(false); // Trạng thái task được chọn\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false); // Định nghĩa biến\n\n  // Pomodoro logic\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n  const toggleFreeMode = () => {\n    if (isFreeMode) {\n      // Chuyển về chế độ Pomodoro\n      setIsFreeMode(false);\n      setFreeModeTime(0); // Reset thời gian tự do\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\n    } else {\n      // Chuyển sang chế độ tự do\n      setIsFreeMode(true);\n      setFreeModeTime(0); // Reset bộ đếm tự do về 0\n      setIsRunning(false); // Dừng đếm tự do\n    }\n  };\n\n  // Free count time\n  useEffect(() => {\n    let freeModeTimer;\n    if (isFreeMode && isRunning) {\n      freeModeTimer = setInterval(() => {\n        setFreeModeTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(freeModeTimer);\n  }, [isFreeMode, isRunning]);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      if (currentMode === \"pomodoro\") {\n        setPomodoroCount(prevCount => {\n          const newCount = prevCount + 1;\n          if (newCount % 4 === 0) {\n            setCurrentMode(\"long-break\");\n            setTimeLeft(900); // Long Break - 15 phút\n          } else {\n            setCurrentMode(\"short-break\");\n            setTimeLeft(300); // Short Break - 5 phút\n          }\n          return newCount;\n        });\n      } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\n        setCurrentMode(\"pomodoro\");\n        setTimeLeft(1500); // Pomodoro - 25 phút\n      }\n    }\n  }, [timeLeft, currentMode]);\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    if (isFocusPhase) {\n      setIsFocusPhase(false);\n      setCycle(prev => prev + 1);\n      if ((cycle + 1) % 4 === 0) {\n        setTimeLeft(900);\n        toast.info(\"Long Break! Take a 15-minute rest.\");\n      } else {\n        setTimeLeft(300);\n        toast.info(\"Short Break! Take a 5-minute rest.\");\n      }\n    } else {\n      setIsFocusPhase(true);\n      setTimeLeft(1500);\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  }, [cycle, isFocusPhase, toast]);\n  const handleStartPause = () => {\n    if (!isRunning) {\n      // Không thay đổi currentMode ở đây nữa\n      setIsRunning(true);\n    } else {\n      setIsRunning(false);\n    }\n  };\n  useEffect(() => {\n    setTodayDataTimeCount(tasksForToday.map(task => {\n      const taskTimeSlot = calculateTimeSlot(task.startTime, task.endTime);\n      const [hours, minutes] = taskTimeSlot.split(\":\").map(Number);\n      return {\n        name: task.name,\n        date: new Date().toDateString(),\n        realTimeTaskCount: 0,\n        // Ban đầu chưa có thời gian thực hiện\n        timeSlot: `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:00`,\n        // Định dạng hh:mm:ss\n        status: \"pending-today\" // Ban đầu đặt là chờ thực hiện\n      };\n    }));\n  }, [tasksForToday]);\n  const [pomodoroCount, setPomodoroCount] = useState(0); // Số lần Pomodoro hoàn thành\n\n  const handleSkip = () => {\n    if (currentMode === \"pomodoro\") {\n      setPomodoroCount(prevCount => {\n        const newCount = prevCount + 1;\n        if (newCount % 4 === 0) {\n          // Sau 3 lần nghỉ ngắn, nghỉ dài\n          setCurrentMode(\"long-break\");\n          setTimeLeft(900); // Long Break - 15 phút\n        } else {\n          setCurrentMode(\"short-break\");\n          setTimeLeft(300); // Short Break - 5 phút\n        }\n        return newCount;\n      });\n    } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\n      setCurrentMode(\"pomodoro\");\n      setTimeLeft(1500); // Pomodoro - 25 phút\n    }\n  };\n  useEffect(() => {\n    let timer = null;\n    if (isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\n      timer = setInterval(() => {\n        // Cập nhật thời gian làm việc real-time\n        setTodayDataTimeCount(prev => {\n          const updated = [...prev];\n          const taskIndex = updated.findIndex(task => task.name === selectedTaskName);\n          if (taskIndex >= 0) {\n            updated[taskIndex].realTimeTaskCount += 1; // Tăng thời gian đã làm việc (giây)\n          }\n          return updated;\n        });\n      }, 1000); // Cập nhật mỗi giây\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, selectedTaskName, currentMode, isFreeMode]);\n  const handleSelectTaskBlock = taskName => {\n    // Lưu lại thời gian làm việc của task hiện tại trước khi chuyển\n    if (selectedTaskName) {\n      setTodayDataTimeCount(prev => {\n        const updated = [...prev];\n        const taskIndex = updated.findIndex(task => task.name === selectedTaskName);\n        if (taskIndex >= 0) {\n          updated[taskIndex].realTimeTaskCount += Math.floor((Date.now() - lastTaskStartTime) / 1000); // Tăng thời gian làm việc dựa trên thời gian đã qua\n        }\n        return updated;\n      });\n    }\n\n    // Chuyển sang task mới\n    const selectedTask = tasksForToday.find(task => task.name === taskName);\n    setSelectedTaskName(taskName);\n    if (selectedTask) {\n      // Thiết lập lại countdown task\n      const taskTimeSlotInSeconds = taskTimeSlotToSeconds(calculateTimeSlot(selectedTask.startTime, selectedTask.endTime));\n      const taskData = todayDataTimeCount.find(task => task.name === taskName);\n      const taskWorkedTime = taskData ? taskData.realTimeTaskCount : 0;\n      setCountdownTimeTask(taskTimeSlotInSeconds - taskWorkedTime);\n      setIsTaskSelected(true);\n      setLastTaskStartTime(Date.now()); // Lưu thời gian bắt đầu của task mới\n    } else {\n      setCountdownTimeTask(0);\n      setIsTaskSelected(false);\n    }\n  };\n  const formatTime = seconds => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 6000);\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    if (currentMode === \"short-break\" || currentMode === \"long-break\") {\n      setIsRunning(false); // Dừng đếm ngược\n    }\n  }, [currentMode]);\n\n  // Tự động cuộn đến current-time-line khi mở trang\n  useEffect(() => {\n    if (timelineRef.current) {\n      const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\n      timelineRef.current.scrollTo({\n        top: currentTimePosition - 50,\n        // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\n        behavior: \"smooth\"\n      });\n    }\n  }, [currentTime]);\n\n  // Calculate tasks for today\n  const calculateTasksForToday = useCallback(() => {\n    const today = new Date();\n    const tasks = [];\n    Object.values(works).flat().forEach(work => {\n      const workStartDate = new Date(work.startDate);\n      const workEndDate = new Date(work.endDate);\n      work.subWorks.forEach(task => {\n        const {\n          startTime,\n          endTime,\n          repeatOption,\n          customRepeat = {}\n        } = task;\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\n        let validDates = [];\n        if (repeatOption === \"Không lặp lại\") {\n          validDates = [workStartDate];\n        } else if (repeatOption === \"Hàng ngày\") {\n          let currentDate = new Date(workStartDate);\n          while (currentDate <= workEndDate) {\n            validDates.push(new Date(currentDate));\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n        } else if (repeatOption === \"Tùy chỉnh\") {\n          const {\n            repeatEvery = 1,\n            repeatUnit = \"ngày\",\n            startDate,\n            repeatDays = []\n          } = customRepeat;\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\n          let currentDate = new Date(taskStartDate);\n          if (repeatUnit === \"ngày\") {\n            while (currentDate <= workEndDate) {\n              validDates.push(new Date(currentDate));\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\n            }\n          } else if (repeatUnit === \"tuần\") {\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\n            while (currentDate <= workEndDate) {\n              const dayOfWeek = dayMapping[currentDate.getDay()];\n              if (repeatDays.includes(dayOfWeek)) {\n                validDates.push(new Date(currentDate));\n              }\n              currentDate.setDate(currentDate.getDate() + 1);\n            }\n          }\n        }\n        validDates.forEach(date => {\n          if (date.toDateString() === today.toDateString()) {\n            tasks.push({\n              ...task,\n              workName: work.name,\n              startTime: new Date(today.setHours(startHour, startMinute)),\n              endTime: new Date(today.setHours(endHour, endMinute))\n            });\n          }\n        });\n      });\n    });\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\n    setTasksForToday(sortedTasks);\n  }, [works]);\n  useEffect(() => {\n    if (mode === \"auto\") {\n      calculateTasksForToday();\n    }\n  }, [mode, calculateTasksForToday]);\n  useEffect(() => {\n    let countdownTimer;\n    if (isTaskSelected && isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\n      countdownTimer = setInterval(() => {\n        setCountdownTimeTask(prev => Math.max(prev - 1, 0));\n      }, 1000);\n    }\n    return () => clearInterval(countdownTimer);\n  }, [isRunning, isTaskSelected, currentMode, isFreeMode]);\n  useEffect(() => {\n    let timer = null;\n    if (isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\n      timer = setInterval(() => {\n        // Cập nhật thời gian làm việc real-time\n        setTodayDataTimeCount(prev => {\n          const updated = [...prev];\n          const taskIndex = updated.findIndex(task => task.name === selectedTaskName);\n          if (taskIndex >= 0) {\n            updated[taskIndex].realTimeTaskCount += 1; // Tăng thời gian đã làm việc (giây)\n          }\n          return updated;\n        });\n      }, 1000); // Cập nhật mỗi giây\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, selectedTaskName, currentMode, isFreeMode]);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const now = new Date();\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\n        calculateTasksForToday(); // Làm mới danh sách task\n      }\n    }, 60000); // Kiểm tra mỗi phút\n    return () => clearInterval(timer);\n  }, [calculateTasksForToday]);\n  const renderTaskOnTimeline = task => {\n    const taskStart = task.startTime;\n    const taskEnd = task.endTime;\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\n\n    // Kiểm tra trạng thái của task\n    const isSelected = selectedTaskName === task.name;\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `task-block ${isSelected ? \"selected\" : \"\"} ${isDimmed ? \"dimmed\" : \"\"}`,\n      style: {\n        top: `${startMinutes}px`,\n        height: `${endMinutes - startMinutes}px`\n      },\n      onClick: () => handleSelectTaskBlock(task.name),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-name\",\n        children: task.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"select-task-button\",\n        children: isSelected ? \"Deselect\" : \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this)]\n    }, task.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this);\n  };\n  const calculateTimeSlot = (startTime, endTime) => {\n    const diff = new Date(endTime - startTime);\n    const hours = diff.getUTCHours();\n    const minutes = diff.getUTCMinutes();\n    return `${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\n  };\n  const getPomodoroBackground = () => {\n    if (isFreeMode) return \"#d4b3e9\"; // Màu tím pastel cho chế độ tự do\n    switch (currentMode) {\n      case \"pomodoro\":\n        return \"#56daeb\";\n      // Xanh ngọc bích\n      case \"short-break\":\n        return \"#a8d5ba\";\n      // Xanh lá pastel\n      case \"long-break\":\n        return \"#f6e58d\";\n      // Vàng chanh\n      default:\n        return \"#f9f9f9\";\n      // Mặc định\n    }\n  };\n  const taskTimeSlotToSeconds = timeSlot => {\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\n    return hours * 3600 + minutes * 60;\n  };\n  const handleModeChange = mode => {\n    if (mode === \"pomodoro\") {\n      setIsFocusPhase(true);\n      setTimeLeft(1500); // Reset về 25 phút\n      setIsRunning(false); // Dừng đếm\n    } else if (mode === \"short-break\") {\n      setIsFocusPhase(false);\n      setTimeLeft(300); // Reset về 5 phút\n      setIsRunning(false);\n    } else if (mode === \"long-break\") {\n      setIsFocusPhase(false);\n      setTimeLeft(900); // Reset về 15 phút\n      setIsRunning(false);\n    }\n  };\n  const openManualSelectModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(true);\n  };\n  const handleManualSelectWork = work => {\n    setTempWork(prev => (prev === null || prev === void 0 ? void 0 : prev.id) === work.id ? null : work);\n    setTempTask(null);\n  };\n  const handleManualSelectTask = task => {\n    setTempTask(prev => (prev === null || prev === void 0 ? void 0 : prev.name) === task.name ? null : task);\n  };\n  const handleManualSelectionDone = () => {\n    setSelectedWork(tempWork);\n    setSelectedTask(tempTask);\n    setCurrentTaskManual(tempTask ? {\n      ...tempTask,\n      workName: tempWork.name,\n      workStartDate: tempWork.startDate,\n      workEndDate: tempWork.endDate,\n      startTime: new Date(`1970-01-01T${tempTask.startTime}:00`),\n      endTime: new Date(`1970-01-01T${tempTask.endTime}:00`)\n    } : null);\n    if (tempTask) {\n      const taskTimeSlot = calculateTimeSlot(new Date(`1970-01-01T${tempTask.startTime}:00`), new Date(`1970-01-01T${tempTask.endTime}:00`));\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot));\n      setIsTaskSelected(true);\n    } else {\n      setCountdownTimeTask(0);\n      setIsTaskSelected(false);\n    }\n    setIsModalOpen(false);\n  };\n  const closeModal = () => {\n    setTempWork(selectedWork);\n    setTempTask(selectedTask);\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-data-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"today-data-toggle\",\n          onClick: () => setIsTodayDataVisible(prev => !prev),\n          children: \"TODAY-DataTimeCount \\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 9\n        }, this), isTodayDataVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today-data-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Today: \", new Date().toDateString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: todayDataTimeCount.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [task.name, \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [formatTime(task.realTimeTaskCount), \" / \", task.timeSlot]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 525,\n                columnNumber: 19\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: task.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countdown-task\",\n        children: isTaskSelected ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formatTime(countdownTimeTask)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 7\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Select task!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"focus-modes\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n          onClick: () => setMode(\"auto\"),\n          children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n          onClick: () => {\n            setMode(\"manual\");\n            openManualSelectModal();\n          },\n          children: \"T\\u1EF1 ch\\u1ECDn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n          onClick: () => setMode(\"free\"),\n          children: \"T\\u1EF1 do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        ref: timelineRef,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-line\",\n            style: {\n              \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\n              top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this), Array.from({\n            length: 25\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-block\",\n            style: {\n              top: `${hour * 60}px`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-marker\",\n              children: hour < 10 ? `0${hour}:00` : `${hour}:00`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hour-divider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this)]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 15\n          }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), mode === \"auto\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Today Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"T\\u1ED5ng s\\u1ED1 task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: tasksForToday.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), tasksForToday.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"task-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Work\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"TimeSlot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 605,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: tasksForToday.map((task, index) => {\n              const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: `task-list-item ${selectedTaskName === task.name ? \"selected\" : \"\"}`,\n                onClick: () => handleSelectTaskBlock(task.name),\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.workName || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [task.startTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  }), \" \", \"-\", \" \", task.endTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                    hour12: false\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 625,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: timeSlot\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 23\n                }, this), \" \"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Empty Task Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => alert(\"Daily form is not implemented yet.\"),\n            children: \"Daily\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"note-button\",\n            onClick: () => setNoteContent(\"\"),\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"note-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"note-input\",\n            className: \"note-label\",\n            children: \"Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"note-input\",\n            className: \"note-input\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value),\n            placeholder: \"Write your notes here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), mode === \"manual\" && currentTaskManual && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-select\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Task hi\\u1EC7n t\\u1EA1i\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Task:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Th\\u1EDDi gian:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.startTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        }), \" \", \"-\", \" \", currentTaskManual.endTime.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: false\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ng\\xE0y Work:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this), \" \", currentTaskManual.workStartDate, \" -\", \" \", currentTaskManual.workEndDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Timeslot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 13\n        }, this), \" \", calculateTimeSlot(new Date(currentTaskManual.startTime), new Date(currentTaskManual.endTime))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 679,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pomodoro-timer\",\n      style: {\n        backgroundColor: getPomodoroBackground()\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"swap-icon\",\n          onClick: toggleFreeMode,\n          children: \"\\uD83D\\uDD04 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-modes\",\n          children: !isFreeMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"pomodoro\");\n                handleModeChange(\"pomodoro\");\n              },\n              children: \"Pomodoro\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"short-break\");\n                handleModeChange(\"short-break\");\n              },\n              children: \"Short-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`,\n              onClick: () => {\n                setCurrentMode(\"long-break\");\n                handleModeChange(\"long-break\");\n              },\n              children: \"Long-break\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`,\n            onClick: () => {\n              if (!isFreeMode) {\n                toggleFreeMode();\n              } else {\n                // Reset bộ đếm tự do nếu đã ở chế độ tự do\n                setFreeModeTime(0);\n              }\n            },\n            children: \"Stopwatch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 754,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatTime(isFreeMode ? freeModeTime : timeLeft)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 774,\n        columnNumber: 3\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\"),\n          disabled: !isTaskSelected,\n          children: isRunning ? \"Tạm dừng\" : \"Bắt đầu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 3\n        }, this), isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setFreeModeTime(0),\n          children: \"K\\u1EBFt th\\xFAc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 7\n        }, this), !isFreeMode && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSkip,\n          children: \"B\\u1ECF qua\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 1\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(tempWork === null || tempWork === void 0 ? void 0 : tempWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Ng\\xE0y: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"focus-button\",\n              onClick: handleManualSelectionDone,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"modal-close\",\n              onClick: closeModal,\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Danh s\\xE1ch Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 15\n          }, this), tempWork && tempWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: tempWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(tempTask === null || tempTask === void 0 ? void 0 : tempTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 833,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Th\\u1EDDi gian: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 834,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 21\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Ch\\u1ECDn m\\u1ED9t Work \\u0111\\u1EC3 xem Task.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 503,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"T6h63RJAxRuIOfNnTNZrJrjYUIU=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTaskManual","setCurrentTaskManual","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timelineRef","selectedTaskBlock","setSelectedTaskBlock","selectedTaskName","setSelectedTaskName","noteContent","setNoteContent","isFreeMode","setIsFreeMode","freeModeTime","setFreeModeTime","currentMode","setCurrentMode","countdownTimeTask","setCountdownTimeTask","isTaskSelected","setIsTaskSelected","todayDataTimeCount","setTodayDataTimeCount","isTodayDataVisible","setIsTodayDataVisible","timer","setInterval","prev","handlePomodoroComplete","clearInterval","toggleFreeMode","freeModeTimer","setPomodoroCount","prevCount","newCount","info","success","handleStartPause","map","task","taskTimeSlot","calculateTimeSlot","startTime","endTime","hours","minutes","split","Number","name","date","toDateString","realTimeTaskCount","timeSlot","toString","padStart","status","pomodoroCount","handleSkip","updated","taskIndex","findIndex","handleSelectTaskBlock","taskName","Math","floor","now","lastTaskStartTime","find","taskTimeSlotInSeconds","taskTimeSlotToSeconds","taskData","taskWorkedTime","setLastTaskStartTime","formatTime","seconds","secs","current","currentTimePosition","getHours","getMinutes","scrollTo","top","behavior","calculateTasksForToday","today","tasks","Object","values","flat","forEach","work","workStartDate","startDate","workEndDate","endDate","subWorks","repeatOption","customRepeat","startHour","startMinute","endHour","endMinute","validDates","currentDate","push","setDate","getDate","repeatEvery","repeatUnit","repeatDays","taskStartDate","dayMapping","dayOfWeek","getDay","includes","workName","setHours","sortedTasks","sort","a","b","countdownTimer","max","renderTaskOnTimeline","taskStart","taskEnd","startMinutes","endMinutes","isSelected","isDimmed","className","style","height","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","diff","getUTCHours","getUTCMinutes","getPomodoroBackground","handleModeChange","openManualSelectModal","handleManualSelectWork","id","handleManualSelectTask","handleManualSelectionDone","closeModal","index","ref","Array","from","length","_","hour","toLocaleTimeString","minute","hour12","alert","htmlFor","value","onChange","e","target","placeholder","backgroundColor","error","disabled","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback, useRef } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const timelineRef = useRef(null); // Ref để truy cập timeline-container\r\n  const [selectedTaskBlock, setSelectedTaskBlock] = useState(null);\r\n  const [selectedTaskName, setSelectedTaskName] = useState(null);\r\n  const [noteContent, setNoteContent] = useState(\"\");\r\n  const [isFreeMode, setIsFreeMode] = useState(false); // Thêm trạng thái cho chế độ tự do\r\n  const [freeModeTime, setFreeModeTime] = useState(0); // Thời gian đếm giờ tự do\r\n  const [currentMode, setCurrentMode] = useState(\"pomodoro\"); // Lưu chế độ hiện tại\r\n  const [countdownTimeTask, setCountdownTimeTask] = useState(0); // Thời gian đếm ngược\r\n  const [isTaskSelected, setIsTaskSelected] = useState(false); // Trạng thái task được chọn\r\n  const [todayDataTimeCount, setTodayDataTimeCount] = useState([]);\r\n  const [isTodayDataVisible, setIsTodayDataVisible] = useState(false); // Định nghĩa biến\r\n\r\n\r\n\r\n\r\n\r\n  // Pomodoro logic\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      handlePomodoroComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const toggleFreeMode = () => {\r\n    if (isFreeMode) {\r\n      // Chuyển về chế độ Pomodoro\r\n      setIsFreeMode(false);\r\n      setFreeModeTime(0); // Reset thời gian tự do\r\n      setTimeLeft(isFocusPhase ? 1500 : timeLeft); // Quay về thời gian Pomodoro\r\n    } else {\r\n      // Chuyển sang chế độ tự do\r\n      setIsFreeMode(true);\r\n      setFreeModeTime(0); // Reset bộ đếm tự do về 0\r\n      setIsRunning(false); // Dừng đếm tự do\r\n    }\r\n  };\r\n  \r\n\r\n  // Free count time\r\n  useEffect(() => {\r\n    let freeModeTimer;\r\n    if (isFreeMode && isRunning) {\r\n      freeModeTimer = setInterval(() => {\r\n        setFreeModeTime((prev) => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(freeModeTimer);\r\n  }, [isFreeMode, isRunning]);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      if (currentMode === \"pomodoro\") {\r\n        setPomodoroCount((prevCount) => {\r\n          const newCount = prevCount + 1;\r\n          if (newCount % 4 === 0) {\r\n            setCurrentMode(\"long-break\");\r\n            setTimeLeft(900); // Long Break - 15 phút\r\n          } else {\r\n            setCurrentMode(\"short-break\");\r\n            setTimeLeft(300); // Short Break - 5 phút\r\n          }\r\n          return newCount;\r\n        });\r\n      } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\r\n        setCurrentMode(\"pomodoro\");\r\n        setTimeLeft(1500); // Pomodoro - 25 phút\r\n      }\r\n    }\r\n  }, [timeLeft, currentMode]);\r\n  \r\n\r\n  \r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    if (isFocusPhase) {\r\n      setIsFocusPhase(false);\r\n      setCycle((prev) => prev + 1);\r\n      if ((cycle + 1) % 4 === 0) {\r\n        setTimeLeft(900);\r\n        toast.info(\"Long Break! Take a 15-minute rest.\");\r\n      } else {\r\n        setTimeLeft(300);\r\n        toast.info(\"Short Break! Take a 5-minute rest.\");\r\n      }\r\n    } else {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500);\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  }, [cycle, isFocusPhase, toast]);\r\n\r\n\r\n  const handleStartPause = () => {\r\n    if (!isRunning) {\r\n      // Không thay đổi currentMode ở đây nữa\r\n      setIsRunning(true);\r\n    } else {\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setTodayDataTimeCount(\r\n      tasksForToday.map((task) => {\r\n        const taskTimeSlot = calculateTimeSlot(task.startTime, task.endTime);\r\n        const [hours, minutes] = taskTimeSlot.split(\":\").map(Number);\r\n  \r\n        return {\r\n          name: task.name,\r\n          date: new Date().toDateString(),\r\n          realTimeTaskCount: 0, // Ban đầu chưa có thời gian thực hiện\r\n          timeSlot: `${hours.toString().padStart(2, \"0\")}:${minutes\r\n            .toString()\r\n            .padStart(2, \"0\")}:00`, // Định dạng hh:mm:ss\r\n          status: \"pending-today\", // Ban đầu đặt là chờ thực hiện\r\n        };\r\n      })\r\n    );\r\n  }, [tasksForToday]);\r\n  \r\n  \r\n\r\n  const [pomodoroCount, setPomodoroCount] = useState(0); // Số lần Pomodoro hoàn thành\r\n\r\n  const handleSkip = () => {\r\n    if (currentMode === \"pomodoro\") {\r\n      setPomodoroCount((prevCount) => {\r\n        const newCount = prevCount + 1;\r\n        if (newCount % 4 === 0) {\r\n          // Sau 3 lần nghỉ ngắn, nghỉ dài\r\n          setCurrentMode(\"long-break\");\r\n          setTimeLeft(900); // Long Break - 15 phút\r\n        } else {\r\n          setCurrentMode(\"short-break\");\r\n          setTimeLeft(300); // Short Break - 5 phút\r\n        }\r\n        return newCount;\r\n      });\r\n    } else if (currentMode === \"short-break\" || currentMode === \"long-break\") {\r\n      setCurrentMode(\"pomodoro\");\r\n      setTimeLeft(1500); // Pomodoro - 25 phút\r\n    }\r\n  };\r\n  \r\n  \r\n  useEffect(() => {\r\n    let timer = null;\r\n    if (isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\r\n      timer = setInterval(() => {\r\n        // Cập nhật thời gian làm việc real-time\r\n        setTodayDataTimeCount((prev) => {\r\n          const updated = [...prev];\r\n          const taskIndex = updated.findIndex((task) => task.name === selectedTaskName);\r\n          if (taskIndex >= 0) {\r\n            updated[taskIndex].realTimeTaskCount += 1; // Tăng thời gian đã làm việc (giây)\r\n          }\r\n          return updated;\r\n        });\r\n      }, 1000); // Cập nhật mỗi giây\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, selectedTaskName, currentMode, isFreeMode]);\r\n  \r\n  const handleSelectTaskBlock = (taskName) => {\r\n    // Lưu lại thời gian làm việc của task hiện tại trước khi chuyển\r\n    if (selectedTaskName) {\r\n      setTodayDataTimeCount((prev) => {\r\n        const updated = [...prev];\r\n        const taskIndex = updated.findIndex((task) => task.name === selectedTaskName);\r\n        if (taskIndex >= 0) {\r\n          updated[taskIndex].realTimeTaskCount +=\r\n            Math.floor((Date.now() - lastTaskStartTime) / 1000); // Tăng thời gian làm việc dựa trên thời gian đã qua\r\n        }\r\n        return updated;\r\n      });\r\n    }\r\n  \r\n    // Chuyển sang task mới\r\n    const selectedTask = tasksForToday.find((task) => task.name === taskName);\r\n    setSelectedTaskName(taskName);\r\n  \r\n    if (selectedTask) {\r\n      // Thiết lập lại countdown task\r\n      const taskTimeSlotInSeconds = taskTimeSlotToSeconds(\r\n        calculateTimeSlot(selectedTask.startTime, selectedTask.endTime)\r\n      );\r\n      const taskData = todayDataTimeCount.find((task) => task.name === taskName);\r\n      const taskWorkedTime = taskData ? taskData.realTimeTaskCount : 0;\r\n  \r\n      setCountdownTimeTask(taskTimeSlotInSeconds - taskWorkedTime);\r\n      setIsTaskSelected(true);\r\n      setLastTaskStartTime(Date.now()); // Lưu thời gian bắt đầu của task mới\r\n    } else {\r\n      setCountdownTimeTask(0);\r\n      setIsTaskSelected(false);\r\n    }\r\n  };\r\n  \r\n  \r\n  const formatTime = (seconds) => {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n  \r\n  \r\n\r\n  // Update current time every minute\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 6000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentMode === \"short-break\" || currentMode === \"long-break\") {\r\n      setIsRunning(false); // Dừng đếm ngược\r\n    }\r\n  }, [currentMode]);\r\n  \r\n\r\n  // Tự động cuộn đến current-time-line khi mở trang\r\nuseEffect(() => {\r\n  if (timelineRef.current) {\r\n    const currentTimePosition = currentTime.getHours() * 60 + currentTime.getMinutes();\r\n    timelineRef.current.scrollTo({\r\n      top: currentTimePosition - 50, // Cuộn đến vị trí current-time-line, trừ 50px để đẹp\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n}, [currentTime]);\r\n\r\n\r\n  // Calculate tasks for today\r\n  const calculateTasksForToday = useCallback(() => {\r\n    const today = new Date();\r\n    const tasks = [];\r\n\r\n    Object.values(works).flat().forEach((work) => {\r\n      const workStartDate = new Date(work.startDate);\r\n      const workEndDate = new Date(work.endDate);\r\n\r\n      work.subWorks.forEach((task) => {\r\n        const { startTime, endTime, repeatOption, customRepeat = {} } = task;\r\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n        let validDates = [];\r\n        if (repeatOption === \"Không lặp lại\") {\r\n          validDates = [workStartDate];\r\n        } else if (repeatOption === \"Hàng ngày\") {\r\n          let currentDate = new Date(workStartDate);\r\n          while (currentDate <= workEndDate) {\r\n            validDates.push(new Date(currentDate));\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n          }\r\n        } else if (repeatOption === \"Tùy chỉnh\") {\r\n          const { repeatEvery = 1, repeatUnit = \"ngày\", startDate, repeatDays = [] } = customRepeat;\r\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\r\n          let currentDate = new Date(taskStartDate);\r\n\r\n          if (repeatUnit === \"ngày\") {\r\n            while (currentDate <= workEndDate) {\r\n              validDates.push(new Date(currentDate));\r\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\r\n            }\r\n          } else if (repeatUnit === \"tuần\") {\r\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n            while (currentDate <= workEndDate) {\r\n              const dayOfWeek = dayMapping[currentDate.getDay()];\r\n              if (repeatDays.includes(dayOfWeek)) {\r\n                validDates.push(new Date(currentDate));\r\n              }\r\n              currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        validDates.forEach((date) => {\r\n          if (date.toDateString() === today.toDateString()) {\r\n            tasks.push({\r\n              ...task,\r\n              workName: work.name,\r\n              startTime: new Date(today.setHours(startHour, startMinute)),\r\n              endTime: new Date(today.setHours(endHour, endMinute)),\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\r\n    setTasksForToday(sortedTasks);\r\n  }, [works]);\r\n\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      calculateTasksForToday();\r\n    }\r\n  }, [mode, calculateTasksForToday]);\r\n\r\n  useEffect(() => {\r\n    let countdownTimer;\r\n    if (isTaskSelected && isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\r\n      countdownTimer = setInterval(() => {\r\n        setCountdownTimeTask((prev) => Math.max(prev - 1, 0));\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(countdownTimer);\r\n  }, [isRunning, isTaskSelected, currentMode, isFreeMode]);\r\n  \r\n  useEffect(() => {\r\n    let timer = null;\r\n    if (isRunning && (currentMode === \"pomodoro\" || isFreeMode)) {\r\n      timer = setInterval(() => {\r\n        // Cập nhật thời gian làm việc real-time\r\n        setTodayDataTimeCount((prev) => {\r\n          const updated = [...prev];\r\n          const taskIndex = updated.findIndex((task) => task.name === selectedTaskName);\r\n          if (taskIndex >= 0) {\r\n            updated[taskIndex].realTimeTaskCount += 1; // Tăng thời gian đã làm việc (giây)\r\n          }\r\n          return updated;\r\n        });\r\n      }, 1000); // Cập nhật mỗi giây\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, selectedTaskName, currentMode, isFreeMode]);\r\n  \r\n  \r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const now = new Date();\r\n      if (now.getHours() === 0 && now.getMinutes() === 0) {\r\n        calculateTasksForToday(); // Làm mới danh sách task\r\n      }\r\n    }, 60000); // Kiểm tra mỗi phút\r\n    return () => clearInterval(timer);\r\n  }, [calculateTasksForToday]);\r\n\r\n  const renderTaskOnTimeline = (task) => {\r\n    const taskStart = task.startTime;\r\n    const taskEnd = task.endTime;\r\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\r\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\r\n  \r\n    // Kiểm tra trạng thái của task\r\n    const isSelected = selectedTaskName === task.name;\r\n    const isDimmed = selectedTaskName && selectedTaskName !== task.name;\r\n  \r\n    return (\r\n      <div\r\n        className={`task-block ${isSelected ? \"selected\" : \"\"} ${\r\n          isDimmed ? \"dimmed\" : \"\"\r\n        }`}\r\n        style={{\r\n          top: `${startMinutes}px`,\r\n          height: `${endMinutes - startMinutes}px`,\r\n        }}\r\n        key={task.name}\r\n        onClick={() => handleSelectTaskBlock(task.name)} \r\n      >\r\n        <div className=\"task-name\">{task.name}</div>\r\n        <button className=\"select-task-button\">\r\n          {isSelected ? \"Deselect\" : \"Select\"}\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const calculateTimeSlot = (startTime, endTime) => {\r\n    const diff = new Date(endTime - startTime);\r\n    const hours = diff.getUTCHours();\r\n    const minutes = diff.getUTCMinutes();\r\n    return `${hours.toString().padStart(2, \"0\")}:${minutes\r\n      .toString()\r\n      .padStart(2, \"0\")}`;\r\n  };\r\n  \r\n  \r\n  const getPomodoroBackground = () => {\r\n    if (isFreeMode) return \"#d4b3e9\"; // Màu tím pastel cho chế độ tự do\r\n    switch (currentMode) {\r\n      case \"pomodoro\":\r\n        return \"#56daeb\"; // Xanh ngọc bích\r\n      case \"short-break\":\r\n        return \"#a8d5ba\"; // Xanh lá pastel\r\n      case \"long-break\":\r\n        return \"#f6e58d\"; // Vàng chanh\r\n      default:\r\n        return \"#f9f9f9\"; // Mặc định\r\n    }\r\n  };\r\n\r\n  const taskTimeSlotToSeconds = (timeSlot) => {\r\n    const [hours, minutes] = timeSlot.split(\":\").map(Number);\r\n    return hours * 3600 + minutes * 60;\r\n  };\r\n  \r\n  \r\n  \r\n \r\n  const handleModeChange = (mode) => {\r\n    if (mode === \"pomodoro\") {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500); // Reset về 25 phút\r\n      setIsRunning(false); // Dừng đếm\r\n    } else if (mode === \"short-break\") {\r\n      setIsFocusPhase(false);\r\n      setTimeLeft(300); // Reset về 5 phút\r\n      setIsRunning(false);\r\n    } else if (mode === \"long-break\") {\r\n      setIsFocusPhase(false);\r\n      setTimeLeft(900); // Reset về 15 phút\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n\r\n  const openManualSelectModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(true);\r\n  };\r\n  \r\n\r\n  const handleManualSelectWork = (work) => {\r\n    setTempWork((prev) => (prev?.id === work.id ? null : work));\r\n    setTempTask(null);\r\n  };\r\n\r\n  const handleManualSelectTask = (task) => {\r\n    setTempTask((prev) => (prev?.name === task.name ? null : task));\r\n  };\r\n\r\n  const handleManualSelectionDone = () => {\r\n    setSelectedWork(tempWork);\r\n    setSelectedTask(tempTask);\r\n  \r\n    setCurrentTaskManual(\r\n      tempTask\r\n        ? {\r\n            ...tempTask,\r\n            workName: tempWork.name,\r\n            workStartDate: tempWork.startDate,\r\n            workEndDate: tempWork.endDate,\r\n            startTime: new Date(`1970-01-01T${tempTask.startTime}:00`),\r\n            endTime: new Date(`1970-01-01T${tempTask.endTime}:00`),\r\n          }\r\n        : null\r\n    );\r\n    if (tempTask) {\r\n      const taskTimeSlot = calculateTimeSlot(\r\n        new Date(`1970-01-01T${tempTask.startTime}:00`),\r\n        new Date(`1970-01-01T${tempTask.endTime}:00`)\r\n      );\r\n      setCountdownTimeTask(taskTimeSlotToSeconds(taskTimeSlot));\r\n      setIsTaskSelected(true);\r\n    } else {\r\n      setCountdownTimeTask(0);\r\n      setIsTaskSelected(false);\r\n    }\r\n    \r\n    setIsModalOpen(false);\r\n  };\r\n  \r\n\r\n  const closeModal = () => {\r\n    setTempWork(selectedWork);\r\n    setTempTask(selectedTask);\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n\r\n\r\n      <div className=\"container-row\">\r\n      <div className=\"today-data-container\">\r\n        <button\r\n          className=\"today-data-toggle\"\r\n          onClick={() => setIsTodayDataVisible((prev) => !prev)}\r\n        >\r\n          TODAY-DataTimeCount ▼\r\n        </button>\r\n        {isTodayDataVisible && (\r\n          <div className=\"today-data-content\">\r\n            <p>Today: {new Date().toDateString()}</p>\r\n            <ul>\r\n              {todayDataTimeCount.map((task, index) => (\r\n                <li key={index}>\r\n                  {task.name}{\" \"}\r\n                  <strong>\r\n                    {formatTime(task.realTimeTaskCount)} / {task.timeSlot}\r\n                  </strong>{\" \"}\r\n                  <span>{task.status}</span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n\r\n  <div className=\"countdown-task\">\r\n    {isTaskSelected ? (\r\n      <p>{formatTime(countdownTimeTask)}</p>\r\n    ) : (\r\n      <p>Select task!</p>\r\n    )}\r\n  </div>\r\n\r\n  <div className=\"focus-modes\">\r\n    <button\r\n      className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n      onClick={() => setMode(\"auto\")}\r\n    >\r\n      Tự động\r\n    </button>\r\n    <button\r\n      className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n      onClick={() => {\r\n        setMode(\"manual\");\r\n        openManualSelectModal();\r\n      }}\r\n    >\r\n      Tự chọn\r\n    </button>\r\n    <button\r\n      className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n      onClick={() => setMode(\"free\")}\r\n    >\r\n      Tự do\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n\r\n      <div className=\"focus-content\">\r\n        {/* Time-line luôn hiển thị */}\r\n        <div className=\"timeline-container\" ref={timelineRef}>\r\n          <div className=\"timeline\">\r\n            <div\r\n              className=\"current-time-line\"\r\n              style={{\r\n                \"--time-position\": `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`,\r\n                top: `${currentTime.getHours() * 60 + currentTime.getMinutes() + 6.5}px`,\r\n              }}\r\n            ></div>\r\n            {Array.from({ length: 25 }).map((_, hour) => (\r\n              <div key={hour} className=\"hour-block\" style={{ top: `${hour * 60}px` }}>\r\n                <div className=\"hour-marker\">\r\n                  {hour < 10 ? `0${hour}:00` : `${hour}:00`}\r\n                </div>\r\n                <div className=\"hour-divider\"></div>\r\n              </div>\r\n            ))}\r\n            {/* Chỉ hiển thị các task trên timeline nếu có */}\r\n            {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n          </div>\r\n        </div>\r\n            \r\n        {/* Task-list chỉ hiển thị ở chế độ \"tự động\" */}\r\n        {mode === \"auto\" && (\r\n          <div className=\"task-list\">\r\n          <h2>Today Task</h2>\r\n          <p>\r\n            Tổng số task: <strong>{tasksForToday.length}</strong>\r\n          </p>\r\n          {tasksForToday.length > 0 ? (\r\n            <table className=\"task-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Task</th>\r\n                  <th>Work</th>\r\n                  <th>Time</th>\r\n                  <th>TimeSlot</th> {/* Thêm cột TimeSlot */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {tasksForToday.map((task, index) => {\r\n                  const timeSlot = calculateTimeSlot(task.startTime, task.endTime); // Tính TimeSlot\r\n                  return (\r\n                    <tr\r\n                      key={index}\r\n                      className={`task-list-item ${\r\n                        selectedTaskName === task.name ? \"selected\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleSelectTaskBlock(task.name)}\r\n                    >\r\n                      <td>{task.name}</td>\r\n                      <td>{task.workName || \"N/A\"}</td>\r\n                      <td>\r\n                        {task.startTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}{\" \"}\r\n                        -{\" \"}\r\n                        {task.endTime.toLocaleTimeString([], {\r\n                          hour: \"2-digit\",\r\n                          minute: \"2-digit\",\r\n                          hour12: false,\r\n                        })}\r\n                      </td>\r\n                      <td>{timeSlot}</td> {/* Hiển thị TimeSlot */}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            <p>Empty Task Today</p>\r\n          )}\r\n        </div>\r\n        \r\n        )}\r\n\r\n        {/* Note-container luôn hiển thị */}\r\n        <div className=\"note-container\">\r\n          <div className=\"note-header\">\r\n            <button\r\n              className=\"note-button\"\r\n              onClick={() => alert(\"Daily form is not implemented yet.\")}\r\n            >\r\n              Daily\r\n            </button>\r\n            <button className=\"note-button\" onClick={() => setNoteContent(\"\")}>\r\n              Clear\r\n            </button>\r\n          </div>\r\n          <div className=\"note-body\">\r\n            <label htmlFor=\"note-input\" className=\"note-label\">Note</label>\r\n            <textarea\r\n              id=\"note-input\"\r\n              className=\"note-input\"\r\n              value={noteContent}\r\n              onChange={(e) => setNoteContent(e.target.value)}\r\n              placeholder=\"Write your notes here...\"\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      {mode === \"manual\" && currentTaskManual && (\r\n        <div className=\"task-select\">\r\n          <h2>Task hiện tại</h2>\r\n          <p>\r\n            <strong>Work:</strong> {currentTaskManual.workName}\r\n          </p>\r\n          <p>\r\n            <strong>Task:</strong> {currentTaskManual.name}\r\n          </p>\r\n          <p>\r\n            <strong>Thời gian:</strong>{\" \"}\r\n            {currentTaskManual.startTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}{\" \"}\r\n            -{\" \"}\r\n            {currentTaskManual.endTime.toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n              hour12: false,\r\n            })}\r\n          </p>\r\n\r\n          <p>\r\n            <strong>Ngày Work:</strong> {currentTaskManual.workStartDate} -{\" \"}\r\n            {currentTaskManual.workEndDate}\r\n          </p>\r\n          <p>\r\n            <strong>Timeslot:</strong>{\" \"}\r\n            {calculateTimeSlot(\r\n              new Date(currentTaskManual.startTime),\r\n              new Date(currentTaskManual.endTime)\r\n            )}\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n\r\n<div className=\"pomodoro-timer\" style={{ backgroundColor: getPomodoroBackground() }}>\r\n  <div className=\"pomodoro-header\">\r\n    <span className=\"swap-icon\" onClick={toggleFreeMode}>\r\n      🔄 {/* Icon Swap */}\r\n    </span>\r\n    <div className=\"pomodoro-modes\">\r\n  {!isFreeMode ? (\r\n    <>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"pomodoro\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"pomodoro\");\r\n          handleModeChange(\"pomodoro\");\r\n        }}\r\n      >\r\n        Pomodoro\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"short-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"short-break\");\r\n          handleModeChange(\"short-break\");\r\n        }}\r\n      >\r\n        Short-break\r\n      </span>\r\n      <span\r\n        className={`pomodoro-mode ${currentMode === \"long-break\" ? \"active\" : \"\"}`}\r\n        onClick={() => {\r\n          setCurrentMode(\"long-break\");\r\n          handleModeChange(\"long-break\");\r\n        }}\r\n      >\r\n        Long-break\r\n      </span>\r\n    </>\r\n  ) : (\r\n    <span\r\n  className={`pomodoro-mode ${isFreeMode ? \"active\" : \"\"}`}\r\n  onClick={() => {\r\n    if (!isFreeMode) {\r\n      toggleFreeMode();\r\n    } else {\r\n      // Reset bộ đếm tự do nếu đã ở chế độ tự do\r\n      setFreeModeTime(0);\r\n    }\r\n  }}\r\n>\r\n  Stopwatch\r\n</span>\r\n\r\n  )}\r\n</div>\r\n\r\n\r\n\r\n  </div>\r\n  <p>{formatTime(isFreeMode ? freeModeTime : timeLeft)}</p> {/* Hiển thị thời gian */}\r\n  <div className=\"timer-controls\">\r\n  <button\r\n  onClick={isTaskSelected ? handleStartPause : () => toast.error(\"Please choose a task\")}\r\n  disabled={!isTaskSelected}\r\n>\r\n  {isRunning ? \"Tạm dừng\" : \"Bắt đầu\"}\r\n</button>\r\n\r\n    {isFreeMode && (\r\n      <button onClick={() => setFreeModeTime(0)}>Kết thúc</button>\r\n    )}\r\n    {!isFreeMode && <button onClick={handleSkip}>Bỏ qua</button>}\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Danh sách Work</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${\r\n                    tempWork?.id === work.id ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>\r\n                    Ngày: {work.startDate} - {work.endDate}\r\n                  </p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <div className=\"modal-buttons\">\r\n                <button className=\"focus-button\" onClick={handleManualSelectionDone}>\r\n                  Done\r\n                </button>\r\n                <button className=\"modal-close\" onClick={closeModal}>\r\n                  &times;\r\n                </button>\r\n              </div>\r\n              <h2>Danh sách Task</h2>\r\n              {tempWork && tempWork.subWorks ? (\r\n                <>\r\n                  {tempWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${\r\n                        tempTask?.name === task.name ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>\r\n                        Thời gian: {task.startTime} - {task.endTime}\r\n                      </p>\r\n                    </div>\r\n                  ))}\r\n                </>\r\n              ) : (\r\n                <p>Chọn một Work để xem Task.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK,GAAG,CAAC,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACvC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACiC,aAAa,EAAEC,gBAAgB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAGpC,QAAQ,CAAC,IAAIqC,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAMC,WAAW,GAAGpC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;EAClC,MAAM,CAACqC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACyC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAC9D,MAAM,CAAC2C,WAAW,EAAEC,cAAc,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC6C,UAAU,EAAEC,aAAa,CAAC,GAAG9C,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC+C,YAAY,EAAEC,eAAe,CAAC,GAAGhD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACiD,WAAW,EAAEC,cAAc,CAAC,GAAGlD,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACmD,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpD,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACqD,cAAc,EAAEC,iBAAiB,CAAC,GAAGtD,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACuD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACyD,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG1D,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAMrE;EACAD,SAAS,CAAC,MAAM;IACd,IAAI4D,KAAK;IACT,IAAIhC,SAAS,IAAIF,QAAQ,GAAG,CAAC,EAAE;MAC7BkC,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxBlC,WAAW,CAAEmC,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MACjC,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,MAAM,IAAIpC,QAAQ,KAAK,CAAC,EAAE;MACzBqC,sBAAsB,CAAC,CAAC;IAC1B;IACA,OAAO,MAAMC,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,CAAChC,SAAS,EAAEF,QAAQ,CAAC,CAAC;EAEzB,MAAMuC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAInB,UAAU,EAAE;MACd;MACAC,aAAa,CAAC,KAAK,CAAC;MACpBE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;MACpBtB,WAAW,CAACK,YAAY,GAAG,IAAI,GAAGN,QAAQ,CAAC,CAAC,CAAC;IAC/C,CAAC,MAAM;MACL;MACAqB,aAAa,CAAC,IAAI,CAAC;MACnBE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;MACpBpB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC;;EAGD;EACA7B,SAAS,CAAC,MAAM;IACd,IAAIkE,aAAa;IACjB,IAAIpB,UAAU,IAAIlB,SAAS,EAAE;MAC3BsC,aAAa,GAAGL,WAAW,CAAC,MAAM;QAChCZ,eAAe,CAAEa,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MACrC,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAME,aAAa,CAACE,aAAa,CAAC;EAC3C,CAAC,EAAE,CAACpB,UAAU,EAAElB,SAAS,CAAC,CAAC;EAE3B5B,SAAS,CAAC,MAAM;IACd,IAAI0B,QAAQ,KAAK,CAAC,EAAE;MAClB,IAAIwB,WAAW,KAAK,UAAU,EAAE;QAC9BiB,gBAAgB,CAAEC,SAAS,IAAK;UAC9B,MAAMC,QAAQ,GAAGD,SAAS,GAAG,CAAC;UAC9B,IAAIC,QAAQ,GAAG,CAAC,KAAK,CAAC,EAAE;YACtBlB,cAAc,CAAC,YAAY,CAAC;YAC5BxB,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;UACpB,CAAC,MAAM;YACLwB,cAAc,CAAC,aAAa,CAAC;YAC7BxB,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;UACpB;UACA,OAAO0C,QAAQ;QACjB,CAAC,CAAC;MACJ,CAAC,MAAM,IAAInB,WAAW,KAAK,aAAa,IAAIA,WAAW,KAAK,YAAY,EAAE;QACxEC,cAAc,CAAC,UAAU,CAAC;QAC1BxB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MACrB;IACF;EACF,CAAC,EAAE,CAACD,QAAQ,EAAEwB,WAAW,CAAC,CAAC;EAI3B,MAAMa,sBAAsB,GAAG7D,WAAW,CAAC,MAAM;IAC/C2B,YAAY,CAAC,KAAK,CAAC;IACnB,IAAIG,YAAY,EAAE;MAChBC,eAAe,CAAC,KAAK,CAAC;MACtBF,QAAQ,CAAE+B,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MAC5B,IAAI,CAAChC,KAAK,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;QACzBH,WAAW,CAAC,GAAG,CAAC;QAChBjB,KAAK,CAAC4D,IAAI,CAAC,oCAAoC,CAAC;MAClD,CAAC,MAAM;QACL3C,WAAW,CAAC,GAAG,CAAC;QAChBjB,KAAK,CAAC4D,IAAI,CAAC,oCAAoC,CAAC;MAClD;IACF,CAAC,MAAM;MACLrC,eAAe,CAAC,IAAI,CAAC;MACrBN,WAAW,CAAC,IAAI,CAAC;MACjBjB,KAAK,CAAC6D,OAAO,CAAC,4BAA4B,CAAC;IAC7C;EACF,CAAC,EAAE,CAACzC,KAAK,EAAEE,YAAY,EAAEtB,KAAK,CAAC,CAAC;EAGhC,MAAM8D,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAI,CAAC5C,SAAS,EAAE;MACd;MACAC,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED7B,SAAS,CAAC,MAAM;IACdyD,qBAAqB,CACnBvB,aAAa,CAACuC,GAAG,CAAEC,IAAI,IAAK;MAC1B,MAAMC,YAAY,GAAGC,iBAAiB,CAACF,IAAI,CAACG,SAAS,EAAEH,IAAI,CAACI,OAAO,CAAC;MACpE,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGL,YAAY,CAACM,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAACS,MAAM,CAAC;MAE5D,OAAO;QACLC,IAAI,EAAET,IAAI,CAACS,IAAI;QACfC,IAAI,EAAE,IAAI9C,IAAI,CAAC,CAAC,CAAC+C,YAAY,CAAC,CAAC;QAC/BC,iBAAiB,EAAE,CAAC;QAAE;QACtBC,QAAQ,EAAE,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIT,OAAO,CACtDQ,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK;QAAE;QAC1BC,MAAM,EAAE,eAAe,CAAE;MAC3B,CAAC;IACH,CAAC,CACH,CAAC;EACH,CAAC,EAAE,CAACxD,aAAa,CAAC,CAAC;EAInB,MAAM,CAACyD,aAAa,EAAExB,gBAAgB,CAAC,GAAGlE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEvD,MAAM2F,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI1C,WAAW,KAAK,UAAU,EAAE;MAC9BiB,gBAAgB,CAAEC,SAAS,IAAK;QAC9B,MAAMC,QAAQ,GAAGD,SAAS,GAAG,CAAC;QAC9B,IAAIC,QAAQ,GAAG,CAAC,KAAK,CAAC,EAAE;UACtB;UACAlB,cAAc,CAAC,YAAY,CAAC;UAC5BxB,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACpB,CAAC,MAAM;UACLwB,cAAc,CAAC,aAAa,CAAC;UAC7BxB,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;QACpB;QACA,OAAO0C,QAAQ;MACjB,CAAC,CAAC;IACJ,CAAC,MAAM,IAAInB,WAAW,KAAK,aAAa,IAAIA,WAAW,KAAK,YAAY,EAAE;MACxEC,cAAc,CAAC,UAAU,CAAC;MAC1BxB,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACrB;EACF,CAAC;EAGD3B,SAAS,CAAC,MAAM;IACd,IAAI4D,KAAK,GAAG,IAAI;IAChB,IAAIhC,SAAS,KAAKsB,WAAW,KAAK,UAAU,IAAIJ,UAAU,CAAC,EAAE;MAC3Dc,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxB;QACAJ,qBAAqB,CAAEK,IAAI,IAAK;UAC9B,MAAM+B,OAAO,GAAG,CAAC,GAAG/B,IAAI,CAAC;UACzB,MAAMgC,SAAS,GAAGD,OAAO,CAACE,SAAS,CAAErB,IAAI,IAAKA,IAAI,CAACS,IAAI,KAAKzC,gBAAgB,CAAC;UAC7E,IAAIoD,SAAS,IAAI,CAAC,EAAE;YAClBD,OAAO,CAACC,SAAS,CAAC,CAACR,iBAAiB,IAAI,CAAC,CAAC,CAAC;UAC7C;UACA,OAAOO,OAAO;QAChB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IACA,OAAO,MAAM7B,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,CAAChC,SAAS,EAAEc,gBAAgB,EAAEQ,WAAW,EAAEJ,UAAU,CAAC,CAAC;EAE1D,MAAMkD,qBAAqB,GAAIC,QAAQ,IAAK;IAC1C;IACA,IAAIvD,gBAAgB,EAAE;MACpBe,qBAAqB,CAAEK,IAAI,IAAK;QAC9B,MAAM+B,OAAO,GAAG,CAAC,GAAG/B,IAAI,CAAC;QACzB,MAAMgC,SAAS,GAAGD,OAAO,CAACE,SAAS,CAAErB,IAAI,IAAKA,IAAI,CAACS,IAAI,KAAKzC,gBAAgB,CAAC;QAC7E,IAAIoD,SAAS,IAAI,CAAC,EAAE;UAClBD,OAAO,CAACC,SAAS,CAAC,CAACR,iBAAiB,IAClCY,IAAI,CAACC,KAAK,CAAC,CAAC7D,IAAI,CAAC8D,GAAG,CAAC,CAAC,GAAGC,iBAAiB,IAAI,IAAI,CAAC,CAAC,CAAC;QACzD;QACA,OAAOR,OAAO;MAChB,CAAC,CAAC;IACJ;;IAEA;IACA,MAAM7E,YAAY,GAAGkB,aAAa,CAACoE,IAAI,CAAE5B,IAAI,IAAKA,IAAI,CAACS,IAAI,KAAKc,QAAQ,CAAC;IACzEtD,mBAAmB,CAACsD,QAAQ,CAAC;IAE7B,IAAIjF,YAAY,EAAE;MAChB;MACA,MAAMuF,qBAAqB,GAAGC,qBAAqB,CACjD5B,iBAAiB,CAAC5D,YAAY,CAAC6D,SAAS,EAAE7D,YAAY,CAAC8D,OAAO,CAChE,CAAC;MACD,MAAM2B,QAAQ,GAAGjD,kBAAkB,CAAC8C,IAAI,CAAE5B,IAAI,IAAKA,IAAI,CAACS,IAAI,KAAKc,QAAQ,CAAC;MAC1E,MAAMS,cAAc,GAAGD,QAAQ,GAAGA,QAAQ,CAACnB,iBAAiB,GAAG,CAAC;MAEhEjC,oBAAoB,CAACkD,qBAAqB,GAAGG,cAAc,CAAC;MAC5DnD,iBAAiB,CAAC,IAAI,CAAC;MACvBoD,oBAAoB,CAACrE,IAAI,CAAC8D,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,CAAC,MAAM;MACL/C,oBAAoB,CAAC,CAAC,CAAC;MACvBE,iBAAiB,CAAC,KAAK,CAAC;IAC1B;EACF,CAAC;EAGD,MAAMqD,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAM9B,KAAK,GAAGmB,IAAI,CAACC,KAAK,CAACU,OAAO,GAAG,IAAI,CAAC;IACxC,MAAM7B,OAAO,GAAGkB,IAAI,CAACC,KAAK,CAAEU,OAAO,GAAG,IAAI,GAAI,EAAE,CAAC;IACjD,MAAMC,IAAI,GAAGD,OAAO,GAAG,EAAE;IACzB,OAAO,GAAG9B,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIT,OAAO,CACnDQ,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIqB,IAAI,CAACtB,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EAC3D,CAAC;;EAID;EACAzF,SAAS,CAAC,MAAM;IACd,MAAM4D,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BxB,cAAc,CAAC,IAAIC,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;IACR,OAAO,MAAM0B,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN5D,SAAS,CAAC,MAAM;IACd,IAAIkD,WAAW,KAAK,aAAa,IAAIA,WAAW,KAAK,YAAY,EAAE;MACjErB,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACqB,WAAW,CAAC,CAAC;;EAGjB;EACFlD,SAAS,CAAC,MAAM;IACd,IAAIuC,WAAW,CAACwE,OAAO,EAAE;MACvB,MAAMC,mBAAmB,GAAG5E,WAAW,CAAC6E,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG7E,WAAW,CAAC8E,UAAU,CAAC,CAAC;MAClF3E,WAAW,CAACwE,OAAO,CAACI,QAAQ,CAAC;QAC3BC,GAAG,EAAEJ,mBAAmB,GAAG,EAAE;QAAE;QAC/BK,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACjF,WAAW,CAAC,CAAC;;EAGf;EACA,MAAMkF,sBAAsB,GAAGpH,WAAW,CAAC,MAAM;IAC/C,MAAMqH,KAAK,GAAG,IAAIjF,IAAI,CAAC,CAAC;IACxB,MAAMkF,KAAK,GAAG,EAAE;IAEhBC,MAAM,CAACC,MAAM,CAACjH,KAAK,CAAC,CAACkH,IAAI,CAAC,CAAC,CAACC,OAAO,CAAEC,IAAI,IAAK;MAC5C,MAAMC,aAAa,GAAG,IAAIxF,IAAI,CAACuF,IAAI,CAACE,SAAS,CAAC;MAC9C,MAAMC,WAAW,GAAG,IAAI1F,IAAI,CAACuF,IAAI,CAACI,OAAO,CAAC;MAE1CJ,IAAI,CAACK,QAAQ,CAACN,OAAO,CAAElD,IAAI,IAAK;QAC9B,MAAM;UAAEG,SAAS;UAAEC,OAAO;UAAEqD,YAAY;UAAEC,YAAY,GAAG,CAAC;QAAE,CAAC,GAAG1D,IAAI;QACpE,MAAM,CAAC2D,SAAS,EAAEC,WAAW,CAAC,GAAGzD,SAAS,CAACI,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAACS,MAAM,CAAC;QACjE,MAAM,CAACqD,OAAO,EAAEC,SAAS,CAAC,GAAG1D,OAAO,CAACG,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAACS,MAAM,CAAC;QAE3D,IAAIuD,UAAU,GAAG,EAAE;QACnB,IAAIN,YAAY,KAAK,eAAe,EAAE;UACpCM,UAAU,GAAG,CAACX,aAAa,CAAC;QAC9B,CAAC,MAAM,IAAIK,YAAY,KAAK,WAAW,EAAE;UACvC,IAAIO,WAAW,GAAG,IAAIpG,IAAI,CAACwF,aAAa,CAAC;UACzC,OAAOY,WAAW,IAAIV,WAAW,EAAE;YACjCS,UAAU,CAACE,IAAI,CAAC,IAAIrG,IAAI,CAACoG,WAAW,CAAC,CAAC;YACtCA,WAAW,CAACE,OAAO,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;UAChD;QACF,CAAC,MAAM,IAAIV,YAAY,KAAK,WAAW,EAAE;UACvC,MAAM;YAAEW,WAAW,GAAG,CAAC;YAAEC,UAAU,GAAG,MAAM;YAAEhB,SAAS;YAAEiB,UAAU,GAAG;UAAG,CAAC,GAAGZ,YAAY;UACzF,MAAMa,aAAa,GAAGlB,SAAS,GAAG,IAAIzF,IAAI,CAACyF,SAAS,CAAC,GAAGD,aAAa;UACrE,IAAIY,WAAW,GAAG,IAAIpG,IAAI,CAAC2G,aAAa,CAAC;UAEzC,IAAIF,UAAU,KAAK,MAAM,EAAE;YACzB,OAAOL,WAAW,IAAIV,WAAW,EAAE;cACjCS,UAAU,CAACE,IAAI,CAAC,IAAIrG,IAAI,CAACoG,WAAW,CAAC,CAAC;cACtCA,WAAW,CAACE,OAAO,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,GAAGC,WAAW,CAAC;YAC1D;UACF,CAAC,MAAM,IAAIC,UAAU,KAAK,MAAM,EAAE;YAChC,MAAMG,UAAU,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;YAC7D,OAAOR,WAAW,IAAIV,WAAW,EAAE;cACjC,MAAMmB,SAAS,GAAGD,UAAU,CAACR,WAAW,CAACU,MAAM,CAAC,CAAC,CAAC;cAClD,IAAIJ,UAAU,CAACK,QAAQ,CAACF,SAAS,CAAC,EAAE;gBAClCV,UAAU,CAACE,IAAI,CAAC,IAAIrG,IAAI,CAACoG,WAAW,CAAC,CAAC;cACxC;cACAA,WAAW,CAACE,OAAO,CAACF,WAAW,CAACG,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;YAChD;UACF;QACF;QAEAJ,UAAU,CAACb,OAAO,CAAExC,IAAI,IAAK;UAC3B,IAAIA,IAAI,CAACC,YAAY,CAAC,CAAC,KAAKkC,KAAK,CAAClC,YAAY,CAAC,CAAC,EAAE;YAChDmC,KAAK,CAACmB,IAAI,CAAC;cACT,GAAGjE,IAAI;cACP4E,QAAQ,EAAEzB,IAAI,CAAC1C,IAAI;cACnBN,SAAS,EAAE,IAAIvC,IAAI,CAACiF,KAAK,CAACgC,QAAQ,CAAClB,SAAS,EAAEC,WAAW,CAAC,CAAC;cAC3DxD,OAAO,EAAE,IAAIxC,IAAI,CAACiF,KAAK,CAACgC,QAAQ,CAAChB,OAAO,EAAEC,SAAS,CAAC;YACtD,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,MAAMgB,WAAW,GAAGhC,KAAK,CAACiC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKD,CAAC,CAAC7E,SAAS,GAAG8E,CAAC,CAAC9E,SAAS,CAAC;IACnE1C,gBAAgB,CAACqH,WAAW,CAAC;EAC/B,CAAC,EAAE,CAAC/I,KAAK,CAAC,CAAC;EAEXT,SAAS,CAAC,MAAM;IACd,IAAIY,IAAI,KAAK,MAAM,EAAE;MACnB0G,sBAAsB,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAAC1G,IAAI,EAAE0G,sBAAsB,CAAC,CAAC;EAElCtH,SAAS,CAAC,MAAM;IACd,IAAI4J,cAAc;IAClB,IAAItG,cAAc,IAAI1B,SAAS,KAAKsB,WAAW,KAAK,UAAU,IAAIJ,UAAU,CAAC,EAAE;MAC7E8G,cAAc,GAAG/F,WAAW,CAAC,MAAM;QACjCR,oBAAoB,CAAES,IAAI,IAAKoC,IAAI,CAAC2D,GAAG,CAAC/F,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;MACvD,CAAC,EAAE,IAAI,CAAC;IACV;IACA,OAAO,MAAME,aAAa,CAAC4F,cAAc,CAAC;EAC5C,CAAC,EAAE,CAAChI,SAAS,EAAE0B,cAAc,EAAEJ,WAAW,EAAEJ,UAAU,CAAC,CAAC;EAExD9C,SAAS,CAAC,MAAM;IACd,IAAI4D,KAAK,GAAG,IAAI;IAChB,IAAIhC,SAAS,KAAKsB,WAAW,KAAK,UAAU,IAAIJ,UAAU,CAAC,EAAE;MAC3Dc,KAAK,GAAGC,WAAW,CAAC,MAAM;QACxB;QACAJ,qBAAqB,CAAEK,IAAI,IAAK;UAC9B,MAAM+B,OAAO,GAAG,CAAC,GAAG/B,IAAI,CAAC;UACzB,MAAMgC,SAAS,GAAGD,OAAO,CAACE,SAAS,CAAErB,IAAI,IAAKA,IAAI,CAACS,IAAI,KAAKzC,gBAAgB,CAAC;UAC7E,IAAIoD,SAAS,IAAI,CAAC,EAAE;YAClBD,OAAO,CAACC,SAAS,CAAC,CAACR,iBAAiB,IAAI,CAAC,CAAC,CAAC;UAC7C;UACA,OAAOO,OAAO;QAChB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;IACZ;IACA,OAAO,MAAM7B,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,CAAChC,SAAS,EAAEc,gBAAgB,EAAEQ,WAAW,EAAEJ,UAAU,CAAC,CAAC;EAI1D9C,SAAS,CAAC,MAAM;IACd,MAAM4D,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B,MAAMuC,GAAG,GAAG,IAAI9D,IAAI,CAAC,CAAC;MACtB,IAAI8D,GAAG,CAACa,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAIb,GAAG,CAACc,UAAU,CAAC,CAAC,KAAK,CAAC,EAAE;QAClDI,sBAAsB,CAAC,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;IACX,OAAO,MAAMtD,aAAa,CAACJ,KAAK,CAAC;EACnC,CAAC,EAAE,CAAC0D,sBAAsB,CAAC,CAAC;EAE5B,MAAMwC,oBAAoB,GAAIpF,IAAI,IAAK;IACrC,MAAMqF,SAAS,GAAGrF,IAAI,CAACG,SAAS;IAChC,MAAMmF,OAAO,GAAGtF,IAAI,CAACI,OAAO;IAC5B,MAAMmF,YAAY,GAAGF,SAAS,CAAC9C,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG8C,SAAS,CAAC7C,UAAU,CAAC,CAAC;IACvE,MAAMgD,UAAU,GAAGF,OAAO,CAAC/C,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG+C,OAAO,CAAC9C,UAAU,CAAC,CAAC;;IAEjE;IACA,MAAMiD,UAAU,GAAGzH,gBAAgB,KAAKgC,IAAI,CAACS,IAAI;IACjD,MAAMiF,QAAQ,GAAG1H,gBAAgB,IAAIA,gBAAgB,KAAKgC,IAAI,CAACS,IAAI;IAEnE,oBACE9E,OAAA;MACEgK,SAAS,EAAE,cAAcF,UAAU,GAAG,UAAU,GAAG,EAAE,IACnDC,QAAQ,GAAG,QAAQ,GAAG,EAAE,EACvB;MACHE,KAAK,EAAE;QACLlD,GAAG,EAAE,GAAG6C,YAAY,IAAI;QACxBM,MAAM,EAAE,GAAGL,UAAU,GAAGD,YAAY;MACtC,CAAE;MAEFO,OAAO,EAAEA,CAAA,KAAMxE,qBAAqB,CAACtB,IAAI,CAACS,IAAI,CAAE;MAAAsF,QAAA,gBAEhDpK,OAAA;QAAKgK,SAAS,EAAC,WAAW;QAAAI,QAAA,EAAE/F,IAAI,CAACS;MAAI;QAAAuF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5CxK,OAAA;QAAQgK,SAAS,EAAC,oBAAoB;QAAAI,QAAA,EACnCN,UAAU,GAAG,UAAU,GAAG;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA,GANJnG,IAAI,CAACS,IAAI;MAAAuF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOX,CAAC;EAEV,CAAC;EAED,MAAMjG,iBAAiB,GAAGA,CAACC,SAAS,EAAEC,OAAO,KAAK;IAChD,MAAMgG,IAAI,GAAG,IAAIxI,IAAI,CAACwC,OAAO,GAAGD,SAAS,CAAC;IAC1C,MAAME,KAAK,GAAG+F,IAAI,CAACC,WAAW,CAAC,CAAC;IAChC,MAAM/F,OAAO,GAAG8F,IAAI,CAACE,aAAa,CAAC,CAAC;IACpC,OAAO,GAAGjG,KAAK,CAACS,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIT,OAAO,CACnDQ,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;EACvB,CAAC;EAGD,MAAMwF,qBAAqB,GAAGA,CAAA,KAAM;IAClC,IAAInI,UAAU,EAAE,OAAO,SAAS,CAAC,CAAC;IAClC,QAAQI,WAAW;MACjB,KAAK,UAAU;QACb,OAAO,SAAS;MAAE;MACpB,KAAK,aAAa;QAChB,OAAO,SAAS;MAAE;MACpB,KAAK,YAAY;QACf,OAAO,SAAS;MAAE;MACpB;QACE,OAAO,SAAS;MAAE;IACtB;EACF,CAAC;EAED,MAAMsD,qBAAqB,GAAIjB,QAAQ,IAAK;IAC1C,MAAM,CAACR,KAAK,EAAEC,OAAO,CAAC,GAAGO,QAAQ,CAACN,KAAK,CAAC,GAAG,CAAC,CAACR,GAAG,CAACS,MAAM,CAAC;IACxD,OAAOH,KAAK,GAAG,IAAI,GAAGC,OAAO,GAAG,EAAE;EACpC,CAAC;EAKD,MAAMkG,gBAAgB,GAAItK,IAAI,IAAK;IACjC,IAAIA,IAAI,KAAK,UAAU,EAAE;MACvBqB,eAAe,CAAC,IAAI,CAAC;MACrBN,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;MACnBE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB,CAAC,MAAM,IAAIjB,IAAI,KAAK,aAAa,EAAE;MACjCqB,eAAe,CAAC,KAAK,CAAC;MACtBN,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;MAClBE,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,MAAM,IAAIjB,IAAI,KAAK,YAAY,EAAE;MAChCqB,eAAe,CAAC,KAAK,CAAC;MACtBN,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;MAClBE,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAGD,MAAMsJ,qBAAqB,GAAGA,CAAA,KAAM;IAClC5J,WAAW,CAACT,YAAY,CAAC;IACzBW,WAAW,CAACT,YAAY,CAAC;IACzBK,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAGD,MAAM+J,sBAAsB,GAAIvD,IAAI,IAAK;IACvCtG,WAAW,CAAEuC,IAAI,IAAM,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEuH,EAAE,MAAKxD,IAAI,CAACwD,EAAE,GAAG,IAAI,GAAGxD,IAAK,CAAC;IAC3DpG,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAM6J,sBAAsB,GAAI5G,IAAI,IAAK;IACvCjD,WAAW,CAAEqC,IAAI,IAAM,CAAAA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEqB,IAAI,MAAKT,IAAI,CAACS,IAAI,GAAG,IAAI,GAAGT,IAAK,CAAC;EACjE,CAAC;EAED,MAAM6G,yBAAyB,GAAGA,CAAA,KAAM;IACtCxK,eAAe,CAACO,QAAQ,CAAC;IACzBL,eAAe,CAACO,QAAQ,CAAC;IAEzBL,oBAAoB,CAClBK,QAAQ,GACJ;MACE,GAAGA,QAAQ;MACX8H,QAAQ,EAAEhI,QAAQ,CAAC6D,IAAI;MACvB2C,aAAa,EAAExG,QAAQ,CAACyG,SAAS;MACjCC,WAAW,EAAE1G,QAAQ,CAAC2G,OAAO;MAC7BpD,SAAS,EAAE,IAAIvC,IAAI,CAAC,cAAcd,QAAQ,CAACqD,SAAS,KAAK,CAAC;MAC1DC,OAAO,EAAE,IAAIxC,IAAI,CAAC,cAAcd,QAAQ,CAACsD,OAAO,KAAK;IACvD,CAAC,GACD,IACN,CAAC;IACD,IAAItD,QAAQ,EAAE;MACZ,MAAMmD,YAAY,GAAGC,iBAAiB,CACpC,IAAItC,IAAI,CAAC,cAAcd,QAAQ,CAACqD,SAAS,KAAK,CAAC,EAC/C,IAAIvC,IAAI,CAAC,cAAcd,QAAQ,CAACsD,OAAO,KAAK,CAC9C,CAAC;MACDzB,oBAAoB,CAACmD,qBAAqB,CAAC7B,YAAY,CAAC,CAAC;MACzDpB,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MACLF,oBAAoB,CAAC,CAAC,CAAC;MACvBE,iBAAiB,CAAC,KAAK,CAAC;IAC1B;IAEAlC,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAGD,MAAMmK,UAAU,GAAGA,CAAA,KAAM;IACvBjK,WAAW,CAACT,YAAY,CAAC;IACzBW,WAAW,CAACT,YAAY,CAAC;IACzBK,cAAc,CAAC,KAAK,CAAC;EACvB,CAAC;EAED,oBACEhB,OAAA;IAAKgK,SAAS,EAAC,WAAW;IAAC,YAAS,SAAS;IAAAI,QAAA,gBAC3CpK,OAAA;MAAQgK,SAAS,EAAC,YAAY;MAAAI,QAAA,eAC5BpK,OAAA;QAAAoK,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAITxK,OAAA;MAAKgK,SAAS,EAAC,eAAe;MAAAI,QAAA,gBAC9BpK,OAAA;QAAKgK,SAAS,EAAC,sBAAsB;QAAAI,QAAA,gBACnCpK,OAAA;UACEgK,SAAS,EAAC,mBAAmB;UAC7BG,OAAO,EAAEA,CAAA,KAAM7G,qBAAqB,CAAEG,IAAI,IAAK,CAACA,IAAI,CAAE;UAAA2G,QAAA,EACvD;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACRnH,kBAAkB,iBACjBrD,OAAA;UAAKgK,SAAS,EAAC,oBAAoB;UAAAI,QAAA,gBACjCpK,OAAA;YAAAoK,QAAA,GAAG,SAAO,EAAC,IAAInI,IAAI,CAAC,CAAC,CAAC+C,YAAY,CAAC,CAAC;UAAA;YAAAqF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACzCxK,OAAA;YAAAoK,QAAA,EACGjH,kBAAkB,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAE+G,KAAK,kBAClCpL,OAAA;cAAAoK,QAAA,GACG/F,IAAI,CAACS,IAAI,EAAE,GAAG,eACf9E,OAAA;gBAAAoK,QAAA,GACG7D,UAAU,CAAClC,IAAI,CAACY,iBAAiB,CAAC,EAAC,KAAG,EAACZ,IAAI,CAACa,QAAQ;cAAA;gBAAAmF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC/C,CAAC,EAAC,GAAG,eACbxK,OAAA;gBAAAoK,QAAA,EAAO/F,IAAI,CAACgB;cAAM;gBAAAgF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC;YAAA,GALnBY,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAMV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAGVxK,OAAA;QAAKgK,SAAS,EAAC,gBAAgB;QAAAI,QAAA,EAC5BnH,cAAc,gBACbjD,OAAA;UAAAoK,QAAA,EAAI7D,UAAU,CAACxD,iBAAiB;QAAC;UAAAsH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,gBAEtCxK,OAAA;UAAAoK,QAAA,EAAG;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACnB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENxK,OAAA;QAAKgK,SAAS,EAAC,aAAa;QAAAI,QAAA,gBAC1BpK,OAAA;UACEgK,SAAS,EAAE,cAAczJ,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC3D4J,OAAO,EAAEA,CAAA,KAAM3J,OAAO,CAAC,MAAM,CAAE;UAAA4J,QAAA,EAChC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxK,OAAA;UACEgK,SAAS,EAAE,cAAczJ,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC7D4J,OAAO,EAAEA,CAAA,KAAM;YACb3J,OAAO,CAAC,QAAQ,CAAC;YACjBsK,qBAAqB,CAAC,CAAC;UACzB,CAAE;UAAAV,QAAA,EACH;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTxK,OAAA;UACEgK,SAAS,EAAE,cAAczJ,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,EAAG;UAC3D4J,OAAO,EAAEA,CAAA,KAAM3J,OAAO,CAAC,MAAM,CAAE;UAAA4J,QAAA,EAChC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGAxK,OAAA;MAAKgK,SAAS,EAAC,eAAe;MAAAI,QAAA,gBAE5BpK,OAAA;QAAKgK,SAAS,EAAC,oBAAoB;QAACqB,GAAG,EAAEnJ,WAAY;QAAAkI,QAAA,eACnDpK,OAAA;UAAKgK,SAAS,EAAC,UAAU;UAAAI,QAAA,gBACvBpK,OAAA;YACEgK,SAAS,EAAC,mBAAmB;YAC7BC,KAAK,EAAE;cACL,iBAAiB,EAAE,GAAGlI,WAAW,CAAC6E,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG7E,WAAW,CAAC8E,UAAU,CAAC,CAAC,IAAI;cAChFE,GAAG,EAAE,GAAGhF,WAAW,CAAC6E,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG7E,WAAW,CAAC8E,UAAU,CAAC,CAAC,GAAG,GAAG;YACtE;UAAE;YAAAwD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,EACNc,KAAK,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAE;UAAG,CAAC,CAAC,CAACpH,GAAG,CAAC,CAACqH,CAAC,EAAEC,IAAI,kBACtC1L,OAAA;YAAgBgK,SAAS,EAAC,YAAY;YAACC,KAAK,EAAE;cAAElD,GAAG,EAAE,GAAG2E,IAAI,GAAG,EAAE;YAAK,CAAE;YAAAtB,QAAA,gBACtEpK,OAAA;cAAKgK,SAAS,EAAC,aAAa;cAAAI,QAAA,EACzBsB,IAAI,GAAG,EAAE,GAAG,IAAIA,IAAI,KAAK,GAAG,GAAGA,IAAI;YAAK;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtC,CAAC,eACNxK,OAAA;cAAKgK,SAAS,EAAC;YAAc;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAJ5BkB,IAAI;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKT,CACN,CAAC,EAED3I,aAAa,CAACuC,GAAG,CAAEC,IAAI,IAAKoF,oBAAoB,CAACpF,IAAI,CAAC,CAAC;QAAA;UAAAgG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAGLjK,IAAI,KAAK,MAAM,iBACdP,OAAA;QAAKgK,SAAS,EAAC,WAAW;QAAAI,QAAA,gBAC1BpK,OAAA;UAAAoK,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBxK,OAAA;UAAAoK,QAAA,GAAG,0BACa,eAAApK,OAAA;YAAAoK,QAAA,EAASvI,aAAa,CAAC2J;UAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,EACH3I,aAAa,CAAC2J,MAAM,GAAG,CAAC,gBACvBxL,OAAA;UAAOgK,SAAS,EAAC,YAAY;UAAAI,QAAA,gBAC3BpK,OAAA;YAAAoK,QAAA,eACEpK,OAAA;cAAAoK,QAAA,gBACEpK,OAAA;gBAAAoK,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxK,OAAA;gBAAAoK,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxK,OAAA;gBAAAoK,QAAA,EAAI;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,eACbxK,OAAA;gBAAAoK,QAAA,EAAI;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,KAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACRxK,OAAA;YAAAoK,QAAA,EACGvI,aAAa,CAACuC,GAAG,CAAC,CAACC,IAAI,EAAE+G,KAAK,KAAK;cAClC,MAAMlG,QAAQ,GAAGX,iBAAiB,CAACF,IAAI,CAACG,SAAS,EAAEH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;cAClE,oBACEzE,OAAA;gBAEEgK,SAAS,EAAE,kBACT3H,gBAAgB,KAAKgC,IAAI,CAACS,IAAI,GAAG,UAAU,GAAG,EAAE,EAC/C;gBACHqF,OAAO,EAAEA,CAAA,KAAMxE,qBAAqB,CAACtB,IAAI,CAACS,IAAI,CAAE;gBAAAsF,QAAA,gBAEhDpK,OAAA;kBAAAoK,QAAA,EAAK/F,IAAI,CAACS;gBAAI;kBAAAuF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACpBxK,OAAA;kBAAAoK,QAAA,EAAK/F,IAAI,CAAC4E,QAAQ,IAAI;gBAAK;kBAAAoB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACjCxK,OAAA;kBAAAoK,QAAA,GACG/F,IAAI,CAACG,SAAS,CAACmH,kBAAkB,CAAC,EAAE,EAAE;oBACrCD,IAAI,EAAE,SAAS;oBACfE,MAAM,EAAE,SAAS;oBACjBC,MAAM,EAAE;kBACV,CAAC,CAAC,EAAE,GAAG,EAAC,GACP,EAAC,GAAG,EACJxH,IAAI,CAACI,OAAO,CAACkH,kBAAkB,CAAC,EAAE,EAAE;oBACnCD,IAAI,EAAE,SAAS;oBACfE,MAAM,EAAE,SAAS;oBACjBC,MAAM,EAAE;kBACV,CAAC,CAAC;gBAAA;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,eACLxK,OAAA;kBAAAoK,QAAA,EAAKlF;gBAAQ;kBAAAmF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,KAAC;cAAA,GArBfY,KAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAsBR,CAAC;YAET,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,gBAERxK,OAAA;UAAAoK,QAAA,EAAG;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CACvB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAEJ,eAGDxK,OAAA;QAAKgK,SAAS,EAAC,gBAAgB;QAAAI,QAAA,gBAC7BpK,OAAA;UAAKgK,SAAS,EAAC,aAAa;UAAAI,QAAA,gBAC1BpK,OAAA;YACEgK,SAAS,EAAC,aAAa;YACvBG,OAAO,EAAEA,CAAA,KAAM2B,KAAK,CAAC,oCAAoC,CAAE;YAAA1B,QAAA,EAC5D;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTxK,OAAA;YAAQgK,SAAS,EAAC,aAAa;YAACG,OAAO,EAAEA,CAAA,KAAM3H,cAAc,CAAC,EAAE,CAAE;YAAA4H,QAAA,EAAC;UAEnE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACNxK,OAAA;UAAKgK,SAAS,EAAC,WAAW;UAAAI,QAAA,gBACxBpK,OAAA;YAAO+L,OAAO,EAAC,YAAY;YAAC/B,SAAS,EAAC,YAAY;YAAAI,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC/DxK,OAAA;YACEgL,EAAE,EAAC,YAAY;YACfhB,SAAS,EAAC,YAAY;YACtBgC,KAAK,EAAEzJ,WAAY;YACnB0J,QAAQ,EAAGC,CAAC,IAAK1J,cAAc,CAAC0J,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;YAChDI,WAAW,EAAC;UAA0B;YAAA/B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAGLjK,IAAI,KAAK,QAAQ,IAAIM,iBAAiB,iBACrCb,OAAA;MAAKgK,SAAS,EAAC,aAAa;MAAAI,QAAA,gBAC1BpK,OAAA;QAAAoK,QAAA,EAAI;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBxK,OAAA;QAAAoK,QAAA,gBACEpK,OAAA;UAAAoK,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC3J,iBAAiB,CAACoI,QAAQ;MAAA;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACJxK,OAAA;QAAAoK,QAAA,gBACEpK,OAAA;UAAAoK,QAAA,EAAQ;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC3J,iBAAiB,CAACiE,IAAI;MAAA;QAAAuF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACJxK,OAAA;QAAAoK,QAAA,gBACEpK,OAAA;UAAAoK,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,EAC9B3J,iBAAiB,CAAC2D,SAAS,CAACmH,kBAAkB,CAAC,EAAE,EAAE;UAClDD,IAAI,EAAE,SAAS;UACfE,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACV,CAAC,CAAC,EAAE,GAAG,EAAC,GACP,EAAC,GAAG,EACJhL,iBAAiB,CAAC4D,OAAO,CAACkH,kBAAkB,CAAC,EAAE,EAAE;UAChDD,IAAI,EAAE,SAAS;UACfE,MAAM,EAAE,SAAS;UACjBC,MAAM,EAAE;QACV,CAAC,CAAC;MAAA;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAEJxK,OAAA;QAAAoK,QAAA,gBACEpK,OAAA;UAAAoK,QAAA,EAAQ;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAAC3J,iBAAiB,CAAC4G,aAAa,EAAC,IAAE,EAAC,GAAG,EAClE5G,iBAAiB,CAAC8G,WAAW;MAAA;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACJxK,OAAA;QAAAoK,QAAA,gBACEpK,OAAA;UAAAoK,QAAA,EAAQ;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,EAC7BjG,iBAAiB,CAChB,IAAItC,IAAI,CAACpB,iBAAiB,CAAC2D,SAAS,CAAC,EACrC,IAAIvC,IAAI,CAACpB,iBAAiB,CAAC4D,OAAO,CACpC,CAAC;MAAA;QAAA4F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACN,eAGPxK,OAAA;MAAKgK,SAAS,EAAC,gBAAgB;MAACC,KAAK,EAAE;QAAEoC,eAAe,EAAEzB,qBAAqB,CAAC;MAAE,CAAE;MAAAR,QAAA,gBAClFpK,OAAA;QAAKgK,SAAS,EAAC,iBAAiB;QAAAI,QAAA,gBAC9BpK,OAAA;UAAMgK,SAAS,EAAC,WAAW;UAACG,OAAO,EAAEvG,cAAe;UAAAwG,QAAA,EAAC;QAChD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACPxK,OAAA;UAAKgK,SAAS,EAAC,gBAAgB;UAAAI,QAAA,EAChC,CAAC3H,UAAU,gBACVzC,OAAA,CAAAE,SAAA;YAAAkK,QAAA,gBACEpK,OAAA;cACEgK,SAAS,EAAE,iBAAiBnH,WAAW,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;cACzEsH,OAAO,EAAEA,CAAA,KAAM;gBACbrH,cAAc,CAAC,UAAU,CAAC;gBAC1B+H,gBAAgB,CAAC,UAAU,CAAC;cAC9B,CAAE;cAAAT,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPxK,OAAA;cACEgK,SAAS,EAAE,iBAAiBnH,WAAW,KAAK,aAAa,GAAG,QAAQ,GAAG,EAAE,EAAG;cAC5EsH,OAAO,EAAEA,CAAA,KAAM;gBACbrH,cAAc,CAAC,aAAa,CAAC;gBAC7B+H,gBAAgB,CAAC,aAAa,CAAC;cACjC,CAAE;cAAAT,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACPxK,OAAA;cACEgK,SAAS,EAAE,iBAAiBnH,WAAW,KAAK,YAAY,GAAG,QAAQ,GAAG,EAAE,EAAG;cAC3EsH,OAAO,EAAEA,CAAA,KAAM;gBACbrH,cAAc,CAAC,YAAY,CAAC;gBAC5B+H,gBAAgB,CAAC,YAAY,CAAC;cAChC,CAAE;cAAAT,QAAA,EACH;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,eACP,CAAC,gBAEHxK,OAAA;YACFgK,SAAS,EAAE,iBAAiBvH,UAAU,GAAG,QAAQ,GAAG,EAAE,EAAG;YACzD0H,OAAO,EAAEA,CAAA,KAAM;cACb,IAAI,CAAC1H,UAAU,EAAE;gBACfmB,cAAc,CAAC,CAAC;cAClB,CAAC,MAAM;gBACL;gBACAhB,eAAe,CAAC,CAAC,CAAC;cACpB;YACF,CAAE;YAAAwH,QAAA,EACH;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAEH;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIC,CAAC,eACNxK,OAAA;QAAAoK,QAAA,EAAI7D,UAAU,CAAC9D,UAAU,GAAGE,YAAY,GAAGtB,QAAQ;MAAC;QAAAgJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC,eAC1DxK,OAAA;QAAKgK,SAAS,EAAC,gBAAgB;QAAAI,QAAA,gBAC/BpK,OAAA;UACAmK,OAAO,EAAElH,cAAc,GAAGkB,gBAAgB,GAAG,MAAM9D,KAAK,CAACiM,KAAK,CAAC,sBAAsB,CAAE;UACvFC,QAAQ,EAAE,CAACtJ,cAAe;UAAAmH,QAAA,EAEzB7I,SAAS,GAAG,UAAU,GAAG;QAAS;UAAA8I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,EAEJ/H,UAAU,iBACTzC,OAAA;UAAQmK,OAAO,EAAEA,CAAA,KAAMvH,eAAe,CAAC,CAAC,CAAE;UAAAwH,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAC5D,EACA,CAAC/H,UAAU,iBAAIzC,OAAA;UAAQmK,OAAO,EAAE5E,UAAW;UAAA6E,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAICzJ,WAAW,iBACVf,OAAA;MAAKgK,SAAS,EAAC,OAAO;MAAAI,QAAA,eACpBpK,OAAA;QAAKgK,SAAS,EAAC,oBAAoB;QAAAI,QAAA,gBACjCpK,OAAA;UAAKgK,SAAS,EAAC,YAAY;UAAAI,QAAA,gBACzBpK,OAAA;YAAAoK,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtBpD,MAAM,CAACC,MAAM,CAACjH,KAAK,CAAC,CAACkH,IAAI,CAAC,CAAC,CAAClD,GAAG,CAAEoD,IAAI,iBACpCxH,OAAA;YAEEgK,SAAS,EAAE,aACT,CAAA/I,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE+J,EAAE,MAAKxD,IAAI,CAACwD,EAAE,GAAG,QAAQ,GAAG,EAAE,EACvC;YACHb,OAAO,EAAEA,CAAA,KAAMY,sBAAsB,CAACvD,IAAI,CAAE;YAAA4C,QAAA,gBAE5CpK,OAAA;cAAAoK,QAAA,EAAK5C,IAAI,CAAC1C;YAAI;cAAAuF,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACpBxK,OAAA;cAAAoK,QAAA,GAAG,WACK,EAAC5C,IAAI,CAACE,SAAS,EAAC,KAAG,EAACF,IAAI,CAACI,OAAO;YAAA;cAAAyC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC;UAAA,GATChD,IAAI,CAACwD,EAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUT,CACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNxK,OAAA;UAAKgK,SAAS,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/BxK,OAAA;UAAKgK,SAAS,EAAC,aAAa;UAAAI,QAAA,gBAC1BpK,OAAA;YAAKgK,SAAS,EAAC,eAAe;YAAAI,QAAA,gBAC5BpK,OAAA;cAAQgK,SAAS,EAAC,cAAc;cAACG,OAAO,EAAEe,yBAA0B;cAAAd,QAAA,EAAC;YAErE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTxK,OAAA;cAAQgK,SAAS,EAAC,aAAa;cAACG,OAAO,EAAEgB,UAAW;cAAAf,QAAA,EAAC;YAErD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACNxK,OAAA;YAAAoK,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtBvJ,QAAQ,IAAIA,QAAQ,CAAC4G,QAAQ,gBAC5B7H,OAAA,CAAAE,SAAA;YAAAkK,QAAA,EACGnJ,QAAQ,CAAC4G,QAAQ,CAACzD,GAAG,CAAC,CAACC,IAAI,EAAE+G,KAAK,kBACjCpL,OAAA;cAEEgK,SAAS,EAAE,aACT,CAAA7I,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE2D,IAAI,MAAKT,IAAI,CAACS,IAAI,GAAG,QAAQ,GAAG,EAAE,EAC3C;cACHqF,OAAO,EAAEA,CAAA,KAAMc,sBAAsB,CAAC5G,IAAI,CAAE;cAAA+F,QAAA,gBAE5CpK,OAAA;gBAAAoK,QAAA,EAAK/F,IAAI,CAACS;cAAI;gBAAAuF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpBxK,OAAA;gBAAAoK,QAAA,GAAG,kBACU,EAAC/F,IAAI,CAACG,SAAS,EAAC,KAAG,EAACH,IAAI,CAACI,OAAO;cAAA;gBAAA4F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC1C,CAAC;YAAA,GATCY,KAAK;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAUP,CACN;UAAC,gBACF,CAAC,gBAEHxK,OAAA;YAAAoK,QAAA,EAAG;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACjC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClK,EAAA,CA70BIH,KAAK;AAAAqM,EAAA,GAALrM,KAAK;AA+0BX,eAAeA,KAAK;AAAC,IAAAqM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}