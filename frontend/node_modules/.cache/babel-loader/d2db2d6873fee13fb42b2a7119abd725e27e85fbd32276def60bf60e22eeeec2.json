{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [pomodoroTime, setPomodoroTime] = useState(25 * 60); // 25 minutes in seconds\n  const [pomodoroState, setPomodoroState] = useState(\"Work\"); // Work, Short Break, Long Break\n  const [pomodoroCycles, setPomodoroCycles] = useState(0); // Count work sessions\n  const [isRunning, setIsRunning] = useState(false); // Timer state\n  const intervalRef = useRef(null);\n  useEffect(() => {\n    if (mode === \"auto\") {\n      handleAutoSelectTask();\n    }\n  }, [mode, works]);\n\n  // Timer logic\n  useEffect(() => {\n    if (isRunning && pomodoroTime > 0) {\n      intervalRef.current = setInterval(() => {\n        setPomodoroTime(prev => prev - 1);\n      }, 1000);\n    } else if (pomodoroTime === 0) {\n      handlePomodoroEnd();\n    }\n    return () => clearInterval(intervalRef.current);\n  }, [isRunning, pomodoroTime]);\n  const handlePomodoroEnd = () => {\n    clearInterval(intervalRef.current);\n    if (pomodoroState === \"Work\") {\n      setPomodoroCycles(prev => prev + 1);\n      if ((pomodoroCycles + 1) % 4 === 0) {\n        setPomodoroState(\"Long Break\");\n        setPomodoroTime(15 * 60); // 15 minutes\n      } else {\n        setPomodoroState(\"Short Break\");\n        setPomodoroTime(5 * 60); // 5 minutes\n      }\n    } else {\n      setPomodoroState(\"Work\");\n      setPomodoroTime(25 * 60); // 25 minutes\n    }\n    toast.info(`${pomodoroState} session ended. Starting next session!`);\n  };\n  const handlePomodoroSkip = () => {\n    clearInterval(intervalRef.current);\n    handlePomodoroEnd();\n  };\n  const handlePomodoroPause = () => {\n    setIsRunning(prev => !prev);\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return [String(mins).padStart(2, \"0\"), String(secs).padStart(2, \"0\")];\n  };\n  const handleAutoSelectTask = () => {\n    const now = new Date();\n    const currentTime = now.getHours() * 60 + now.getMinutes();\n    for (const type in works) {\n      for (const work of works[type] || []) {\n        if (work.subWorks && work.subWorks.length > 0) {\n          for (const task of work.subWorks) {\n            const [startHour, startMinute] = task.startTime.split(\":\").map(Number);\n            const [endHour, endMinute] = task.endTime.split(\":\").map(Number);\n            const taskStartTime = startHour * 60 + startMinute;\n            const taskEndTime = endHour * 60 + endMinute;\n            if (currentTime >= taskStartTime && currentTime <= taskEndTime) {\n              setCurrentTask({\n                ...task,\n                workName: work.name,\n                workStartDate: work.startDate,\n                workEndDate: work.endDate\n              });\n              return;\n            }\n          }\n        }\n      }\n    }\n    setCurrentTask(null);\n  };\n  const openManualSelectModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleManualSelectWork = work => {\n    setSelectedWork(work);\n    setSelectedTask(null);\n  };\n  const handleManualSelectTask = task => {\n    setSelectedTask(task);\n  };\n  const handleManualSelectionDone = () => {\n    if (!selectedTask) {\n      toast.error(\"Please select a Task before pressing Done!\");\n      return;\n    }\n    setCurrentTask({\n      ...selectedTask,\n      workName: selectedWork.name,\n      workStartDate: selectedWork.startDate,\n      workEndDate: selectedWork.endDate\n    });\n    setIsModalOpen(false);\n    setSelectedWork(null);\n    setSelectedTask(null);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedWork(null);\n    setSelectedTask(null);\n  };\n  const [minutes, seconds] = formatTime(pomodoroTime);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-modes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"auto\"),\n        children: \"Auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n        onClick: openManualSelectModal,\n        children: \"Manual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"free\"),\n        children: \"Free\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pomodoro-timer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: pomodoroState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flip-clock\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"top\",\n              children: minutes[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bottom\",\n              children: minutes[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"top\",\n              children: minutes[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bottom\",\n              children: minutes[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit colon\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"top\",\n              children: seconds[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bottom\",\n              children: seconds[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"digit\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"top\",\n              children: seconds[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bottom\",\n              children: seconds[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePomodoroPause,\n            children: isRunning ? \"Pause\" : \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePomodoroSkip,\n            children: \"Skip\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Work List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), Object.values(works).flat().map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `work-item ${(selectedWork === null || selectedWork === void 0 ? void 0 : selectedWork.id) === work.id ? \"active\" : \"\"}`,\n            onClick: () => handleManualSelectWork(work),\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: work.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Dates: \", work.startDate, \" - \", work.endDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"modal-close\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Task List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), selectedWork && selectedWork.subWorks ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [selectedWork.subWorks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `task-item ${(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.name) === task.name ? \"active\" : \"\"}`,\n              onClick: () => handleManualSelectTask(task),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: task.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Time: \", task.startTime, \" - \", task.endTime]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleManualSelectionDone,\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a Work to view its tasks.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"wHKUmSlq0YolYGnqAVNaEz6rLl8=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTask","setCurrentTask","isModalOpen","setIsModalOpen","pomodoroTime","setPomodoroTime","pomodoroState","setPomodoroState","pomodoroCycles","setPomodoroCycles","isRunning","setIsRunning","intervalRef","handleAutoSelectTask","current","setInterval","prev","handlePomodoroEnd","clearInterval","info","handlePomodoroSkip","handlePomodoroPause","formatTime","seconds","mins","Math","floor","secs","String","padStart","now","Date","currentTime","getHours","getMinutes","type","work","subWorks","length","task","startHour","startMinute","startTime","split","map","Number","endHour","endMinute","endTime","taskStartTime","taskEndTime","workName","name","workStartDate","startDate","workEndDate","endDate","openManualSelectModal","handleManualSelectWork","handleManualSelectTask","handleManualSelectionDone","error","closeModal","minutes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Object","values","flat","id","index","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTask, setCurrentTask] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const [pomodoroTime, setPomodoroTime] = useState(25 * 60); // 25 minutes in seconds\r\n  const [pomodoroState, setPomodoroState] = useState(\"Work\"); // Work, Short Break, Long Break\r\n  const [pomodoroCycles, setPomodoroCycles] = useState(0); // Count work sessions\r\n  const [isRunning, setIsRunning] = useState(false); // Timer state\r\n  const intervalRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      handleAutoSelectTask();\r\n    }\r\n  }, [mode, works]);\r\n\r\n  // Timer logic\r\n  useEffect(() => {\r\n    if (isRunning && pomodoroTime > 0) {\r\n      intervalRef.current = setInterval(() => {\r\n        setPomodoroTime((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (pomodoroTime === 0) {\r\n      handlePomodoroEnd();\r\n    }\r\n    return () => clearInterval(intervalRef.current);\r\n  }, [isRunning, pomodoroTime]);\r\n\r\n  const handlePomodoroEnd = () => {\r\n    clearInterval(intervalRef.current);\r\n    if (pomodoroState === \"Work\") {\r\n      setPomodoroCycles((prev) => prev + 1);\r\n      if ((pomodoroCycles + 1) % 4 === 0) {\r\n        setPomodoroState(\"Long Break\");\r\n        setPomodoroTime(15 * 60); // 15 minutes\r\n      } else {\r\n        setPomodoroState(\"Short Break\");\r\n        setPomodoroTime(5 * 60); // 5 minutes\r\n      }\r\n    } else {\r\n      setPomodoroState(\"Work\");\r\n      setPomodoroTime(25 * 60); // 25 minutes\r\n    }\r\n    toast.info(`${pomodoroState} session ended. Starting next session!`);\r\n  };\r\n\r\n  const handlePomodoroSkip = () => {\r\n    clearInterval(intervalRef.current);\r\n    handlePomodoroEnd();\r\n  };\r\n\r\n  const handlePomodoroPause = () => {\r\n    setIsRunning((prev) => !prev);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return [String(mins).padStart(2, \"0\"), String(secs).padStart(2, \"0\")];\r\n  };\r\n\r\n  const handleAutoSelectTask = () => {\r\n    const now = new Date();\r\n    const currentTime = now.getHours() * 60 + now.getMinutes();\r\n\r\n    for (const type in works) {\r\n      for (const work of works[type] || []) {\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          for (const task of work.subWorks) {\r\n            const [startHour, startMinute] = task.startTime.split(\":\").map(Number);\r\n            const [endHour, endMinute] = task.endTime.split(\":\").map(Number);\r\n            const taskStartTime = startHour * 60 + startMinute;\r\n            const taskEndTime = endHour * 60 + endMinute;\r\n\r\n            if (currentTime >= taskStartTime && currentTime <= taskEndTime) {\r\n              setCurrentTask({\r\n                ...task,\r\n                workName: work.name,\r\n                workStartDate: work.startDate,\r\n                workEndDate: work.endDate,\r\n              });\r\n              return;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setCurrentTask(null);\r\n  };\r\n\r\n  const openManualSelectModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleManualSelectWork = (work) => {\r\n    setSelectedWork(work);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const handleManualSelectTask = (task) => {\r\n    setSelectedTask(task);\r\n  };\r\n\r\n  const handleManualSelectionDone = () => {\r\n    if (!selectedTask) {\r\n      toast.error(\"Please select a Task before pressing Done!\");\r\n      return;\r\n    }\r\n    setCurrentTask({\r\n      ...selectedTask,\r\n      workName: selectedWork.name,\r\n      workStartDate: selectedWork.startDate,\r\n      workEndDate: selectedWork.endDate,\r\n    });\r\n    setIsModalOpen(false);\r\n    setSelectedWork(null);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n    setSelectedWork(null);\r\n    setSelectedTask(null);\r\n  };\r\n\r\n  const [minutes, seconds] = formatTime(pomodoroTime);\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"focus-modes\">\r\n        <button\r\n          className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"auto\")}\r\n        >\r\n          Auto\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n          onClick={openManualSelectModal}\r\n        >\r\n          Manual\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"free\")}\r\n        >\r\n          Free\r\n        </button>\r\n\r\n        <div className=\"pomodoro-timer\">\r\n          <h3>{pomodoroState}</h3>\r\n          <div className=\"flip-clock\">\r\n            <div className=\"digit\">\r\n              <span className=\"top\">{minutes[0]}</span>\r\n              <span className=\"bottom\">{minutes[0]}</span>\r\n            </div>\r\n            <div className=\"digit\">\r\n              <span className=\"top\">{minutes[1]}</span>\r\n              <span className=\"bottom\">{minutes[1]}</span>\r\n            </div>\r\n            <div className=\"digit colon\">:</div>\r\n            <div className=\"digit\">\r\n              <span className=\"top\">{seconds[0]}</span>\r\n              <span className=\"bottom\">{seconds[0]}</span>\r\n            </div>\r\n            <div className=\"digit\">\r\n              <span className=\"top\">{seconds[1]}</span>\r\n              <span className=\"bottom\">{seconds[1]}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"pomodoro-controls\">\r\n            <button onClick={handlePomodoroPause}>{isRunning ? \"Pause\" : \"Start\"}</button>\r\n            <button onClick={handlePomodoroSkip}>Skip</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Work List</h2>\r\n              {Object.values(works).flat().map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className={`work-item ${selectedWork?.id === work.id ? \"active\" : \"\"}`}\r\n                  onClick={() => handleManualSelectWork(work)}\r\n                >\r\n                  <h4>{work.name}</h4>\r\n                  <p>Dates: {work.startDate} - {work.endDate}</p>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"divider\"></div>\r\n            <div className=\"modal-right\">\r\n              <button className=\"modal-close\" onClick={closeModal}>\r\n                &times;\r\n              </button>\r\n              <h2>Task List</h2>\r\n              {selectedWork && selectedWork.subWorks ? (\r\n                <>\r\n                  {selectedWork.subWorks.map((task, index) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`task-item ${selectedTask?.name === task.name ? \"active\" : \"\"}`}\r\n                      onClick={() => handleManualSelectTask(task)}\r\n                    >\r\n                      <h4>{task.name}</h4>\r\n                      <p>Time: {task.startTime} - {task.endTime}</p>\r\n                    </div>\r\n                  ))}\r\n                  <button onClick={handleManualSelectionDone}>Done</button>\r\n                </>\r\n              ) : (\r\n                <p>Select a Work to view its tasks.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}