{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\n\n  // Filter works based on view mode (ongoing/completed) and search query\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat();\n    if (viewMode === \"ongoing\") {\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index);\n    }\n    return [];\n  }, [viewMode, works, completedWorks]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n\n  // Handle marking work as completed or ongoing\n  const handleToggleComplete = work => {\n    if (viewMode === \"ongoing\") {\n      // Mark work as completed\n      setCompletedWorks(prev => {\n        const updatedCompleted = [...prev, work];\n        return updatedCompleted;\n      });\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        Object.keys(updatedWorks).forEach(key => {\n          updatedWorks[key] = updatedWorks[key].filter(w => w.id !== work.id);\n        });\n        return updatedWorks;\n      });\n\n      // Mark all tasks as completed if there are any tasks\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        if (work.subWorks && work.subWorks.length > 0) {\n          work.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = true;\n          });\n        }\n        return updatedStatus;\n      });\n    } else {\n      // Manually untick the work\n      setCompletedWorks(prev => {\n        const updatedCompleted = prev.filter(w => w.id !== work.id);\n        return updatedCompleted;\n      });\n      setWorks(prevWorks => {\n        const updatedWorks = {\n          ...prevWorks\n        };\n        const type = work.type || \"doNow\";\n        if (!updatedWorks[type].some(w => w.id === work.id)) {\n          updatedWorks[type] = [...updatedWorks[type], work];\n        }\n        return updatedWorks;\n      });\n\n      // Untick all tasks for manual work untick\n      setTaskCompletionStatus(prevStatus => {\n        const updatedStatus = {\n          ...prevStatus\n        };\n        if (work.subWorks && work.subWorks.length > 0) {\n          work.subWorks.forEach((_, index) => {\n            updatedStatus[`${work.id}-${index}`] = false;\n          });\n        }\n        return updatedStatus;\n      });\n    }\n  };\n\n  // Toggle task completion status\n  const toggleTaskCompletion = (workId, taskIndex) => {\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      const taskKey = `${workId}-${taskIndex}`;\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\n      const work = filteredWorks.find(w => w.id === workId);\n      if (work) {\n        const totalTasks = work.subWorks.length;\n        const completedTasks = work.subWorks.filter((_, index) => updatedStatus[`${workId}-${index}`]).length;\n\n        // Nếu tất cả các task được hoàn thành, đánh dấu work là hoàn thành\n        if (completedTasks === totalTasks) {\n          setCompletedWorks(prev => {\n            if (!prev.some(w => w.id === work.id)) {\n              return [...prev, work];\n            }\n            return prev;\n          });\n          setWorks(prevWorks => {\n            const updatedWorks = {\n              ...prevWorks\n            };\n            Object.keys(updatedWorks).forEach(key => {\n              updatedWorks[key] = updatedWorks[key].filter(w => w.id !== work.id);\n            });\n            return updatedWorks;\n          });\n        } else if (completedTasks < totalTasks && viewMode === \"completed\") {\n          // Nếu bỏ tick một task của work đã hoàn thành, chuyển work về ongoing nhưng chỉ bỏ tick task đó\n          setCompletedWorks(prev => prev.filter(w => w.id !== work.id));\n          setWorks(prevWorks => {\n            const updatedWorks = {\n              ...prevWorks\n            };\n            const type = work.type || \"doNow\";\n            if (!updatedWorks[type].some(w => w.id === work.id)) {\n              updatedWorks[type] = [...updatedWorks[type], work];\n            }\n            return updatedWorks;\n          });\n        }\n      }\n      return updatedStatus;\n    });\n  };\n\n  // Handle deleting a work item\n  const handleDeleteWork = workId => {\n    // Remove from works\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(key => {\n        updatedWorks[key] = updatedWorks[key].filter(w => w.id !== workId);\n      });\n      return updatedWorks;\n    });\n\n    // Remove from completedWorks\n    setCompletedWorks(prevCompletedWorks => prevCompletedWorks.filter(work => work.id !== workId));\n  };\n\n  // Handle deleting a task within a work\n  const handleDeleteTask = (workId, taskIndex) => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      Object.keys(updatedWorks).forEach(type => {\n        const workIndex = updatedWorks[type].findIndex(work => work.id === workId);\n        if (workIndex !== -1) {\n          const updatedWork = {\n            ...updatedWorks[type][workIndex]\n          };\n          updatedWork.subWorks = updatedWork.subWorks.filter((_, index) => index !== taskIndex);\n          updatedWorks[type] = [...updatedWorks[type].slice(0, workIndex), updatedWork, ...updatedWorks[type].slice(workIndex + 1)];\n        }\n      });\n      return updatedWorks;\n    });\n\n    // Also need to update the task completion status\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      delete updatedStatus[`${workId}-${taskIndex}`];\n      return updatedStatus;\n    });\n  };\n\n  // Calculate the progress of each work based on task completion status\n  const calculateProgress = work => {\n    if (!work.subWorks || work.subWorks.length === 0) {\n      // Nếu không có task nào, nếu work hoàn thành thì trả về 100%, ngược lại là 0%\n      return completedWorks.some(completedWork => completedWork.id === work.id) ? 100 : 0;\n    }\n    const totalTasks = work.subWorks.length;\n    const completedTasks = work.subWorks.filter((_, index) => {\n      const taskKey = `${work.id}-${index}`;\n      return taskCompletionStatus[taskKey];\n    }).length;\n    return Math.round(completedTasks / totalTasks * 100);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : \"No completed works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const progress = calculateProgress(work);\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\",\n                  onChange: () => handleToggleComplete(work)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this), work.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [viewMode === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  onClick: () => handleDeleteWork(work.id),\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-container progress-container-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"progress\",\n                  style: {\n                    width: `${progress}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"progress-percentage\",\n                children: [progress, \"%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)];\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              const taskKey = `${work.id}-${index}`;\n              const isTaskCompleted = taskCompletionStatus[taskKey];\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: !!isTaskCompleted,\n                    onChange: () => toggleTaskCompletion(work.id, index)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      textDecoration: isTaskCompleted ? \"line-through\" : \"none\"\n                    },\n                    children: [task.name, \" - Description: \", task.description, \", Time:\", \" \", task.startTime, \" - \", task.endTime, \", Repeat:\", \" \", task.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${task.customRepeat.repeatEvery} ${task.customRepeat.repeatUnit}${task.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(task.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\", \")}`}` : task.repeatOption]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"task-delete-icon\",\n                    onClick: () => handleDeleteTask(work.id, index),\n                    children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                      size: 14,\n                      className: \"task-delete-icon-style\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 340,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this)\n              }, taskKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"1j+Cdkemkm7MAQ1ZJJVRGNDdKCM=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Project","works","setWorks","completedWorks","setCompletedWorks","_s","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","taskCompletionStatus","setTaskCompletionStatus","filteredWorks","allOngoingWorks","Object","values","flat","filter","work","some","completedWork","id","index","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleToggleComplete","prev","updatedCompleted","prevWorks","updatedWorks","keys","forEach","key","w","prevStatus","updatedStatus","subWorks","length","_","type","toggleTaskCompletion","taskIndex","taskKey","find","totalTasks","completedTasks","handleDeleteWork","prevCompletedWorks","handleDeleteTask","workIndex","updatedWork","slice","calculateProgress","Math","round","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","flatMap","progress","workElements","htmlFor","checked","name","color","style","width","task","isTaskCompleted","push","textDecoration","description","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","Date","startDate","toLocaleDateString","repeatDays","join","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = ({ works, setWorks, completedWorks, setCompletedWorks }) => {\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]);\r\n  const [taskCompletionStatus, setTaskCompletionStatus] = useState({});\r\n\r\n  // Filter works based on view mode (ongoing/completed) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat();\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      return allOngoingWorks.filter(\r\n        (work) =>\r\n          !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) =>\r\n          self.findIndex((work) => work.id === completedWork.id) === index\r\n      );\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  // Handle marking work as completed or ongoing\r\n  const handleToggleComplete = (work) => {\r\n    if (viewMode === \"ongoing\") {\r\n      // Mark work as completed\r\n      setCompletedWorks((prev) => {\r\n        const updatedCompleted = [...prev, work];\r\n        return updatedCompleted;\r\n      });\r\n\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        Object.keys(updatedWorks).forEach((key) => {\r\n          updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== work.id);\r\n        });\r\n        return updatedWorks;\r\n      });\r\n\r\n      // Mark all tasks as completed if there are any tasks\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          work.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = true;\r\n          });\r\n        }\r\n        return updatedStatus;\r\n      });\r\n    } else {\r\n      // Manually untick the work\r\n      setCompletedWorks((prev) => {\r\n        const updatedCompleted = prev.filter((w) => w.id !== work.id);\r\n        return updatedCompleted;\r\n      });\r\n\r\n      setWorks((prevWorks) => {\r\n        const updatedWorks = { ...prevWorks };\r\n        const type = work.type || \"doNow\";\r\n        if (!updatedWorks[type].some((w) => w.id === work.id)) {\r\n          updatedWorks[type] = [...updatedWorks[type], work];\r\n        }\r\n        return updatedWorks;\r\n      });\r\n\r\n      // Untick all tasks for manual work untick\r\n      setTaskCompletionStatus((prevStatus) => {\r\n        const updatedStatus = { ...prevStatus };\r\n        if (work.subWorks && work.subWorks.length > 0) {\r\n          work.subWorks.forEach((_, index) => {\r\n            updatedStatus[`${work.id}-${index}`] = false;\r\n          });\r\n        }\r\n        return updatedStatus;\r\n      });\r\n    }\r\n  };\r\n\r\n  // Toggle task completion status\r\n  const toggleTaskCompletion = (workId, taskIndex) => {\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      const taskKey = `${workId}-${taskIndex}`;\r\n      updatedStatus[taskKey] = !updatedStatus[taskKey];\r\n\r\n      const work = filteredWorks.find((w) => w.id === workId);\r\n      if (work) {\r\n        const totalTasks = work.subWorks.length;\r\n        const completedTasks = work.subWorks.filter((_, index) => updatedStatus[`${workId}-${index}`]).length;\r\n\r\n        // Nếu tất cả các task được hoàn thành, đánh dấu work là hoàn thành\r\n        if (completedTasks === totalTasks) {\r\n          setCompletedWorks((prev) => {\r\n            if (!prev.some((w) => w.id === work.id)) {\r\n              return [...prev, work];\r\n            }\r\n            return prev;\r\n          });\r\n\r\n          setWorks((prevWorks) => {\r\n            const updatedWorks = { ...prevWorks };\r\n            Object.keys(updatedWorks).forEach((key) => {\r\n              updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== work.id);\r\n            });\r\n            return updatedWorks;\r\n          });\r\n        } else if (completedTasks < totalTasks && viewMode === \"completed\") {\r\n          // Nếu bỏ tick một task của work đã hoàn thành, chuyển work về ongoing nhưng chỉ bỏ tick task đó\r\n          setCompletedWorks((prev) => prev.filter((w) => w.id !== work.id));\r\n\r\n          setWorks((prevWorks) => {\r\n            const updatedWorks = { ...prevWorks };\r\n            const type = work.type || \"doNow\";\r\n            if (!updatedWorks[type].some((w) => w.id === work.id)) {\r\n              updatedWorks[type] = [...updatedWorks[type], work];\r\n            }\r\n            return updatedWorks;\r\n          });\r\n        }\r\n      }\r\n\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Handle deleting a work item\r\n  const handleDeleteWork = (workId) => {\r\n    // Remove from works\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((key) => {\r\n        updatedWorks[key] = updatedWorks[key].filter((w) => w.id !== workId);\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    // Remove from completedWorks\r\n    setCompletedWorks((prevCompletedWorks) =>\r\n      prevCompletedWorks.filter((work) => work.id !== workId)\r\n    );\r\n  };\r\n\r\n  // Handle deleting a task within a work\r\n  const handleDeleteTask = (workId, taskIndex) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      Object.keys(updatedWorks).forEach((type) => {\r\n        const workIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n        if (workIndex !== -1) {\r\n          const updatedWork = { ...updatedWorks[type][workIndex] };\r\n          updatedWork.subWorks = updatedWork.subWorks.filter(\r\n            (_, index) => index !== taskIndex\r\n          );\r\n          updatedWorks[type] = [\r\n            ...updatedWorks[type].slice(0, workIndex),\r\n            updatedWork,\r\n            ...updatedWorks[type].slice(workIndex + 1),\r\n          ];\r\n        }\r\n      });\r\n      return updatedWorks;\r\n    });\r\n\r\n    // Also need to update the task completion status\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n      delete updatedStatus[`${workId}-${taskIndex}`];\r\n      return updatedStatus;\r\n    });\r\n  };\r\n\r\n  // Calculate the progress of each work based on task completion status\r\n  const calculateProgress = (work) => {\r\n    if (!work.subWorks || work.subWorks.length === 0) {\r\n      // Nếu không có task nào, nếu work hoàn thành thì trả về 100%, ngược lại là 0%\r\n      return completedWorks.some((completedWork) => completedWork.id === work.id)\r\n        ? 100\r\n        : 0;\r\n    }\r\n\r\n    const totalTasks = work.subWorks.length;\r\n    const completedTasks = work.subWorks.filter((_, index) => {\r\n      const taskKey = `${work.id}-${index}`;\r\n      return taskCompletionStatus[taskKey];\r\n    }).length;\r\n\r\n    return Math.round((completedTasks / totalTasks) * 100);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${\r\n            viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"\r\n          } works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n      </div>\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\"\r\n              ? \"No ongoing works\"\r\n              : \"No completed works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const progress = calculateProgress(work);\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={viewMode === \"completed\"}\r\n                        onChange={() => handleToggleComplete(work)}\r\n                      />\r\n                      {work.name}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {viewMode === \"ongoing\" && (\r\n                        <button id=\"del-bt\" onClick={() => handleDeleteWork(work.id)}>\r\n                          <AiFillDelete size={20} color=\"#FF6969\" />\r\n                        </button>\r\n                      )}\r\n                      <button\r\n                        className=\"expand-bt\"\r\n                        onClick={() => toggleExpand(work.id)}\r\n                      >\r\n                        {expandedWorkIds.includes(work.id) ? (\r\n                          <FaChevronUp />\r\n                        ) : (\r\n                          <FaChevronDown />\r\n                        )}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                  {/* Thanh tiến trình ở dòng riêng */}\r\n                  <div className=\"progress-container progress-container-full\">\r\n                    <div className=\"progress-bar\">\r\n                      <div\r\n                        className=\"progress\"\r\n                        style={{\r\n                          width: `${progress}%`,\r\n                        }}\r\n                      ></div>\r\n                    </div>\r\n                    <span className=\"progress-percentage\">{progress}%</span>\r\n                  </div>\r\n                </li>,\r\n              ];\r\n\r\n              if (\r\n                expandedWorkIds.includes(work.id) &&\r\n                work.subWorks &&\r\n                work.subWorks.length > 0\r\n              ) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  const taskKey = `${work.id}-${index}`;\r\n                  const isTaskCompleted = taskCompletionStatus[taskKey];\r\n\r\n                  workElements.push(\r\n                    <li key={taskKey} className=\"task-item\">\r\n                      <div className=\"task-details\">\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={!!isTaskCompleted}\r\n                          onChange={() => toggleTaskCompletion(work.id, index)}\r\n                        />\r\n                        <span\r\n                          style={{\r\n                            textDecoration: isTaskCompleted\r\n                              ? \"line-through\"\r\n                              : \"none\",\r\n                          }}\r\n                        >\r\n                          {task.name} - Description: {task.description}, Time:{\" \"}\r\n                          {task.startTime} - {task.endTime}, Repeat:{\" \"}\r\n                          {task.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${task.customRepeat.repeatEvery} ${\r\n                                task.customRepeat.repeatUnit\r\n                              }${\r\n                                task.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(\r\n                                      task.customRepeat.startDate\r\n                                    ).toLocaleDateString(\"vi-VN\")}`\r\n                                  : ` một lần vào các ngày ${task.customRepeat.repeatDays.join(\r\n                                      \", \"\r\n                                    )}`\r\n                              }`\r\n                            : task.repeatOption}\r\n                        </span>\r\n                        <button\r\n                          className=\"task-delete-icon\"\r\n                          onClick={() => handleDeleteTask(work.id, index)}\r\n                        >\r\n                          <AiFillDelete size={14} className=\"task-delete-icon-style\" />\r\n                        </button>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}