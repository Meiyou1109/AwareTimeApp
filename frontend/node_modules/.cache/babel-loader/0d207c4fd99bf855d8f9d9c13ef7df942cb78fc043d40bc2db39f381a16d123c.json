{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Aos from \"aos\";\nimport \"./styles/dashboard.css\";\nimport { AiFillDelete, AiFillEdit, AiOutlinePlus } from \"react-icons/ai\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  works,\n  setWorks,\n  completedWorks,\n  setCompletedWorks,\n  recycledWorks,\n  setRecycledWorks,\n  taskCompletionStatus,\n  setTaskCompletionStatus\n}) => {\n  _s();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\n  const [formData, setFormData] = useState({\n    id: null,\n    name: \"\",\n    type: \"\",\n    startDate: \"\",\n    endDate: \"\",\n    describe: \"\",\n    tag: \"\"\n  });\n  const [taskFormData, setTaskFormData] = useState({\n    workId: null,\n    taskName: \"\",\n    taskDescription: \"\",\n    startTime: \"\",\n    endTime: \"\",\n    repeatOption: \"Không lặp lại\",\n    customRepeat: {\n      repeatEvery: 1,\n      repeatUnit: \"ngày\",\n      repeatDays: []\n    }\n  });\n  const [editMode, setEditMode] = useState(false);\n  useEffect(() => {\n    Aos.init({\n      duration: 1000\n    });\n  }, []);\n  useEffect(() => {\n    if (isModalOpen || isTaskModalOpen) {\n      document.body.classList.add(\"disable-hover\");\n    } else {\n      document.body.classList.remove(\"disable-hover\");\n    }\n  }, [isModalOpen, isTaskModalOpen]);\n  const handleAddNewWork = () => {\n    setIsModalOpen(true);\n    setEditMode(false);\n    setFormData({\n      id: null,\n      name: \"\",\n      type: \"\",\n      startDate: \"\",\n      endDate: \"\",\n      describe: \"\",\n      tag: \"\"\n    });\n  };\n  const handleFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleTaskFormChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTaskFormData(prev => {\n      const updated = {\n        ...prev,\n        [name]: value\n      };\n      if (name === \"customRepeat.repeatUnit\" && value === \"ngày\") {\n        updated.customRepeat.repeatDays = [];\n      }\n      return updated;\n    });\n  };\n  const handleAddTask = workId => {\n    const work = Object.values(works).flat().find(work => work.id === workId);\n    setIsTaskModalOpen(true);\n    setTaskFormData({\n      ...taskFormData,\n      workId,\n      workName: work ? work.name : \"\"\n    });\n  };\n  const handleDone = () => {\n    const {\n      name,\n      type,\n      startDate,\n      endDate\n    } = formData;\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      if (editMode) {\n        Object.keys(updatedWorks).forEach(type => {\n          updatedWorks[type] = updatedWorks[type].filter(work => work.id !== formData.id);\n        });\n      }\n      updatedWorks[type] = [...updatedWorks[type], {\n        ...formData,\n        id: formData.id || Date.now(),\n        subWorks: formData.subWorks || []\n      }];\n      return updatedWorks;\n    });\n    setIsModalOpen(false);\n  };\n  const handleDoneTask = () => {\n    const {\n      startTime,\n      endTime,\n      taskName,\n      taskDescription\n    } = taskFormData;\n    if (!taskName || !startTime || !endTime) {\n      alert(\"Please fill in all fields.\");\n      return;\n    }\n    let [startHour, startMinute] = startTime.split(\":\").map(Number);\n    let [endHour, endMinute] = endTime.split(\":\").map(Number);\n    if (endHour === 0 && endMinute === 0) {\n      endHour = 24;\n    }\n    const startTotalMinutes = startHour * 60 + startMinute;\n    const endTotalMinutes = endHour * 60 + endMinute;\n    if (endTotalMinutes < startTotalMinutes) {\n      alert(\"End time must be equal to or after start time.\");\n      return;\n    }\n    const updatedCustomRepeat = {\n      ...taskFormData.customRepeat\n    };\n    if (updatedCustomRepeat.repeatUnit === \"ngày\") {\n      delete updatedCustomRepeat.repeatDays;\n    }\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      const workType = Object.keys(updatedWorks).find(type => updatedWorks[type].some(work => work.id === taskFormData.workId));\n      if (!workType) {\n        alert(\"Work not found. Please try again.\");\n        return prevWorks;\n      }\n      const workIndex = updatedWorks[workType].findIndex(work => work.id === taskFormData.workId);\n      if (workIndex === -1) {\n        alert(\"Work not found. Please try again.\");\n        return prevWorks;\n      }\n      const work = updatedWorks[workType][workIndex];\n      if (!work.subWorks) {\n        work.subWorks = [];\n      }\n      const isDuplicateTask = work.subWorks.some(subWork => subWork.name === taskFormData.taskName);\n      if (!isDuplicateTask) {\n        work.subWorks.push({\n          name: taskFormData.taskName,\n          description: taskFormData.taskDescription,\n          startTime: taskFormData.startTime,\n          endTime: taskFormData.endTime,\n          repeatOption: taskFormData.repeatOption,\n          customRepeat: taskFormData.customRepeat\n        });\n      }\n      return updatedWorks;\n    });\n    setTaskFormData({\n      workId: null,\n      taskName: \"\",\n      taskDescription: \"\",\n      startTime: \"\",\n      endTime: \"\",\n      repeatOption: \"Không lặp lại\",\n      customRepeat: {\n        repeatEvery: 1,\n        repeatUnit: \"ngày\",\n        repeatDays: []\n      }\n    });\n    setIsTaskModalOpen(false);\n  };\n  const handleCancel = () => {\n    setIsModalOpen(false);\n    setIsTaskModalOpen(false);\n  };\n  const handleDeleteWork = (type, workId) => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n\n      // Tìm và lưu lại work cần xóa\n      const deletedWorkIndex = updatedWorks[type].findIndex(work => work.id === workId);\n      if (deletedWorkIndex !== -1) {\n        const deletedWork = updatedWorks[type][deletedWorkIndex];\n\n        // Gắn trạng thái task từ taskCompletionStatus vào work trước khi thêm vào recycle\n        const updatedSubWorks = (deletedWork.subWorks || []).map((task, index) => ({\n          ...task,\n          isCompleted: !!taskCompletionStatus[`${workId}-${index}`] // Lấy trạng thái task\n        }));\n\n        // Thêm work vào RecycledWorks với trạng thái task đã cập nhật\n        setRecycledWorks(prevRecycledWorks => {\n          const newRecycledWork = {\n            ...deletedWork,\n            subWorks: updatedSubWorks,\n            // Cập nhật subWorks\n            isCompleted: completedWorks.some(work => work.id === workId) // Đánh dấu trạng thái hoàn thành\n          };\n          return [...prevRecycledWorks, newRecycledWork];\n        });\n\n        // Xóa work khỏi works\n        updatedWorks[type].splice(deletedWorkIndex, 1);\n      }\n      return updatedWorks;\n    });\n\n    // Cập nhật trạng thái của các task liên quan trong taskCompletionStatus\n    setTaskCompletionStatus(prevStatus => {\n      const updatedStatus = {\n        ...prevStatus\n      };\n      const relatedTasks = Object.keys(updatedStatus).filter(key => key.startsWith(`${workId}-`));\n      relatedTasks.forEach(key => {\n        delete updatedStatus[key];\n      });\n      return updatedStatus;\n    });\n  };\n  const handleEditTask = work => {\n    setEditMode(true);\n    setFormData(work);\n    setIsModalOpen(true);\n  };\n  const handleWorkCheckbox = (type, workId) => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      const workIndex = updatedWorks[type].findIndex(work => work.id === workId);\n      if (workIndex !== -1) {\n        const work = {\n          ...updatedWorks[type][workIndex]\n        };\n\n        // Kiểm tra trạng thái hiện tại và thay đổi\n        if (!completedWorks.some(w => w.id === workId)) {\n          // Nếu chưa trong completedWorks, thêm vào\n          setCompletedWorks(prevCompleted => [...prevCompleted, {\n            ...work,\n            isCompleted: true\n          }]);\n\n          // Đánh dấu tất cả các task con của work là hoàn thành\n          setTaskCompletionStatus(prevStatus => {\n            const updatedStatus = {\n              ...prevStatus\n            };\n            work.subWorks.forEach((_, index) => {\n              updatedStatus[`${work.id}-${index}`] = true;\n            });\n            return updatedStatus;\n          });\n\n          // Xóa work khỏi works\n          updatedWorks[type] = updatedWorks[type].filter(w => w.id !== workId);\n        } else {\n          // Nếu đã trong completedWorks, xóa khỏi đó và thêm lại vào works\n          setCompletedWorks(prevCompleted => prevCompleted.filter(w => w.id !== workId));\n\n          // Đánh dấu tất cả các task con của work là chưa hoàn thành\n          setTaskCompletionStatus(prevStatus => {\n            const updatedStatus = {\n              ...prevStatus\n            };\n            work.subWorks.forEach((_, index) => {\n              updatedStatus[`${work.id}-${index}`] = false;\n            });\n            return updatedStatus;\n          });\n\n          // Đưa work trở lại works\n          updatedWorks[type].push({\n            ...work,\n            isCompleted: false\n          });\n        }\n      }\n      return updatedWorks;\n    });\n  };\n  const handleDragStart = (e, work, type) => {\n    e.dataTransfer.setData(\"work\", JSON.stringify({\n      ...work,\n      type\n    }));\n  };\n  const handleDrop = (e, newType) => {\n    const data = JSON.parse(e.dataTransfer.getData(\"work\"));\n    if (data.type === newType) return;\n    setWorks(prevWorks => {\n      const updatedSourceWorks = prevWorks[data.type].filter(work => work.id !== data.id);\n      const updatedTargetWorks = [...prevWorks[newType], {\n        ...data,\n        type: newType\n      }];\n      return {\n        ...prevWorks,\n        [data.type]: updatedSourceWorks,\n        [newType]: updatedTargetWorks\n      };\n    });\n  };\n  const allowDrop = e => e.preventDefault();\n  const formatDate = dateString => {\n    if (!dateString) return \"\";\n    const [year, month, day] = dateString.split(\"-\");\n    return `${day}/${month}/${year}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-body-conatiner\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      id: \"dash-header\",\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-work-btn\",\n      onClick: handleAddNewWork,\n      children: \"Add new work\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: editMode ? \"Edit Work\" : \"Add New Work\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter work name\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleFormChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"type\",\n            value: formData.type,\n            onChange: handleFormChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"doNow\",\n              children: \"Do now\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"schedule\",\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"delegate\",\n              children: \"Delegate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"drop\",\n              children: \"Drop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"tag\",\n            value: formData.tag,\n            onChange: e => {\n              handleFormChange(e);\n              if (e.target.value === \"Other\") {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: \"\"\n                }));\n              } else {\n                setFormData(prev => ({\n                  ...prev,\n                  customTag: null\n                }));\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select tag\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"H\\u1ECDc t\\u1EADp\",\n              children: \"H\\u1ECDc t\\u1EADp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"L\\xE0m vi\\u1EC7c\",\n              children: \"L\\xE0m vi\\u1EC7c\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Ngh\\u1EC9 ng\\u01A1i\",\n              children: \"Ngh\\u1EC9 ng\\u01A1i\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Gi\\u1EA3i tr\\xED\",\n              children: \"Gi\\u1EA3i tr\\xED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), formData.tag === \"Other\" && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter here\",\n            name: \"customTag\",\n            value: formData.customTag || \"\",\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"startDate\",\n            value: formData.startDate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"endDate\",\n            value: formData.endDate,\n            onChange: handleFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Describe work (use # for hashtags)\",\n          name: \"describe\",\n          value: formData.describe,\n          onChange: handleFormChange,\n          rows: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleDone,\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCancel,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this), isTaskModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal modal-task\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content modal-task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Add Task for \", taskFormData.workName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter task name\",\n            name: \"taskName\",\n            value: taskFormData.taskName,\n            onChange: handleTaskFormChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Task description\",\n            name: \"taskDescription\",\n            value: taskFormData.taskDescription,\n            onChange: handleTaskFormChange,\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-row-inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Start Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"startTime\",\n                value: taskFormData.startTime,\n                onChange: handleTaskFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"End Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"time\",\n                name: \"endTime\",\n                value: taskFormData.endTime,\n                onChange: handleTaskFormChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Repeat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"repeatOption\",\n                value: taskFormData.repeatOption,\n                onChange: e => {\n                  handleTaskFormChange(e);\n                  if (e.target.value === \"Tùy chỉnh\") {\n                    setTaskFormData(prev => ({\n                      ...prev,\n                      customRepeat: {\n                        ...prev.customRepeat,\n                        isCustomizing: true\n                      }\n                    }));\n                  }\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Kh\\xF4ng l\\u1EB7p l\\u1EA1i\",\n                  children: \"Kh\\xF4ng l\\u1EB7p l\\u1EA1i\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 504,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"H\\xE0ng ng\\xE0y\",\n                  children: \"H\\xE0ng ng\\xE0y\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"T\\xF9y ch\\u1EC9nh\",\n                  children: \"T\\xF9y ch\\u1EC9nh\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 486,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 15\n          }, this), taskFormData.repeatOption === \"Tùy chỉnh\" && taskFormData.customRepeat.isCustomizing && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-repeat-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"L\\u1EB7p l\\u1EA1i m\\u1ED7i:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  min: \"1\",\n                  name: \"repeatEvery\",\n                  value: taskFormData.customRepeat.repeatEvery,\n                  onChange: e => setTaskFormData(prev => ({\n                    ...prev,\n                    customRepeat: {\n                      ...prev.customRepeat,\n                      repeatEvery: Math.max(1, Number(e.target.value))\n                    }\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 3\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Kho\\u1EA3ng th\\u1EDDi gian:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 5\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  name: \"repeatUnit\",\n                  value: taskFormData.customRepeat.repeatUnit,\n                  onChange: e => setTaskFormData(prev => {\n                    const isDay = e.target.value === \"ngày\";\n                    return {\n                      ...prev,\n                      customRepeat: {\n                        ...prev.customRepeat,\n                        repeatUnit: e.target.value,\n                        repeatDays: isDay || e.target.value === \"năm\" ? [] : prev.customRepeat.repeatDays,\n                        repeatMonthOption: e.target.value === \"tháng\" ? \"specificDay\" : undefined\n                      }\n                    };\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ng\\xE0y\",\n                    children: \"Ng\\xE0y\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"tu\\u1EA7n\",\n                    children: \"Tu\\u1EA7n\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"th\\xE1ng\",\n                    children: \"Th\\xE1ng\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 7\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"n\\u0103m\",\n                    children: \"N\\u0103m\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 7\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 5\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 3\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Ng\\xE0y b\\u1EAFt \\u0111\\u1EA7u:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  name: \"startDate\",\n                  value: taskFormData.customRepeat.startDate || \"\",\n                  onChange: e => setTaskFormData(prev => ({\n                    ...prev,\n                    customRepeat: {\n                      ...prev.customRepeat,\n                      startDate: e.target.value\n                    }\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 566,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 5\n            }, this), taskFormData.customRepeat.repeatUnit === \"tuần\" && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"L\\u1EB7p l\\u1EA1i v\\xE0o:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 9\n              }, this), [\"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\", \"CN\"].map(day => /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"repeat-day-option\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: taskFormData.customRepeat.repeatDays.includes(day),\n                  onChange: e => {\n                    setTaskFormData(prev => {\n                      const updatedDays = e.target.checked ? [...prev.customRepeat.repeatDays, day] : prev.customRepeat.repeatDays.filter(d => d !== day);\n                      return {\n                        ...prev,\n                        customRepeat: {\n                          ...prev.customRepeat,\n                          repeatDays: updatedDays\n                        }\n                      };\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 13\n                }, this), day]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 11\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 7\n            }, this), taskFormData.customRepeat.repeatUnit === \"tháng\" && taskFormData.customRepeat.startDate && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ch\\u1ECDn ki\\u1EC3u l\\u1EB7p:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 7\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"repeatMonthOption\",\n                value: taskFormData.customRepeat.repeatMonthOption || \"specificDay\",\n                onChange: e => setTaskFormData(prev => ({\n                  ...prev,\n                  customRepeat: {\n                    ...prev.customRepeat,\n                    repeatMonthOption: e.target.value\n                  }\n                })),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"specificDay\",\n                  children: [\"L\\u1EB7p l\\u1EA1i v\\xE0o ng\\xE0y \", new Date(taskFormData.customRepeat.startDate).getDate(), \" h\\xE0ng th\\xE1ng\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 630,\n                  columnNumber: 9\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"weekdayInMonth\",\n                  children: [\"L\\u1EB7p l\\u1EA1i v\\xE0o \", new Date(taskFormData.customRepeat.startDate).toLocaleDateString(\"en-US\", {\n                    weekday: \"long\"\n                  }), \" -\", \" \", [\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth\"][Math.ceil(new Date(taskFormData.customRepeat.startDate).getDate() / 7) - 1], \" h\\xE0ng th\\xE1ng\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 617,\n                columnNumber: 7\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 615,\n              columnNumber: 5\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"custom-repeat-done\",\n              onClick: () => setTaskFormData(prev => ({\n                ...prev,\n                customRepeat: {\n                  ...prev.customRepeat,\n                  isCustomizing: false\n                }\n              })),\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 5\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 3\n          }, this), taskFormData.repeatOption === \"Tùy chỉnh\" && !taskFormData.customRepeat.isCustomizing && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"L\\u1EB7p l\\u1EA1i \", taskFormData.customRepeat.repeatEvery, \" \", taskFormData.customRepeat.repeatUnit, taskFormData.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(taskFormData.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào thứ ${taskFormData.customRepeat.repeatDays.join(\", \")}`]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 3\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDoneTask,\n              children: \"Add Task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCancel,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Existing Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 676,\n            columnNumber: 15\n          }, this), (() => {\n            const workType = Object.keys(works).find(type => works[type].some(work => work.id === taskFormData.workId));\n            if (!workType) return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tasks available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 39\n            }, this);\n            const work = works[workType].find(work => work.id === taskFormData.workId);\n            return work && work.subWorks && work.subWorks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: work.subWorks.map((subWork, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: subWork.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 689,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: subWork.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [subWork.startTime, \" - \", subWork.endTime]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: subWork.repeatOption === \"Tùy chỉnh\" ? `Lặp lại ${subWork.customRepeat.repeatEvery} ${subWork.customRepeat.repeatUnit}${subWork.customRepeat.repeatUnit === \"ngày\" ? ` một lần từ ${new Date(subWork.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}` : ` một lần vào các ngày ${subWork.customRepeat.repeatDays.join(\", \")}`}` : subWork.repeatOption\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 25\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 688,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No tasks available.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 19\n            }, this);\n          })()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"body-content\",\n      children: [\"doNow\", \"schedule\", \"delegate\", \"drop\"].map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"work-box\",\n        onDrop: e => handleDrop(e, type),\n        onDragOver: allowDrop,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: type.charAt(0).toUpperCase() + type.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"work-list\",\n          children: works[type].map(work => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"work\",\n            draggable: true,\n            onDragStart: e => handleDragStart(e, work, type),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onChange: () => handleWorkCheckbox(type, work.id, -1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 737,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: work.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 741,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [formatDate(work.startDate), \" - \", formatDate(work.endDate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: work.describe ? work.describe.split(\" \").map((word, i) => word.startsWith(\"#\") ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    color: \"blue\"\n                  },\n                  children: [word, \" \"]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 749,\n                  columnNumber: 31\n                }, this) : `${word} `) : \"No description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Tasks: \", work.subWorks ? work.subWorks.length : 0]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 736,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {\n                className: \"add-work-icon\",\n                onClick: () => handleAddTask(work.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillEdit, {\n                className: \"edit-icon\",\n                onClick: () => handleEditTask(work)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                className: \"delete-icon\",\n                onClick: () => handleDeleteWork(type, work.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 769,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 19\n            }, this)]\n          }, work.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 13\n        }, this)]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"U5M/nkaX+WBcrvyWfB0BaU4y6no=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Aos","AiFillDelete","AiFillEdit","AiOutlinePlus","jsxDEV","_jsxDEV","Dashboard","works","setWorks","completedWorks","setCompletedWorks","recycledWorks","setRecycledWorks","taskCompletionStatus","setTaskCompletionStatus","_s","isModalOpen","setIsModalOpen","isTaskModalOpen","setIsTaskModalOpen","formData","setFormData","id","name","type","startDate","endDate","describe","tag","taskFormData","setTaskFormData","workId","taskName","taskDescription","startTime","endTime","repeatOption","customRepeat","repeatEvery","repeatUnit","repeatDays","editMode","setEditMode","init","duration","document","body","classList","add","remove","handleAddNewWork","handleFormChange","e","value","target","prev","handleTaskFormChange","updated","handleAddTask","work","Object","values","flat","find","workName","handleDone","alert","prevWorks","updatedWorks","keys","forEach","filter","Date","now","subWorks","handleDoneTask","startHour","startMinute","split","map","Number","endHour","endMinute","startTotalMinutes","endTotalMinutes","updatedCustomRepeat","workType","some","workIndex","findIndex","isDuplicateTask","subWork","push","description","handleCancel","handleDeleteWork","deletedWorkIndex","deletedWork","updatedSubWorks","task","index","isCompleted","prevRecycledWorks","newRecycledWork","splice","prevStatus","updatedStatus","relatedTasks","key","startsWith","handleEditTask","handleWorkCheckbox","w","prevCompleted","_","handleDragStart","dataTransfer","setData","JSON","stringify","handleDrop","newType","data","parse","getData","updatedSourceWorks","updatedTargetWorks","allowDrop","preventDefault","formatDate","dateString","year","month","day","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","customTag","rows","isCustomizing","min","Math","max","isDay","repeatMonthOption","undefined","checked","includes","updatedDays","d","getDate","toLocaleDateString","weekday","ceil","join","length","onDrop","onDragOver","charAt","toUpperCase","slice","draggable","onDragStart","word","i","style","color","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Aos from \"aos\";\r\nimport \"./styles/dashboard.css\";\r\nimport { AiFillDelete, AiFillEdit, AiOutlinePlus } from \"react-icons/ai\";\r\n\r\nconst Dashboard = ({\r\n  works,\r\n  setWorks,\r\n  completedWorks,\r\n  setCompletedWorks,\r\n  recycledWorks,\r\n  setRecycledWorks,\r\n  taskCompletionStatus,\r\n  setTaskCompletionStatus,\r\n}) => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isTaskModalOpen, setIsTaskModalOpen] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    id: null,\r\n    name: \"\",\r\n    type: \"\",\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n    describe: \"\",\r\n    tag: \"\",\r\n  });\r\n\r\n  const [taskFormData, setTaskFormData] = useState({\r\n    workId: null,\r\n    taskName: \"\",\r\n    taskDescription: \"\",\r\n    startTime: \"\",\r\n    endTime: \"\",\r\n    repeatOption: \"Không lặp lại\",\r\n    customRepeat: {\r\n      repeatEvery: 1,\r\n      repeatUnit: \"ngày\",\r\n      repeatDays: [],\r\n    },\r\n  });\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    Aos.init({ duration: 1000 });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isModalOpen || isTaskModalOpen) {\r\n      document.body.classList.add(\"disable-hover\");\r\n    } else {\r\n      document.body.classList.remove(\"disable-hover\");\r\n    }\r\n  }, [isModalOpen, isTaskModalOpen]);\r\n\r\n  const handleAddNewWork = () => {\r\n    setIsModalOpen(true);\r\n    setEditMode(false);\r\n    setFormData({\r\n      id: null,\r\n      name: \"\",\r\n      type: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      describe: \"\",\r\n      tag: \"\",\r\n    });\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleTaskFormChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    setTaskFormData((prev) => {\r\n      const updated = { ...prev, [name]: value };\r\n\r\n      if (name === \"customRepeat.repeatUnit\" && value === \"ngày\") {\r\n        updated.customRepeat.repeatDays = [];\r\n      }\r\n\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const handleAddTask = (workId) => {\r\n    const work = Object.values(works).flat().find((work) => work.id === workId);\r\n    setIsTaskModalOpen(true);\r\n    setTaskFormData({ ...taskFormData, workId, workName: work ? work.name : \"\" });\r\n  };\r\n\r\n  const handleDone = () => {\r\n    const { name, type, startDate, endDate } = formData;\r\n\r\n    if (!name || !type || !startDate || !endDate || !formData.tag) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n\r\n      if (editMode) {\r\n        Object.keys(updatedWorks).forEach((type) => {\r\n          updatedWorks[type] = updatedWorks[type].filter(\r\n            (work) => work.id !== formData.id\r\n          );\r\n        });\r\n      }\r\n\r\n      updatedWorks[type] = [\r\n        ...updatedWorks[type],\r\n        {\r\n          ...formData,\r\n          id: formData.id || Date.now(),\r\n          subWorks: formData.subWorks || [],\r\n        },\r\n      ];\r\n\r\n      return updatedWorks;\r\n    });\r\n\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleDoneTask = () => {\r\n    const { startTime, endTime, taskName, taskDescription } = taskFormData;\r\n\r\n    if (!taskName || !startTime || !endTime) {\r\n      alert(\"Please fill in all fields.\");\r\n      return;\r\n    }\r\n\r\n    let [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n    let [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n    if (endHour === 0 && endMinute === 0) {\r\n      endHour = 24;\r\n    }\r\n\r\n    const startTotalMinutes = startHour * 60 + startMinute;\r\n    const endTotalMinutes = endHour * 60 + endMinute;\r\n\r\n    if (endTotalMinutes < startTotalMinutes) {\r\n      alert(\"End time must be equal to or after start time.\");\r\n      return;\r\n    }\r\n\r\n    const updatedCustomRepeat = { ...taskFormData.customRepeat };\r\n    if (updatedCustomRepeat.repeatUnit === \"ngày\") {\r\n      delete updatedCustomRepeat.repeatDays;\r\n    }\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      const workType = Object.keys(updatedWorks).find((type) =>\r\n        updatedWorks[type].some((work) => work.id === taskFormData.workId)\r\n      );\r\n\r\n      if (!workType) {\r\n        alert(\"Work not found. Please try again.\");\r\n        return prevWorks;\r\n      }\r\n\r\n      const workIndex = updatedWorks[workType].findIndex(\r\n        (work) => work.id === taskFormData.workId\r\n      );\r\n\r\n      if (workIndex === -1) {\r\n        alert(\"Work not found. Please try again.\");\r\n        return prevWorks;\r\n      }\r\n\r\n      const work = updatedWorks[workType][workIndex];\r\n      if (!work.subWorks) {\r\n        work.subWorks = [];\r\n      }\r\n\r\n      const isDuplicateTask = work.subWorks.some(\r\n        (subWork) => subWork.name === taskFormData.taskName\r\n      );\r\n\r\n      if (!isDuplicateTask) {\r\n        work.subWorks.push({\r\n          name: taskFormData.taskName,\r\n          description: taskFormData.taskDescription,\r\n          startTime: taskFormData.startTime,\r\n          endTime: taskFormData.endTime,\r\n          repeatOption: taskFormData.repeatOption,\r\n          customRepeat: taskFormData.customRepeat,\r\n        });\r\n      }\r\n\r\n      return updatedWorks;\r\n    });\r\n\r\n    setTaskFormData({\r\n      workId: null,\r\n      taskName: \"\",\r\n      taskDescription: \"\",\r\n      startTime: \"\",\r\n      endTime: \"\",\r\n      repeatOption: \"Không lặp lại\",\r\n      customRepeat: {\r\n        repeatEvery: 1,\r\n        repeatUnit: \"ngày\",\r\n        repeatDays: [],\r\n      },\r\n    });\r\n\r\n    setIsTaskModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n    setIsTaskModalOpen(false);\r\n  };\r\n\r\n  const handleDeleteWork = (type, workId) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n  \r\n      // Tìm và lưu lại work cần xóa\r\n      const deletedWorkIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n      if (deletedWorkIndex !== -1) {\r\n        const deletedWork = updatedWorks[type][deletedWorkIndex];\r\n  \r\n        // Gắn trạng thái task từ taskCompletionStatus vào work trước khi thêm vào recycle\r\n        const updatedSubWorks = (deletedWork.subWorks || []).map((task, index) => ({\r\n          ...task,\r\n          isCompleted: !!taskCompletionStatus[`${workId}-${index}`], // Lấy trạng thái task\r\n        }));\r\n  \r\n        // Thêm work vào RecycledWorks với trạng thái task đã cập nhật\r\n        setRecycledWorks((prevRecycledWorks) => {\r\n          const newRecycledWork = {\r\n            ...deletedWork,\r\n            subWorks: updatedSubWorks, // Cập nhật subWorks\r\n            isCompleted: completedWorks.some((work) => work.id === workId), // Đánh dấu trạng thái hoàn thành\r\n          };\r\n          return [...prevRecycledWorks, newRecycledWork];\r\n        });\r\n  \r\n        // Xóa work khỏi works\r\n        updatedWorks[type].splice(deletedWorkIndex, 1);\r\n      }\r\n  \r\n      return updatedWorks;\r\n    });\r\n  \r\n    // Cập nhật trạng thái của các task liên quan trong taskCompletionStatus\r\n    setTaskCompletionStatus((prevStatus) => {\r\n      const updatedStatus = { ...prevStatus };\r\n  \r\n      const relatedTasks = Object.keys(updatedStatus).filter((key) =>\r\n        key.startsWith(`${workId}-`)\r\n      );\r\n  \r\n      relatedTasks.forEach((key) => {\r\n        delete updatedStatus[key];\r\n      });\r\n  \r\n      return updatedStatus;\r\n    });\r\n  };\r\n  \r\n\r\n  \r\n  const handleEditTask = (work) => {\r\n    setEditMode(true);\r\n    setFormData(work);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleWorkCheckbox = (type, workId) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      const workIndex = updatedWorks[type].findIndex((work) => work.id === workId);\r\n\r\n      if (workIndex !== -1) {\r\n        const work = { ...updatedWorks[type][workIndex] };\r\n\r\n        // Kiểm tra trạng thái hiện tại và thay đổi\r\n        if (!completedWorks.some((w) => w.id === workId)) {\r\n          // Nếu chưa trong completedWorks, thêm vào\r\n          setCompletedWorks((prevCompleted) => [...prevCompleted, { ...work, isCompleted: true }]);\r\n\r\n          // Đánh dấu tất cả các task con của work là hoàn thành\r\n          setTaskCompletionStatus((prevStatus) => {\r\n            const updatedStatus = { ...prevStatus };\r\n            work.subWorks.forEach((_, index) => {\r\n              updatedStatus[`${work.id}-${index}`] = true;\r\n            });\r\n            return updatedStatus;\r\n          });\r\n\r\n          // Xóa work khỏi works\r\n          updatedWorks[type] = updatedWorks[type].filter((w) => w.id !== workId);\r\n        } else {\r\n          // Nếu đã trong completedWorks, xóa khỏi đó và thêm lại vào works\r\n          setCompletedWorks((prevCompleted) => prevCompleted.filter((w) => w.id !== workId));\r\n\r\n          // Đánh dấu tất cả các task con của work là chưa hoàn thành\r\n          setTaskCompletionStatus((prevStatus) => {\r\n            const updatedStatus = { ...prevStatus };\r\n            work.subWorks.forEach((_, index) => {\r\n              updatedStatus[`${work.id}-${index}`] = false;\r\n            });\r\n            return updatedStatus;\r\n          });\r\n\r\n          // Đưa work trở lại works\r\n          updatedWorks[type].push({ ...work, isCompleted: false });\r\n        }\r\n      }\r\n\r\n      return updatedWorks;\r\n    });\r\n  };\r\n\r\n  const handleDragStart = (e, work, type) => {\r\n    e.dataTransfer.setData(\"work\", JSON.stringify({ ...work, type }));\r\n  };\r\n\r\n  const handleDrop = (e, newType) => {\r\n    const data = JSON.parse(e.dataTransfer.getData(\"work\"));\r\n\r\n    if (data.type === newType) return;\r\n\r\n    setWorks((prevWorks) => {\r\n      const updatedSourceWorks = prevWorks[data.type].filter(\r\n        (work) => work.id !== data.id\r\n      );\r\n      const updatedTargetWorks = [\r\n        ...prevWorks[newType],\r\n        { ...data, type: newType },\r\n      ];\r\n      return {\r\n        ...prevWorks,\r\n        [data.type]: updatedSourceWorks,\r\n        [newType]: updatedTargetWorks,\r\n      };\r\n    });\r\n  };\r\n\r\n  const allowDrop = (e) => e.preventDefault();\r\n\r\n  const formatDate = (dateString) => {\r\n    if (!dateString) return \"\";\r\n    const [year, month, day] = dateString.split(\"-\");\r\n    return `${day}/${month}/${year}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"home-body-conatiner\" data-aos=\"zoom-in\">\r\n      <header id=\"dash-header\" className=\"search-bar\">\r\n        <h1>Dashboard</h1>\r\n      </header>\r\n      <button className=\"add-work-btn\" onClick={handleAddNewWork}>\r\n        Add new work\r\n      </button>\r\n\r\n      {isModalOpen && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <h2>{editMode ? \"Edit Work\" : \"Add New Work\"}</h2>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Enter work name\"\r\n              name=\"name\"\r\n              value={formData.name}\r\n              onChange={handleFormChange}\r\n            />\r\n            <div className=\"form-row\">\r\n              <select\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleFormChange}\r\n              >\r\n                <option value=\"\">Select type</option>\r\n                <option value=\"doNow\">Do now</option>\r\n                <option value=\"schedule\">Schedule</option>\r\n                <option value=\"delegate\">Delegate</option>\r\n                <option value=\"drop\">Drop</option>\r\n              </select>\r\n              <select\r\n                name=\"tag\"\r\n                value={formData.tag}\r\n                onChange={(e) => {\r\n                  handleFormChange(e);\r\n                  if (e.target.value === \"Other\") {\r\n                    setFormData((prev) => ({ ...prev, customTag: \"\" }));\r\n                  } else {\r\n                    setFormData((prev) => ({ ...prev, customTag: null }));\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"\">Select tag</option>\r\n                <option value=\"Học tập\">Học tập</option>\r\n                <option value=\"Làm việc\">Làm việc</option>\r\n                <option value=\"Nghỉ ngơi\">Nghỉ ngơi</option>\r\n                <option value=\"Giải trí\">Giải trí</option>\r\n                <option value=\"Other\">Other</option>\r\n              </select>\r\n              {formData.tag === \"Other\" && (\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Enter here\"\r\n                  name=\"customTag\"\r\n                  value={formData.customTag || \"\"}\r\n                  onChange={handleFormChange}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"form-row\">\r\n              <input\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={formData.startDate}\r\n                onChange={handleFormChange}\r\n              />\r\n              <input\r\n                type=\"date\"\r\n                name=\"endDate\"\r\n                value={formData.endDate}\r\n                onChange={handleFormChange}\r\n              />\r\n            </div>\r\n            <textarea\r\n              placeholder=\"Describe work (use # for hashtags)\"\r\n              name=\"describe\"\r\n              value={formData.describe}\r\n              onChange={handleFormChange}\r\n              rows=\"4\"\r\n            ></textarea>\r\n            <div className=\"modal-buttons\">\r\n              <button onClick={handleDone}>Done</button>\r\n              <button onClick={handleCancel}>Cancel</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {isTaskModalOpen && (\r\n        <div className=\"modal modal-task\">\r\n          <div className=\"modal-content modal-task-content\">\r\n            <div className=\"modal-left\">\r\n              <h2>Add Task for {taskFormData.workName}</h2>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter task name\"\r\n                name=\"taskName\"\r\n                value={taskFormData.taskName}\r\n                onChange={handleTaskFormChange}\r\n              />\r\n              <textarea\r\n                placeholder=\"Task description\"\r\n                name=\"taskDescription\"\r\n                value={taskFormData.taskDescription}\r\n                onChange={handleTaskFormChange}\r\n                rows=\"4\"\r\n              ></textarea>\r\n              <div className=\"form-row-inline\">\r\n  <div>\r\n    <label>Start Time</label>\r\n    <input\r\n      type=\"time\"\r\n      name=\"startTime\"\r\n      value={taskFormData.startTime}\r\n      onChange={handleTaskFormChange}\r\n    />\r\n  </div>\r\n  <div>\r\n    <label>End Time</label>\r\n    <input\r\n      type=\"time\"\r\n      name=\"endTime\"\r\n      value={taskFormData.endTime}\r\n      onChange={handleTaskFormChange}\r\n    />\r\n  </div>\r\n  <div>\r\n    <label>Repeat</label>\r\n    <select\r\n      name=\"repeatOption\"\r\n      value={taskFormData.repeatOption}\r\n      onChange={(e) => {\r\n        handleTaskFormChange(e);\r\n        if (e.target.value === \"Tùy chỉnh\") {\r\n          setTaskFormData((prev) => ({\r\n            ...prev,\r\n            customRepeat: {\r\n              ...prev.customRepeat,\r\n              isCustomizing: true,\r\n            },\r\n          }));\r\n        }\r\n      }}\r\n    >\r\n      <option value=\"Không lặp lại\">Không lặp lại</option>\r\n      <option value=\"Hàng ngày\">Hàng ngày</option>\r\n      <option value=\"Tùy chỉnh\">Tùy chỉnh</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n              {taskFormData.repeatOption === \"Tùy chỉnh\" && taskFormData.customRepeat.isCustomizing && (\r\n  <div className=\"custom-repeat-form\">\r\n    <div className=\"form-row-inline\">\r\n  <label>\r\n    Lặp lại mỗi:\r\n    <input\r\n      type=\"number\"\r\n      min=\"1\"\r\n      name=\"repeatEvery\"\r\n      value={taskFormData.customRepeat.repeatEvery}\r\n      onChange={(e) =>\r\n        setTaskFormData((prev) => ({\r\n          ...prev,\r\n          customRepeat: {\r\n            ...prev.customRepeat,\r\n            repeatEvery: Math.max(1, Number(e.target.value)),\r\n          },\r\n        }))\r\n      }\r\n    />\r\n  </label>\r\n  \r\n  <div>\r\n    <label>Khoảng thời gian:</label>\r\n    <select\r\n      name=\"repeatUnit\"\r\n      value={taskFormData.customRepeat.repeatUnit}\r\n      onChange={(e) =>\r\n        setTaskFormData((prev) => {\r\n          const isDay = e.target.value === \"ngày\";\r\n          return {\r\n            ...prev,\r\n            customRepeat: {\r\n              ...prev.customRepeat,\r\n              repeatUnit: e.target.value,\r\n              repeatDays: isDay || e.target.value === \"năm\" ? [] : prev.customRepeat.repeatDays,\r\n              repeatMonthOption: e.target.value === \"tháng\" ? \"specificDay\" : undefined,\r\n            },\r\n          };\r\n        })\r\n      }\r\n    >\r\n      <option value=\"ngày\">Ngày</option>\r\n      <option value=\"tuần\">Tuần</option>\r\n      <option value=\"tháng\">Tháng</option>\r\n      <option value=\"năm\">Năm</option>\r\n    </select>\r\n  </div>\r\n</div>\r\n\r\n\r\n    {/* Ngày bắt đầu */}\r\n    <div className=\"form-row\">\r\n      <label>\r\n        Ngày bắt đầu:\r\n        <input\r\n          type=\"date\"\r\n          name=\"startDate\"\r\n          value={taskFormData.customRepeat.startDate || \"\"}\r\n          onChange={(e) =>\r\n            setTaskFormData((prev) => ({\r\n              ...prev,\r\n              customRepeat: {\r\n                ...prev.customRepeat,\r\n                startDate: e.target.value,\r\n              },\r\n            }))\r\n          }\r\n        />\r\n      </label>\r\n    </div>\r\n\r\n    {/* Các trường tùy chỉnh theo đơn vị lặp */}\r\n    {taskFormData.customRepeat.repeatUnit === \"tuần\" && (\r\n      <div className=\"form-row\">\r\n        <label>Lặp lại vào:</label>\r\n        {[\"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\", \"CN\"].map((day) => (\r\n          <label key={day} className=\"repeat-day-option\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={taskFormData.customRepeat.repeatDays.includes(day)}\r\n              onChange={(e) => {\r\n                setTaskFormData((prev) => {\r\n                  const updatedDays = e.target.checked\r\n                    ? [...prev.customRepeat.repeatDays, day]\r\n                    : prev.customRepeat.repeatDays.filter((d) => d !== day);\r\n                  return {\r\n                    ...prev,\r\n                    customRepeat: {\r\n                      ...prev.customRepeat,\r\n                      repeatDays: updatedDays,\r\n                    },\r\n                  };\r\n                });\r\n              }}\r\n            />\r\n            {day}\r\n          </label>\r\n        ))}\r\n      </div>\r\n    )}\r\n\r\n{taskFormData.customRepeat.repeatUnit === \"tháng\" &&\r\n  taskFormData.customRepeat.startDate && (\r\n    <div className=\"form-row\">\r\n      <label>Chọn kiểu lặp:</label>\r\n      <select\r\n        name=\"repeatMonthOption\"\r\n        value={taskFormData.customRepeat.repeatMonthOption || \"specificDay\"}\r\n        onChange={(e) =>\r\n          setTaskFormData((prev) => ({\r\n            ...prev,\r\n            customRepeat: {\r\n              ...prev.customRepeat,\r\n              repeatMonthOption: e.target.value,\r\n            },\r\n          }))\r\n        }\r\n      >\r\n        <option value=\"specificDay\">\r\n          Lặp lại vào ngày {new Date(taskFormData.customRepeat.startDate).getDate()} hàng tháng\r\n        </option>\r\n        <option value=\"weekdayInMonth\">\r\n          Lặp lại vào {new Date(taskFormData.customRepeat.startDate).toLocaleDateString(\"en-US\", { weekday: \"long\" })} -{\" \"}\r\n          {[\"First\", \"Second\", \"Third\", \"Fourth\", \"Fifth\"][\r\n            Math.ceil(new Date(taskFormData.customRepeat.startDate).getDate() / 7) - 1\r\n          ]} hàng tháng\r\n        </option>\r\n      </select>\r\n    </div>\r\n  )}\r\n\r\n\r\n    <button\r\n      className=\"custom-repeat-done\"\r\n      onClick={() =>\r\n        setTaskFormData((prev) => ({\r\n          ...prev,\r\n          customRepeat: {\r\n            ...prev.customRepeat,\r\n            isCustomizing: false,\r\n          },\r\n        }))\r\n      }\r\n    >\r\n      Done\r\n    </button>\r\n  </div>\r\n)}\r\n\r\n              {taskFormData.repeatOption === \"Tùy chỉnh\" && !taskFormData.customRepeat.isCustomizing && (\r\n  <p>\r\n    Lặp lại {taskFormData.customRepeat.repeatEvery}{\" \"}\r\n    {taskFormData.customRepeat.repeatUnit}\r\n    {taskFormData.customRepeat.repeatUnit === \"ngày\"\r\n      ? ` một lần từ ${new Date(taskFormData.customRepeat.startDate).toLocaleDateString(\"vi-VN\")}`\r\n      : ` một lần vào thứ ${taskFormData.customRepeat.repeatDays.join(\", \")}`}\r\n  </p>\r\n)}\r\n              <div className=\"modal-buttons\">\r\n                <button onClick={handleDoneTask}>Add Task</button>\r\n                <button onClick={handleCancel}>Cancel</button>\r\n              </div>\r\n            </div>\r\n            <div className=\"modal-right\">\r\n              <h2>Existing Tasks</h2>\r\n              {(() => {\r\n                const workType = Object.keys(works).find((type) =>\r\n                  works[type].some((work) => work.id === taskFormData.workId)\r\n                );\r\n                if (!workType) return <p>No tasks available.</p>;\r\n              \r\n                const work = works[workType].find((work) => work.id === taskFormData.workId);\r\n              \r\n                return work && work.subWorks && work.subWorks.length > 0 ? (\r\n                  <ul>\r\n                    {work.subWorks.map((subWork, index) => (\r\n                      <li key={index}>\r\n                        <h4>{subWork.name}</h4>\r\n                        <p>{subWork.description}</p>\r\n                        <p>\r\n                          {subWork.startTime} - {subWork.endTime}\r\n                        </p>\r\n                        <p>\r\n                          {subWork.repeatOption === \"Tùy chỉnh\"\r\n                            ? `Lặp lại ${subWork.customRepeat.repeatEvery} ${\r\n                                subWork.customRepeat.repeatUnit\r\n                              }${\r\n                                subWork.customRepeat.repeatUnit === \"ngày\"\r\n                                  ? ` một lần từ ${new Date(subWork.customRepeat.startDate).toLocaleDateString(\r\n                                      \"vi-VN\"\r\n                                    )}`\r\n                                  : ` một lần vào các ngày ${subWork.customRepeat.repeatDays.join(\", \")}`\r\n                              }`\r\n                            : subWork.repeatOption}\r\n                        </p>\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                ) : (\r\n                  <p>No tasks available.</p>\r\n                );\r\n              })()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <main className=\"body-content\">\r\n        {[\"doNow\", \"schedule\", \"delegate\", \"drop\"].map((type) => (\r\n          <div\r\n            className=\"work-box\"\r\n            key={type}\r\n            onDrop={(e) => handleDrop(e, type)}\r\n            onDragOver={allowDrop}\r\n          >\r\n            <h2>{type.charAt(0).toUpperCase() + type.slice(1)}</h2>\r\n            <div className=\"work-list\">\r\n              {works[type].map((work) => (\r\n                <div\r\n                  key={work.id}\r\n                  className=\"work\"\r\n                  draggable\r\n                  onDragStart={(e) => handleDragStart(e, work, type)}\r\n                >\r\n                  <div className=\"work-info\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      onChange={() => handleWorkCheckbox(type, work.id, -1)}\r\n                    />\r\n                    <span>{work.name}</span>\r\n                    <p>\r\n                      {formatDate(work.startDate)} - {formatDate(work.endDate)}\r\n                    </p>\r\n                    <p>\r\n                      {work.describe\r\n                        ? work.describe.split(\" \").map((word, i) =>\r\n                            word.startsWith(\"#\") ? (\r\n                              <span key={i} style={{ color: \"blue\" }}>\r\n                                {word}{\" \"}\r\n                              </span>\r\n                            ) : (\r\n                              `${word} `\r\n                            )\r\n                          )\r\n                        : \"No description\"}\r\n                    </p>\r\n                    <p>Tasks: {work.subWorks ? work.subWorks.length : 0}</p>\r\n                  </div>\r\n                  <div className=\"work-buttons\">\r\n                    <AiOutlinePlus\r\n                      className=\"add-work-icon\"\r\n                      onClick={() => handleAddTask(work.id)}\r\n                    />\r\n                    <AiFillEdit\r\n                      className=\"edit-icon\"\r\n                      onClick={() => handleEditTask(work)}\r\n                    />\r\n                    <AiFillDelete\r\n                      className=\"delete-icon\"\r\n                      onClick={() => handleDeleteWork(type, work.id)}\r\n                    />\r\n\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}