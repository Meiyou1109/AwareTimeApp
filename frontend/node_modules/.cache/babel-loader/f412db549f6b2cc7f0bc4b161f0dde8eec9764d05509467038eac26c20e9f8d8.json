{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Focus.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport \"./styles/focus.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Focus = ({\n  works = {},\n  toast\n}) => {\n  _s();\n  const [mode, setMode] = useState(\"auto\");\n  const [selectedWork, setSelectedWork] = useState(null);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [tempWork, setTempWork] = useState(null);\n  const [tempTask, setTempTask] = useState(null);\n  const [timeLeft, setTimeLeft] = useState(1500);\n  const [isRunning, setIsRunning] = useState(false);\n  const [cycle, setCycle] = useState(0);\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\n  const [tasksForToday, setTasksForToday] = useState([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // Update current time every minute\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date());\n    }, 60000);\n    return () => clearInterval(timer);\n  }, []);\n\n  // Pomodoro logic\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n    } else if (timeLeft === 0) {\n      handlePomodoroComplete();\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n  const handlePomodoroComplete = useCallback(() => {\n    setIsRunning(false);\n    if (isFocusPhase) {\n      setIsFocusPhase(false);\n      setCycle(prev => prev + 1);\n      if ((cycle + 1) % 4 === 0) {\n        setTimeLeft(900);\n        toast.info(\"Long Break! Take a 15-minute rest.\");\n      } else {\n        setTimeLeft(300);\n        toast.info(\"Short Break! Take a 5-minute rest.\");\n      }\n    } else {\n      setIsFocusPhase(true);\n      setTimeLeft(1500);\n      toast.success(\"Back to Focus! 25 minutes.\");\n    }\n  }, [cycle, isFocusPhase, toast]);\n  const handleStartPause = () => {\n    setIsRunning(prev => !prev);\n  };\n  const handleSkip = () => {\n    setTimeLeft(0);\n  };\n  const formatTime = seconds => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\n  };\n\n  // Calculate tasks for today\n  const calculateTasksForToday = useCallback(() => {\n    const today = new Date();\n    const tasks = [];\n    Object.values(works).flat().forEach(work => {\n      const workStartDate = new Date(work.startDate);\n      const workEndDate = new Date(work.endDate);\n      work.subWorks.forEach(task => {\n        const {\n          startTime,\n          endTime,\n          repeatOption,\n          customRepeat = {}\n        } = task;\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\n        let validDates = [];\n        if (repeatOption === \"Không lặp lại\") {\n          validDates = [workStartDate];\n        } else if (repeatOption === \"Hàng ngày\") {\n          let currentDate = new Date(workStartDate);\n          while (currentDate <= workEndDate) {\n            validDates.push(new Date(currentDate));\n            currentDate.setDate(currentDate.getDate() + 1);\n          }\n        } else if (repeatOption === \"Tùy chỉnh\") {\n          const {\n            repeatEvery = 1,\n            repeatUnit = \"ngày\",\n            startDate,\n            repeatDays = []\n          } = customRepeat;\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\n          let currentDate = new Date(taskStartDate);\n          if (repeatUnit === \"ngày\") {\n            while (currentDate <= workEndDate) {\n              validDates.push(new Date(currentDate));\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\n            }\n          } else if (repeatUnit === \"tuần\") {\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\n            while (currentDate <= workEndDate) {\n              const dayOfWeek = dayMapping[currentDate.getDay()];\n              if (repeatDays.includes(dayOfWeek)) {\n                validDates.push(new Date(currentDate));\n              }\n              currentDate.setDate(currentDate.getDate() + 1);\n            }\n          }\n        }\n        validDates.forEach(date => {\n          if (date.toDateString() === today.toDateString()) {\n            tasks.push({\n              ...task,\n              startTime: new Date(today.setHours(startHour, startMinute)),\n              endTime: new Date(today.setHours(endHour, endMinute))\n            });\n          }\n        });\n      });\n    });\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\n    setTasksForToday(sortedTasks);\n  }, [works]);\n  useEffect(() => {\n    if (mode === \"auto\") {\n      calculateTasksForToday();\n    }\n  }, [mode, calculateTasksForToday]);\n  const renderTaskOnTimeline = task => {\n    const taskStart = task.startTime;\n    const taskEnd = task.endTime;\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-block\",\n      style: {\n        position: \"absolute\",\n        top: `${startMinutes}px`,\n        height: `${endMinutes - startMinutes}px`,\n        left: \"100px\",\n        width: \"150px\",\n        backgroundColor: \"#007bff\",\n        color: \"white\",\n        borderRadius: \"5px\",\n        padding: \"5px\"\n      },\n      children: task.name\n    }, task.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Focus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-modes\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"auto\"),\n        children: \"T\\u1EF1 \\u0111\\u1ED9ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"manual\"),\n        children: \"T\\u1EF1 ch\\u1ECDn\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `focus-mode ${mode === \"free\" ? \"active\" : \"\"}`,\n        onClick: () => setMode(\"free\"),\n        children: \"T\\u1EF1 do\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"focus-content\",\n      children: mode === \"auto\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"current-time-line\",\n            style: {\n              top: `${currentTime.getHours() * 60 + currentTime.getMinutes()}px`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), Array.from({\n            length: 24\n          }).map((_, hour) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hour-marker\",\n            style: {\n              top: `${hour * 60}px`\n            },\n            children: [hour, \":00\"]\n          }, hour, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)), tasksForToday.map(task => renderTaskOnTimeline(task))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Task cho h\\xF4m nay\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"T\\u1ED5ng s\\u1ED1 task: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: tasksForToday.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"task-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"STT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"T\\xEAn Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Th\\u1EDDi gian\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tasksForToday.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: index + 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: task.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [task.startTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                  }), \" -\", \" \", task.endTime.toLocaleTimeString([], {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\"\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(Focus, \"IGW9h7au97palLyJB/nR8Ss4/Lw=\");\n_c = Focus;\nexport default Focus;\nvar _c;\n$RefreshReg$(_c, \"Focus\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","jsxDEV","_jsxDEV","Focus","works","toast","_s","mode","setMode","selectedWork","setSelectedWork","selectedTask","setSelectedTask","currentTaskManual","setCurrentTaskManual","isModalOpen","setIsModalOpen","tempWork","setTempWork","tempTask","setTempTask","timeLeft","setTimeLeft","isRunning","setIsRunning","cycle","setCycle","isFocusPhase","setIsFocusPhase","tasksForToday","setTasksForToday","currentTime","setCurrentTime","Date","timer","setInterval","clearInterval","prev","handlePomodoroComplete","info","success","handleStartPause","handleSkip","formatTime","seconds","minutes","Math","floor","secs","toString","padStart","calculateTasksForToday","today","tasks","Object","values","flat","forEach","work","workStartDate","startDate","workEndDate","endDate","subWorks","task","startTime","endTime","repeatOption","customRepeat","startHour","startMinute","split","map","Number","endHour","endMinute","validDates","currentDate","push","setDate","getDate","repeatEvery","repeatUnit","repeatDays","taskStartDate","dayMapping","dayOfWeek","getDay","includes","date","toDateString","setHours","sortedTasks","sort","a","b","renderTaskOnTimeline","taskStart","taskEnd","startMinutes","getHours","getMinutes","endMinutes","className","style","position","top","height","left","width","backgroundColor","color","borderRadius","padding","children","name","fileName","_jsxFileName","lineNumber","columnNumber","onClick","Array","from","length","_","hour","index","toLocaleTimeString","minute","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Focus.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport \"./styles/focus.css\";\r\n\r\nconst Focus = ({ works = {}, toast }) => {\r\n  const [mode, setMode] = useState(\"auto\");\r\n  const [selectedWork, setSelectedWork] = useState(null);\r\n  const [selectedTask, setSelectedTask] = useState(null);\r\n  const [currentTaskManual, setCurrentTaskManual] = useState(null);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [tempWork, setTempWork] = useState(null);\r\n  const [tempTask, setTempTask] = useState(null);\r\n  const [timeLeft, setTimeLeft] = useState(1500);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [cycle, setCycle] = useState(0);\r\n  const [isFocusPhase, setIsFocusPhase] = useState(true);\r\n  const [tasksForToday, setTasksForToday] = useState([]);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n\r\n  // Update current time every minute\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setCurrentTime(new Date());\r\n    }, 60000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Pomodoro logic\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => {\r\n        setTimeLeft((prev) => prev - 1);\r\n      }, 1000);\r\n    } else if (timeLeft === 0) {\r\n      handlePomodoroComplete();\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const handlePomodoroComplete = useCallback(() => {\r\n    setIsRunning(false);\r\n    if (isFocusPhase) {\r\n      setIsFocusPhase(false);\r\n      setCycle((prev) => prev + 1);\r\n      if ((cycle + 1) % 4 === 0) {\r\n        setTimeLeft(900);\r\n        toast.info(\"Long Break! Take a 15-minute rest.\");\r\n      } else {\r\n        setTimeLeft(300);\r\n        toast.info(\"Short Break! Take a 5-minute rest.\");\r\n      }\r\n    } else {\r\n      setIsFocusPhase(true);\r\n      setTimeLeft(1500);\r\n      toast.success(\"Back to Focus! 25 minutes.\");\r\n    }\r\n  }, [cycle, isFocusPhase, toast]);\r\n\r\n  const handleStartPause = () => {\r\n    setIsRunning((prev) => !prev);\r\n  };\r\n\r\n  const handleSkip = () => {\r\n    setTimeLeft(0);\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes.toString().padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Calculate tasks for today\r\n  const calculateTasksForToday = useCallback(() => {\r\n    const today = new Date();\r\n    const tasks = [];\r\n\r\n    Object.values(works).flat().forEach((work) => {\r\n      const workStartDate = new Date(work.startDate);\r\n      const workEndDate = new Date(work.endDate);\r\n\r\n      work.subWorks.forEach((task) => {\r\n        const { startTime, endTime, repeatOption, customRepeat = {} } = task;\r\n        const [startHour, startMinute] = startTime.split(\":\").map(Number);\r\n        const [endHour, endMinute] = endTime.split(\":\").map(Number);\r\n\r\n        let validDates = [];\r\n        if (repeatOption === \"Không lặp lại\") {\r\n          validDates = [workStartDate];\r\n        } else if (repeatOption === \"Hàng ngày\") {\r\n          let currentDate = new Date(workStartDate);\r\n          while (currentDate <= workEndDate) {\r\n            validDates.push(new Date(currentDate));\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n          }\r\n        } else if (repeatOption === \"Tùy chỉnh\") {\r\n          const { repeatEvery = 1, repeatUnit = \"ngày\", startDate, repeatDays = [] } = customRepeat;\r\n          const taskStartDate = startDate ? new Date(startDate) : workStartDate;\r\n          let currentDate = new Date(taskStartDate);\r\n\r\n          if (repeatUnit === \"ngày\") {\r\n            while (currentDate <= workEndDate) {\r\n              validDates.push(new Date(currentDate));\r\n              currentDate.setDate(currentDate.getDate() + repeatEvery);\r\n            }\r\n          } else if (repeatUnit === \"tuần\") {\r\n            const dayMapping = [\"CN\", \"T2\", \"T3\", \"T4\", \"T5\", \"T6\", \"T7\"];\r\n            while (currentDate <= workEndDate) {\r\n              const dayOfWeek = dayMapping[currentDate.getDay()];\r\n              if (repeatDays.includes(dayOfWeek)) {\r\n                validDates.push(new Date(currentDate));\r\n              }\r\n              currentDate.setDate(currentDate.getDate() + 1);\r\n            }\r\n          }\r\n        }\r\n\r\n        validDates.forEach((date) => {\r\n          if (date.toDateString() === today.toDateString()) {\r\n            tasks.push({\r\n              ...task,\r\n              startTime: new Date(today.setHours(startHour, startMinute)),\r\n              endTime: new Date(today.setHours(endHour, endMinute)),\r\n            });\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    const sortedTasks = tasks.sort((a, b) => a.startTime - b.startTime);\r\n    setTasksForToday(sortedTasks);\r\n  }, [works]);\r\n\r\n  useEffect(() => {\r\n    if (mode === \"auto\") {\r\n      calculateTasksForToday();\r\n    }\r\n  }, [mode, calculateTasksForToday]);\r\n\r\n  const renderTaskOnTimeline = (task) => {\r\n    const taskStart = task.startTime;\r\n    const taskEnd = task.endTime;\r\n    const startMinutes = taskStart.getHours() * 60 + taskStart.getMinutes();\r\n    const endMinutes = taskEnd.getHours() * 60 + taskEnd.getMinutes();\r\n\r\n    return (\r\n      <div\r\n        className=\"task-block\"\r\n        style={{\r\n          position: \"absolute\",\r\n          top: `${startMinutes}px`,\r\n          height: `${endMinutes - startMinutes}px`,\r\n          left: \"100px\",\r\n          width: \"150px\",\r\n          backgroundColor: \"#007bff\",\r\n          color: \"white\",\r\n          borderRadius: \"5px\",\r\n          padding: \"5px\",\r\n        }}\r\n        key={task.name}\r\n      >\r\n        {task.name}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <header className=\"search-bar\">\r\n        <h1>Focus</h1>\r\n      </header>\r\n\r\n      <div className=\"focus-modes\">\r\n        <button\r\n          className={`focus-mode ${mode === \"auto\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"auto\")}\r\n        >\r\n          Tự động\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"manual\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"manual\")}\r\n        >\r\n          Tự chọn\r\n        </button>\r\n        <button\r\n          className={`focus-mode ${mode === \"free\" ? \"active\" : \"\"}`}\r\n          onClick={() => setMode(\"free\")}\r\n        >\r\n          Tự do\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"focus-content\">\r\n        {mode === \"auto\" && (\r\n          <div className=\"timeline-container\">\r\n            <div className=\"timeline\">\r\n              <div className=\"current-time-line\" style={{ top: `${currentTime.getHours() * 60 + currentTime.getMinutes()}px` }}></div>\r\n              {Array.from({ length: 24 }).map((_, hour) => (\r\n                <div key={hour} className=\"hour-marker\" style={{ top: `${hour * 60}px` }}>\r\n                  {hour}:00\r\n                </div>\r\n              ))}\r\n              {tasksForToday.map((task) => renderTaskOnTimeline(task))}\r\n            </div>\r\n            <div className=\"task-list\">\r\n              <h2>Task cho hôm nay</h2>\r\n              <p>Tổng số task: <strong>{tasksForToday.length}</strong></p>\r\n              <table className=\"task-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>STT</th>\r\n                    <th>Tên Task</th>\r\n                    <th>Thời gian</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {tasksForToday.map((task, index) => (\r\n                    <tr key={index}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{task.name}</td>\r\n                      <td>\r\n                        {task.startTime.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })} -{\" \"}\r\n                        {task.endTime.toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Focus;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}