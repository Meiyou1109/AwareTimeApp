{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { BiSearchAlt2 } from \"react-icons/bi\";\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\nimport \"aos/dist/aos.css\";\nimport \"./styles/project.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const [works, setWorks] = useState({\n    doNow: [],\n    schedule: [],\n    delegate: [],\n    drop: []\n  });\n  const [completedWorks, setCompletedWorks] = useState([]);\n  const [viewMode, setViewMode] = useState(\"ongoing\");\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]); // State to track expanded works\n\n  // Load data from localStorage when component mounts\n  useEffect(() => {\n    const storedWorks = JSON.parse(localStorage.getItem(\"works\")) || {\n      doNow: [],\n      schedule: [],\n      delegate: [],\n      drop: []\n    };\n    const storedCompletedWorks = JSON.parse(localStorage.getItem(\"worksdone\")) || [];\n    setWorks(storedWorks);\n    setCompletedWorks(storedCompletedWorks);\n  }, []);\n\n  // Save works and completed works to localStorage whenever they change\n  useEffect(() => {\n    localStorage.setItem(\"works\", JSON.stringify(works));\n    localStorage.setItem(\"worksdone\", JSON.stringify(completedWorks));\n  }, [works, completedWorks]);\n\n  // Filter works based on view mode (ongoing/completed) and search query\n  const filteredWorks = useMemo(() => {\n    const allOngoingWorks = Object.values(works).flat(); // Merge all works from different categories\n\n    if (viewMode === \"ongoing\") {\n      // Show only works that are not completed\n      return allOngoingWorks.filter(work => !completedWorks.some(completedWork => completedWork.id === work.id));\n    }\n    if (viewMode === \"completed\") {\n      // Show only completed works (unique)\n      return completedWorks.filter((completedWork, index, self) => self.findIndex(work => work.id === completedWork.id) === index // Remove duplicates\n      );\n    }\n    return [];\n  }, [viewMode, works, completedWorks]);\n\n  // Toggle expand/collapse for a work item\n  const toggleExpand = workId => {\n    setExpandedWorkIds(prevExpandedWorkIds => prevExpandedWorkIds.includes(workId) ? prevExpandedWorkIds.filter(id => id !== workId) : [...prevExpandedWorkIds, workId]);\n  };\n  const handleCompleteWork = workId => {\n    setWorks(prevWorks => {\n      const updatedWorks = {\n        ...prevWorks\n      };\n      const workType = Object.keys(updatedWorks).find(type => updatedWorks[type].some(work => work.id === workId));\n      if (!workType) return prevWorks;\n      const workIndex = updatedWorks[workType].findIndex(work => work.id === workId);\n      if (workIndex === -1) return prevWorks;\n      const completedWork = updatedWorks[workType][workIndex];\n      updatedWorks[workType] = updatedWorks[workType].filter(work => work.id !== workId);\n      setCompletedWorks(prevCompletedWorks => [...prevCompletedWorks, completedWork]);\n      return updatedWorks;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-form\",\n    \"data-aos\": \"zoom-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        type: \"search\",\n        placeholder: `Search ${viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"} works`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"search-bt\",\n        children: /*#__PURE__*/_jsxDEV(BiSearchAlt2, {\n          size: 22\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"view-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"ongoing\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"ongoing\"),\n        children: \"On Going Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: viewMode === \"completed\" ? \"active\" : \"\",\n        onClick: () => setViewMode(\"completed\"),\n        children: \"Completed Works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item-list\",\n      children: filteredWorks.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        id: \"no-todo\",\n        children: viewMode === \"ongoing\" ? \"No ongoing works\" : \"No completed works\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredWorks.flatMap(work => {\n          const workElements = [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"work-item\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"work-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"\",\n                className: \"item-name\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: viewMode === \"completed\",\n                  onChange: () => handleCompleteWork(work.id),\n                  readOnly: viewMode === \"completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, this), work.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"work-actions\",\n                children: [viewMode === \"ongoing\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  id: \"del-bt\",\n                  children: /*#__PURE__*/_jsxDEV(AiFillDelete, {\n                    size: 20,\n                    color: \"#FF6969\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"expand-bt\",\n                  onClick: () => toggleExpand(work.id),\n                  children: expandedWorkIds.includes(work.id) ? /*#__PURE__*/_jsxDEV(FaChevronUp, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 62\n                  }, this) : /*#__PURE__*/_jsxDEV(FaChevronDown, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 80\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)\n          }, work.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)];\n\n          // If expanded, add task items between works\n          if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\n            work.subWorks.forEach((task, index) => {\n              workElements.push(/*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"work-item task-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"task-details\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [task.name, \" - Description: \", task.description, \", Time: \", task.startTime, \" - \", task.endTime, \", Repeat: \", task.repeatOption]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this)\n              }, `${work.id}-task-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this));\n            });\n          }\n          return workElements;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(Project, \"Elwv9GVjDhwTxv5cqlb2smFNqJ4=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","AiFillDelete","BiSearchAlt2","FaChevronDown","FaChevronUp","jsxDEV","_jsxDEV","Project","_s","works","setWorks","doNow","schedule","delegate","drop","completedWorks","setCompletedWorks","viewMode","setViewMode","searchQuery","setSearchQuery","expandedWorkIds","setExpandedWorkIds","storedWorks","JSON","parse","localStorage","getItem","storedCompletedWorks","setItem","stringify","filteredWorks","allOngoingWorks","Object","values","flat","filter","work","some","completedWork","id","index","self","findIndex","toggleExpand","workId","prevExpandedWorkIds","includes","handleCompleteWork","prevWorks","updatedWorks","workType","keys","find","type","workIndex","prevCompletedWorks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","size","onClick","length","flatMap","workElements","htmlFor","checked","readOnly","name","color","subWorks","forEach","task","push","description","startTime","endTime","repeatOption","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { AiFillDelete } from \"react-icons/ai\";\r\nimport { BiSearchAlt2 } from \"react-icons/bi\";\r\nimport { FaChevronDown, FaChevronUp } from \"react-icons/fa\";\r\nimport \"aos/dist/aos.css\";\r\nimport \"./styles/project.css\";\r\n\r\nconst Project = () => {\r\n  const [works, setWorks] = useState({ doNow: [], schedule: [], delegate: [], drop: [] });\r\n  const [completedWorks, setCompletedWorks] = useState([]);\r\n  const [viewMode, setViewMode] = useState(\"ongoing\");\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [expandedWorkIds, setExpandedWorkIds] = useState([]); // State to track expanded works\r\n\r\n  // Load data from localStorage when component mounts\r\n  useEffect(() => {\r\n    const storedWorks = JSON.parse(localStorage.getItem(\"works\")) || { doNow: [], schedule: [], delegate: [], drop: [] };\r\n    const storedCompletedWorks = JSON.parse(localStorage.getItem(\"worksdone\")) || [];\r\n    setWorks(storedWorks);\r\n    setCompletedWorks(storedCompletedWorks);\r\n  }, []);\r\n\r\n  // Save works and completed works to localStorage whenever they change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"works\", JSON.stringify(works));\r\n    localStorage.setItem(\"worksdone\", JSON.stringify(completedWorks));\r\n  }, [works, completedWorks]);\r\n\r\n  // Filter works based on view mode (ongoing/completed) and search query\r\n  const filteredWorks = useMemo(() => {\r\n    const allOngoingWorks = Object.values(works).flat(); // Merge all works from different categories\r\n\r\n    if (viewMode === \"ongoing\") {\r\n      // Show only works that are not completed\r\n      return allOngoingWorks.filter(\r\n        (work) => !completedWorks.some((completedWork) => completedWork.id === work.id)\r\n      );\r\n    }\r\n\r\n    if (viewMode === \"completed\") {\r\n      // Show only completed works (unique)\r\n      return completedWorks.filter(\r\n        (completedWork, index, self) =>\r\n          self.findIndex((work) => work.id === completedWork.id) === index // Remove duplicates\r\n      );\r\n    }\r\n\r\n    return [];\r\n  }, [viewMode, works, completedWorks]);\r\n\r\n  // Toggle expand/collapse for a work item\r\n  const toggleExpand = (workId) => {\r\n    setExpandedWorkIds((prevExpandedWorkIds) =>\r\n      prevExpandedWorkIds.includes(workId)\r\n        ? prevExpandedWorkIds.filter((id) => id !== workId)\r\n        : [...prevExpandedWorkIds, workId]\r\n    );\r\n  };\r\n\r\n  const handleCompleteWork = (workId) => {\r\n    setWorks((prevWorks) => {\r\n      const updatedWorks = { ...prevWorks };\r\n      const workType = Object.keys(updatedWorks).find((type) =>\r\n        updatedWorks[type].some((work) => work.id === workId)\r\n      );\r\n\r\n      if (!workType) return prevWorks;\r\n\r\n      const workIndex = updatedWorks[workType].findIndex((work) => work.id === workId);\r\n      if (workIndex === -1) return prevWorks;\r\n\r\n      const completedWork = updatedWorks[workType][workIndex];\r\n      updatedWorks[workType] = updatedWorks[workType].filter((work) => work.id !== workId);\r\n\r\n      setCompletedWorks((prevCompletedWorks) => [...prevCompletedWorks, completedWork]);\r\n      return updatedWorks;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-form\" data-aos=\"zoom-in\">\r\n      <div className=\"search-bar\">\r\n        <h1>Projects</h1>\r\n        <input\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n          type=\"search\"\r\n          placeholder={`Search ${viewMode === \"ongoing\" ? \"ongoing\" : \"completed\"} works`}\r\n        />\r\n        <button id=\"search-bt\">\r\n          <BiSearchAlt2 size={22} />\r\n        </button>\r\n      </div>\r\n      <div className=\"view-toggle\">\r\n        <button\r\n          className={viewMode === \"ongoing\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"ongoing\")}\r\n        >\r\n          On Going Works\r\n        </button>\r\n        <button\r\n          className={viewMode === \"completed\" ? \"active\" : \"\"}\r\n          onClick={() => setViewMode(\"completed\")}\r\n        >\r\n          Completed Works\r\n        </button>\r\n      </div>\r\n      <div className=\"item-list\">\r\n        {filteredWorks.length === 0 ? (\r\n          <h3 id=\"no-todo\">\r\n            {viewMode === \"ongoing\" ? \"No ongoing works\" : \"No completed works\"}\r\n          </h3>\r\n        ) : (\r\n          <ul>\r\n            {filteredWorks.flatMap((work) => {\r\n              const workElements = [\r\n                <li key={work.id} className=\"work-item\">\r\n                  <div className=\"work-header\">\r\n                    <label htmlFor=\"\" className=\"item-name\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={viewMode === \"completed\"}\r\n                        onChange={() => handleCompleteWork(work.id)}\r\n                        readOnly={viewMode === \"completed\"}\r\n                      />\r\n                      {work.name} {/* Display work name */}\r\n                    </label>\r\n                    <div className=\"work-actions\">\r\n                      {viewMode === \"ongoing\" && (\r\n                        <button id=\"del-bt\">\r\n                          <AiFillDelete size={20} color=\"#FF6969\" />\r\n                        </button>\r\n                      )}\r\n                      <button className=\"expand-bt\" onClick={() => toggleExpand(work.id)}>\r\n                        {expandedWorkIds.includes(work.id) ? <FaChevronUp /> : <FaChevronDown />}\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </li>\r\n              ];\r\n\r\n              // If expanded, add task items between works\r\n              if (expandedWorkIds.includes(work.id) && work.subWorks && work.subWorks.length > 0) {\r\n                work.subWorks.forEach((task, index) => {\r\n                  workElements.push(\r\n                    <li key={`${work.id}-task-${index}`} className=\"work-item task-item\">\r\n                      <div className=\"task-details\">\r\n                        <span>{task.name} - Description: {task.description}, Time: {task.startTime} - {task.endTime}, Repeat: {task.repeatOption}</span>\r\n                      </div>\r\n                    </li>\r\n                  );\r\n                });\r\n              }\r\n\r\n              return workElements;\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}