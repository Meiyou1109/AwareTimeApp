{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\meiyoudg\\\\source\\\\repos\\\\AwareTime\\\\frontend\\\\src\\\\components\\\\Secondary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport DarkMode from \"./DarkMode/Darkmode\";\nimport Notification from \"./Notification/Notification\";\nimport { IoMdNotifications } from \"react-icons/io\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Secondary = ({\n  upcomingTasks = [],\n  onOpenNotifi,\n  onCloseNotifi\n}) => {\n  _s();\n  const [dialog, setDialog] = useState({\n    isLoading: false\n  });\n  function openNotifi() {\n    setDialog({\n      isLoading: true\n    });\n    if (onOpenNotifi) onOpenNotifi();\n  }\n  function closeNotifi() {\n    setDialog({\n      isLoading: false\n    });\n    if (onCloseNotifi) onCloseNotifi();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"secondary-actions\",\n    children: [/*#__PURE__*/_jsxDEV(DarkMode, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${upcomingTasks.length ? \"bell\" : \"\"}`,\n      onClick: openNotifi,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"noti-count\",\n        children: upcomingTasks.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IoMdNotifications, {\n        size: 25,\n        color: \"#3081D0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), dialog.isLoading && /*#__PURE__*/_jsxDEV(Notification, {\n      closeNotifi: closeNotifi,\n      upcomingTasks: upcomingTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Secondary, \"tmGqxMfDQmGIeo02Tk0JnwtbhdU=\");\n_c = Secondary;\nexport default Secondary;\nvar _c;\n$RefreshReg$(_c, \"Secondary\");","map":{"version":3,"names":["React","useState","DarkMode","Notification","IoMdNotifications","jsxDEV","_jsxDEV","Secondary","upcomingTasks","onOpenNotifi","onCloseNotifi","_s","dialog","setDialog","isLoading","openNotifi","closeNotifi","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","id","size","color","_c","$RefreshReg$"],"sources":["C:/Users/meiyoudg/source/repos/AwareTime/frontend/src/components/Secondary.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport DarkMode from \"./DarkMode/Darkmode\";\r\nimport Notification from \"./Notification/Notification\";\r\nimport { IoMdNotifications } from \"react-icons/io\";\r\n\r\nconst Secondary = ({ upcomingTasks = [], onOpenNotifi, onCloseNotifi }) => {\r\n  const [dialog, setDialog] = useState({ isLoading: false });\r\n\r\n  function openNotifi() {\r\n    setDialog({ isLoading: true });\r\n    if(onOpenNotifi) onOpenNotifi();\r\n  }\r\n\r\n  function closeNotifi() {\r\n    setDialog({ isLoading: false });\r\n    if(onCloseNotifi) onCloseNotifi();\r\n  }\r\n\r\n  return (\r\n    <div className=\"secondary-actions\">\r\n      <DarkMode />\r\n      <button\r\n        className={`${upcomingTasks.length ? \"bell\" : \"\"}`}\r\n        onClick={openNotifi}\r\n      >\r\n        <span id=\"noti-count\">{upcomingTasks.length}</span>\r\n        <IoMdNotifications size={25} color=\"#3081D0\" />\r\n      </button>\r\n      {dialog.isLoading && (\r\n        <Notification\r\n          closeNotifi={closeNotifi}\r\n          upcomingTasks={upcomingTasks}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Secondary;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,YAAY,MAAM,6BAA6B;AACtD,SAASC,iBAAiB,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAC;EAAEC,aAAa,GAAG,EAAE;EAAEC,YAAY;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC;IAAEa,SAAS,EAAE;EAAM,CAAC,CAAC;EAE1D,SAASC,UAAUA,CAAA,EAAG;IACpBF,SAAS,CAAC;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IAC9B,IAAGL,YAAY,EAAEA,YAAY,CAAC,CAAC;EACjC;EAEA,SAASO,WAAWA,CAAA,EAAG;IACrBH,SAAS,CAAC;MAAEC,SAAS,EAAE;IAAM,CAAC,CAAC;IAC/B,IAAGJ,aAAa,EAAEA,aAAa,CAAC,CAAC;EACnC;EAEA,oBACEJ,OAAA;IAAKW,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCZ,OAAA,CAACJ,QAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZhB,OAAA;MACEW,SAAS,EAAE,GAAGT,aAAa,CAACe,MAAM,GAAG,MAAM,GAAG,EAAE,EAAG;MACnDC,OAAO,EAAET,UAAW;MAAAG,QAAA,gBAEpBZ,OAAA;QAAMmB,EAAE,EAAC,YAAY;QAAAP,QAAA,EAAEV,aAAa,CAACe;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACnDhB,OAAA,CAACF,iBAAiB;QAACsB,IAAI,EAAE,EAAG;QAACC,KAAK,EAAC;MAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC,EACRV,MAAM,CAACE,SAAS,iBACfR,OAAA,CAACH,YAAY;MACXa,WAAW,EAAEA,WAAY;MACzBR,aAAa,EAAEA;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CA/BIJ,SAAS;AAAAqB,EAAA,GAATrB,SAAS;AAiCf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}